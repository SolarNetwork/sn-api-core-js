// https://github.com/SolarNetwork/sn-api-core-js Version 0.23.1-dev.0. Copyright 2022 SolarNetwork Foundation.
!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? t(exports, require("d3-array"), require("d3-collection"), require("d3-time"), require("d3-time-format"), require("crypto-js/enc-base64"), require("crypto-js/enc-hex"), require("crypto-js/hmac-sha256"), require("crypto-js/sha256"), require("uri-js")) : "function" == typeof define && define.amd ? define([ "exports", "d3-array", "d3-collection", "d3-time", "d3-time-format", "crypto-js/enc-base64", "crypto-js/enc-hex", "crypto-js/hmac-sha256", "crypto-js/sha256", "uri-js" ], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).sn = {}, e.d3, e.d3, e.d3, e.d3, e.CryptoJS.Base64, e.CryptoJS.Hex, e.CryptoJS.HmacSHA256, e.CryptoJS.SHA256, e.URI);
}(this, function(e, _, R, c, t, x, L, z, F, q) {
    "use strict";
    function n(e) {
        return e && "object" == typeof e && "default" in e ? e : {
            default: e
        };
    }
    var W = n(x), r = n(L), V = n(z), B = n(F);
    x = Object.freeze({
        timeNormalizeDataArray: function(e, t) {
            var n = 1e3 * t.level;
            if (!Array.isArray(e) || e.length < 2) return e;
            for (var r = 0; r < e.length - 1; ) {
                var i = e[r], a = i.date.getTime(), o = a + n, u = e[r + 1].date.getTime();
                if (o < u) {
                    for (var s = [ r + 1, 0 ], c = a + n; c < u; c += n) {
                        var l, h = Object.create(Object.getPrototypeOf(i), Object.getOwnPropertyDescriptors(i));
                        for (l in h) h[l] = null;
                        h.date = new Date(c), s.push(h);
                    }
                    Array.prototype.splice.apply(e, s), r += s.length;
                }
                r += 1;
            }
        }
    });
    function K(e) {
        return (K = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        })(e);
    }
    function l(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function Q(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, r.key, r);
        }
    }
    function a(e, t, n) {
        return t && Q(e.prototype, t), n && Q(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function i(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && Y(e, t);
    }
    function o(e) {
        return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        })(e);
    }
    function Y(e, t) {
        return (Y = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t, e;
        })(e, t);
    }
    function u(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function s(n) {
        var r = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
                !0;
            } catch (e) {
                return !1;
            }
        }();
        return function() {
            var e, t = o(n), t = (e = r ? (e = o(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments), 
            this);
            if (e && ("object" == typeof e || "function" == typeof e)) return e;
            if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
            return u(t);
        };
    }
    function G() {
        return (G = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e, t, n) {
            var r = function(e, t) {
                for (;!Object.prototype.hasOwnProperty.call(e, t) && null !== (e = o(e)); );
                return e;
            }(e, t);
            if (r) return r = Object.getOwnPropertyDescriptor(r, t), r.get ? r.get.call(arguments.length < 3 ? e : n) : r.value;
        }).apply(this, arguments);
    }
    function J(e, t) {
        return function(e) {
            if (Array.isArray(e)) return e;
        }(e) || function(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, i, a = [], o = !0, u = !1;
                try {
                    for (n = n.call(e); !(o = (r = n.next()).done) && (a.push(r.value), 
                    !t || a.length !== t); o = !0);
                } catch (e) {
                    u = !0, i = e;
                } finally {
                    try {
                        o || null == n.return || n.return();
                    } finally {
                        if (u) throw i;
                    }
                }
                return a;
            }
        }(e, t) || X(e, t) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
    }
    function X(e, t) {
        if (e) {
            if ("string" == typeof e) return Z(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return "Map" === (n = "Object" === n && e.constructor ? e.constructor.name : n) || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Z(e, t) : void 0;
        }
    }
    function Z(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
        return r;
    }
    function h(e, t) {
        var n, r = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (!r) {
            if (Array.isArray(e) || (r = X(e)) || t && e && "number" == typeof e.length) return r && (e = r), 
            n = 0, {
                s: t = function() {},
                n: function() {
                    return n >= e.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: e[n++]
                    };
                },
                e: function(e) {
                    throw e;
                },
                f: t
            };
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var i, a = !0, o = !1;
        return {
            s: function() {
                r = r.call(e);
            },
            n: function() {
                var e = r.next();
                return a = e.done, e;
            },
            e: function(e) {
                o = !0, i = e;
            },
            f: function() {
                try {
                    a || null == r.return || r.return();
                } finally {
                    if (o) throw i;
                }
            }
        };
    }
    var f = function() {
        function t(e) {
            l(this, t), this._name = e, this.constructor === t && Object.freeze(this);
        }
        return a(t, [ {
            key: "name",
            get: function() {
                return this._name;
            }
        }, {
            key: "equals",
            value: function(e) {
                return this.constructor === e.constructor ? e.name === this.name : e === this.name;
            }
        } ], [ {
            key: "enumValues",
            value: function() {
                return [];
            }
        }, {
            key: "enumsValue",
            value: function(e) {
                return Object.freeze(e.reduce(function(e, t) {
                    return e[t.name] = t, e;
                }, {}));
            }
        }, {
            key: "valueOf",
            value: function(e) {
                var t = this.enumValues();
                if (Array.isArray(t)) for (var n = 0, r = t.length; n < r; n += 1) if (e === t[n].name) return t[n];
            }
        }, {
            key: "namesFor",
            value: function(e) {
                var t = [];
                if (e) {
                    var n, r = h(e);
                    try {
                        for (r.s(); !(n = r.n()).done; ) {
                            var i = n.value;
                            t.push(i.name);
                        }
                    } catch (e) {
                        r.e(e);
                    } finally {
                        r.f();
                    }
                }
                return t;
            }
        } ]), t;
    }(), $ = function() {
        i(r, f);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e))._value = t, e.constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "value",
            get: function() {
                return this._value;
            }
        }, {
            key: "compareTo",
            value: function(e) {
                return this.value < e.value ? -1 : this.value > e.value ? 1 : 0;
            }
        } ], [ {
            key: "minimumEnumSet",
            value: function(e, t) {
                if (!e) return null;
                if (r = t ? t.get(e.name) : void 0) return r;
                var n, r = new Set(), i = h(e.constructor.enumValues());
                try {
                    for (i.s(); !(n = i.n()).done; ) {
                        var a = n.value;
                        -1 < a.compareTo(e) && r.add(a);
                    }
                } catch (e) {
                    i.e(e);
                } finally {
                    i.f();
                }
                return t && t.set(e.name, r), 0 < r.size ? r : null;
            }
        } ]), r;
    }(), d = function() {
        i(r, $);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e, t)).constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "level",
            get: function() {
                return this.value;
            }
        } ], [ {
            key: "enumValues",
            value: function() {
                return ee;
            }
        } ]), r;
    }(), ee = Object.freeze([ new d("Minute", 60), new d("FiveMinute", 300), new d("TenMinute", 600), new d("FifteenMinute", 900), new d("ThirtyMinute", 1800), new d("Hour", 3600), new d("HourOfDay", 3600), new d("SeasonalHourOfDay", 3600), new d("Day", 86400), new d("DayOfWeek", 86400), new d("SeasonalDayOfWeek", 86400), new d("Week", 604800), new d("WeekOfYear", 604800), new d("Month", 2419200), new d("Year", 31536e3), new d("RunningTotal", Number.MAX_SAFE_INTEGER) ]), y = d.enumsValue(ee), te = t.utcFormat("%Y-%m-%d %H:%M:%S.%LZ"), L = t.utcFormat("%Y-%m-%d %H:%M"), p = t.utcFormat("%Y-%m-%dT%H:%M"), ne = t.utcFormat("%Y-%m-%d"), re = t.utcParse("%Y-%m-%d %H:%M:%S.%LZ"), ie = t.utcParse("%Y-%m-%d %H:%M");
    function ae(e, t) {
        return "" + e.getUTCFullYear() + (e.getUTCMonth() < 9 ? "0" : "") + (e.getUTCMonth() + 1) + (e.getUTCDate() < 10 ? "0" : "") + e.getUTCDate() + (t ? "T" + (e.getUTCHours() < 10 ? "0" : "") + e.getUTCHours() + (e.getUTCMinutes() < 10 ? "0" : "") + e.getUTCMinutes() + (e.getUTCSeconds() < 10 ? "0" : "") + e.getUTCSeconds() + "Z" : "");
    }
    function oe(e) {
        return e ? e.date || (e.localDate ? ie(e.localDate + (e.localTime ? " " + e.localTime : " 00:00")) : e.created ? re(e.created) || t.isoParse(e.created) : void 0) : null;
    }
    z = Object.freeze({
        datumDate: oe,
        rollingQueryDateRange: function(e, t, n) {
            function r(e, t) {
                var n = e.ceil(t);
                return n = n.getTime() === t.getTime() ? e.offset(n, 1) : n;
            }
            function i(e) {
                e = isNaN(Number(t)) ? void 0 !== t[e] ? Number(t[e]) : 1 : t;
                return e = "number" != typeof e ? 1 : e;
            }
            var a, o, u, s;
            return n = n || new Date(), {
                start: e.compareTo(y.Hour) < 0 ? (a = i("numHours"), o = y.Hour, 
                u = r(c.utcMinute, n), s = Math.min(30, e.level / 60), u.setUTCMinutes(u.getUTCMinutes() + s - u.getUTCMinutes() % s, 0, 0), 
                c.utcHour.offset(u, -a)) : y.Month.equals(e) ? (a = i("numYears"), 
                o = y.Year, u = r(c.utcMonth, n), c.utcYear.offset(c.utcMonth.floor(n), -a)) : y.Day.equals(e) ? (a = i("numMonths"), 
                o = y.Month, u = r(c.utcDay, n), c.utcMonth.offset(c.utcDay.floor(n), -a)) : (a = i("numDays"), 
                o = y.Day, u = r(c.utcHour, n), c.utcDay.offset(c.utcHour.floor(u), -a)),
                end: u,
                timeUnit: o,
                timeCount: a,
                aggregate: e
            };
        }
    });
    function ue(e, t, n) {
        var r, i, a, o, u, s = 0, c = e.length - 1;
        if (0 < c) for (;s < _.max(e.map(function(e) {
            return e.values.length;
        })); ) {
            for (a = void 0, r = 0; r <= c; r++) if (!(e[r].values.length <= s) && (e[i = r < c ? r + 1 : 0].values.length <= s || e[r].values[s].date.getTime() < e[i].values[s].date.getTime())) {
                if (a = {
                    date: e[r].values[s].date,
                    sourceId: e[i].key
                }, t) for (o in t) Object.prototype.hasOwnProperty.call(t, o) && (a[o] = t[o]);
                n && (u = e[i].values.length > s ? s : 0 < s ? s - 1 : null, n(a, e[i].key, null !== u ? e[i].values[u] : void 0)), 
                e[i].values.splice(s, 0, a);
            }
            void 0 === a && s++;
        }
    }
    var F = Object.freeze({
        aggregateNestedDataLayers: function(e, t, n, r, i) {
            var a, o, u, s, c, l, h, f = e.length, d = n ? n.length : 0, y = r ? r.length : 0, p = e[0].values.length;
            if (0 < p) {
                for (h = [], a = 0; a < p; a += 1) {
                    if (s = e[0].values[a], l = {}, void 0 !== i) for (c in i) Object.prototype.hasOwnProperty.call(i, c) && (l[c] = i[c]);
                    for (u = 0; u < d; u += 1) l[n[u]] = s[n[u]];
                    for (u = 0; u < y; u += 1) l[r[u]] = 0;
                    for (o = 0; o < f; o += 1) for (u = 0; u < y; u += 1) void 0 !== (c = e[o].values[a][r[u]]) && (l[r[u]] += c);
                    h.push(l);
                }
                e = [ {
                    key: t,
                    values: h
                } ];
            }
            return e;
        },
        groupedBySourceMetricDataArray: function(e, t, r, n) {
            function i(e) {
                return e[t];
            }
            var a = "function" == typeof n ? n : _.sum;
            return ue(n = R.nest().key(function(e) {
                return r && r.has(e.sourceId) ? r.get(e.sourceId) : e.sourceId;
            }).sortKeys(_.ascending).key(function(e) {
                return e.localDate + " " + e.localTime;
            }).rollup(function(e) {
                var t = {
                    date: oe(e[0])
                }, n = e[0].sourceId;
                return t[n = r && r.has(n) ? r.get(n) : n] = a(e, i), t;
            }).entries(e).map(function(e) {
                return {
                    key: e.key,
                    values: e.values.map(function(e) {
                        return e.value;
                    })
                };
            }), null, function(e, t) {
                e[t] = null;
            }), n.reduce(function(e, n) {
                return e ? (e.forEach(function(e, t) {
                    t = n.values[t][n.key];
                    e[n.key] = t;
                }), e) : n.values;
            }, null);
        },
        normalizeNestedStackDataByDate: ue
    }), v = function() {
        i(n, f);
        var t = s(n);
        function n(e) {
            return l(this, n), (e = t.call(this, e)).constructor === n && Object.freeze(u(e)), 
            e;
        }
        return a(n, null, [ {
            key: "enumValues",
            value: function() {
                return se;
            }
        } ]), n;
    }(), se = Object.freeze([ new v("Active"), new v("Disabled") ]), ce = v.enumsValue(se), m = function() {
        i(n, f);
        var t = s(n);
        function n(e) {
            return l(this, n), (e = t.call(this, e)).constructor === n && Object.freeze(u(e)), 
            e;
        }
        return a(n, null, [ {
            key: "enumValues",
            value: function() {
                return le;
            }
        } ]), n;
    }(), le = Object.freeze([ new m("ReadNodeData"), new m("User") ]), he = m.enumsValue(le), g = function() {
        i(n, f);
        var t = s(n);
        function n(e) {
            return l(this, n), (e = t.call(this, e)).constructor === n && Object.freeze(u(e)), 
            e;
        }
        return a(n, null, [ {
            key: "enumValues",
            value: function() {
                return fe;
            }
        } ]), n;
    }(), fe = Object.freeze([ new g("Average"), new g("Sum"), new g("Difference") ]), de = g.enumsValue(fe), ye = function() {
        i(n, f);
        var t = s(n);
        function n(e) {
            return l(this, n), (e = t.call(this, e)).constructor === n && Object.freeze(u(e)), 
            e;
        }
        return a(n, null, [ {
            key: "enumValues",
            value: function() {
                return pe;
            }
        } ]), n;
    }(), pe = Object.freeze([ new ye("Reset") ]), ve = ye.enumsValue(pe), k = function() {
        function n(e, t) {
            l(this, n), this._max = 0 < e ? +e : 0, this._offset = 0 < t ? +t : 0;
        }
        return a(n, [ {
            key: "max",
            get: function() {
                return this._max;
            }
        }, {
            key: "offset",
            get: function() {
                return this._offset;
            }
        }, {
            key: "withOffset",
            value: function(e) {
                return new n(this.max, e);
            }
        }, {
            key: "toUriEncoding",
            value: function() {
                var e = "";
                return 0 < this.max && (e += "max=" + this.max), 0 < this.offset && (0 < e.length && (e += "&"), 
                e += "offset=" + this.offset), e;
            }
        } ]), n;
    }(), U = function() {
        function n(e, t) {
            l(this, n), this._key = e, this._descending = !!t;
        }
        return a(n, [ {
            key: "key",
            get: function() {
                return this._key;
            }
        }, {
            key: "descending",
            get: function() {
                return this._descending;
            }
        }, {
            key: "toUriEncoding",
            value: function(e, t) {
                var t = t || "sorts", n = void 0 !== e && 0 <= e ? encodeURIComponent(t + "[" + e + "].key") + "=" : "key=";
                return n += encodeURIComponent(this.key), this.descending && (n += void 0 !== e && 0 <= e ? "&" + encodeURIComponent(t + "[" + e + "].descending") + "=true" : "&descending=true"), 
                n;
            }
        } ]), n;
    }(), me = function() {
        function t(e) {
            l(this, t), this.props = e instanceof t ? e.properties() : "object" === K(e) ? e : {};
        }
        return a(t, [ {
            key: "prop",
            value: function(e, t) {
                return 1 === arguments.length ? this.props[e] : (null === t ? delete this.props[e] : this.props[e] = t, 
                this);
            }
        }, {
            key: "properties",
            value: function(e) {
                if (e) {
                    for (var t = 0, n = Object.keys(e); t < n.length; t++) {
                        var r = n[t];
                        this.prop(r, e[r]);
                    }
                    return this;
                }
                return Object.assign({}, this.props);
            }
        }, {
            key: "toUriEncoding",
            value: function(i, a) {
                for (var o = this, u = "", s = 0, c = Object.keys(this.props); s < c.length; s++) !function() {
                    var n = c[s], e = (0 < u.length && (u += "&"), o.props[n]), r = !1;
                    if (a) {
                        var t = a(n, e);
                        if (null === t) return;
                        Array.isArray(t) && 1 < t.length && (n = t[0], e = t[1], 
                        2 < t.length && (r = !!t[2]));
                    }
                    if ("function" == typeof e.toUriEncoding) return u += e.toUriEncoding(i ? encodeURIComponent(i) + "." + n : n);
                    i && (u += encodeURIComponent(i) + "."), u += encodeURIComponent(n) + "=", 
                    Array.isArray(e) ? e.forEach(function(e, t) {
                        0 < t && (u += r ? "&" + encodeURIComponent(n) + "=" : ","), 
                        e instanceof f && (e = e.name), u += encodeURIComponent(e);
                    }) : (e instanceof f && (e = e.name), u += encodeURIComponent(e));
                }();
                return u;
            }
        }, {
            key: "toUriEncodingWithSorting",
            value: function(e, t, n, r) {
                var i = this.toUriEncoding(n, r);
                return Array.isArray(e) && e.forEach(function(e, t) {
                    e instanceof U && (0 < i.length && (i += "&"), i += e.toUriEncoding(t));
                }), t instanceof k && ((n = t.toUriEncoding()) && (0 < i.length && (i += "&"), 
                i += n)), i;
            }
        } ]), t;
    }(), ge = "country", ke = "elevation", Ue = "latitude", be = "locality", Ae = "longitude", we = "postalCode", Ie = "stateOrProvince", Se = "timeZoneId", De = function() {
        i(n, me);
        var t = s(n);
        function n(e) {
            return l(this, n), t.call(this, e);
        }
        return a(n, [ {
            key: "id",
            get: function() {
                return this.prop("id");
            },
            set: function(e) {
                this.prop("id", e);
            }
        }, {
            key: "name",
            get: function() {
                return this.prop("name");
            },
            set: function(e) {
                this.prop("name", e);
            }
        }, {
            key: "country",
            get: function() {
                return this.prop(ge);
            },
            set: function(e) {
                this.prop(ge, e);
            }
        }, {
            key: "region",
            get: function() {
                return this.prop("region");
            },
            set: function(e) {
                this.prop("region", e);
            }
        }, {
            key: "stateOrProvince",
            get: function() {
                return this.prop(Ie);
            },
            set: function(e) {
                this.prop(Ie, e);
            }
        }, {
            key: "locality",
            get: function() {
                return this.prop(be);
            },
            set: function(e) {
                this.prop(be, e);
            }
        }, {
            key: "postalCode",
            get: function() {
                return this.prop(we);
            },
            set: function(e) {
                this.prop(we, e);
            }
        }, {
            key: "street",
            get: function() {
                return this.prop("street");
            },
            set: function(e) {
                this.prop("street", e);
            }
        }, {
            key: "latitude",
            get: function() {
                return this.prop(Ue);
            },
            set: function(e) {
                this.prop(Ue, e);
            }
        }, {
            key: "longitude",
            get: function() {
                return this.prop(Ae);
            },
            set: function(e) {
                this.prop(Ae, e);
            }
        }, {
            key: "elevation",
            get: function() {
                return this.prop(ke);
            },
            set: function(e) {
                this.prop(ke, e);
            }
        }, {
            key: "timeZoneId",
            get: function() {
                return this.prop(Se);
            },
            set: function(e) {
                this.prop(Se, e);
            }
        } ]), n;
    }(), Me = "aggregation", Te = "combiningType", Pe = "dataPath", Oe = "endDate", Ne = "locationIds", Ce = "location", Ee = "metadataFilter", He = "mostRecent", je = "nodeIdMaps", _e = "nodeIds", Re = "partialAggregation", xe = "sourceIdMaps", Le = "sourceIds", ze = "startDate", Fe = "streamIds", qe = "userIds", We = "withoutTotalResultsCount";
    var b = function() {
        i(n, me);
        var t = s(n);
        function n(e) {
            return l(this, n), t.call(this, e);
        }
        return a(n, [ {
            key: "nodeId",
            get: function() {
                var e = this.nodeIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.nodeIds = e ? [ e ] : null;
            }
        }, {
            key: "nodeIds",
            get: function() {
                return this.prop(_e);
            },
            set: function(e) {
                this.prop(_e, Array.isArray(e) ? e : null);
            }
        }, {
            key: "locationId",
            get: function() {
                var e = this.locationIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.locationIds = e ? [ e ] : null;
            }
        }, {
            key: "locationIds",
            get: function() {
                return this.prop(Ne);
            },
            set: function(e) {
                this.prop(Ne, Array.isArray(e) ? e : null);
            }
        }, {
            key: "sourceId",
            get: function() {
                var e = this.sourceIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.sourceIds = e ? [ e ] : null;
            }
        }, {
            key: "sourceIds",
            get: function() {
                return this.prop(Le);
            },
            set: function(e) {
                this.prop(Le, Array.isArray(e) ? e : null);
            }
        }, {
            key: "streamId",
            get: function() {
                var e = this.streamIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.streamIds = e ? [ e ] : null;
            }
        }, {
            key: "streamIds",
            get: function() {
                return this.prop(Fe);
            },
            set: function(e) {
                this.prop(Fe, Array.isArray(e) ? e : null);
            }
        }, {
            key: "userId",
            get: function() {
                var e = this.userIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.userIds = e ? [ e ] : null;
            }
        }, {
            key: "userIds",
            get: function() {
                return this.prop(qe);
            },
            set: function(e) {
                this.prop(qe, Array.isArray(e) ? e : null);
            }
        }, {
            key: "mostRecent",
            get: function() {
                return !!this.prop(He);
            },
            set: function(e) {
                this.prop(He, !!e);
            }
        }, {
            key: "startDate",
            get: function() {
                return this.prop(ze);
            },
            set: function(e) {
                this.prop(ze, e);
            }
        }, {
            key: "endDate",
            get: function() {
                return this.prop(Oe);
            },
            set: function(e) {
                this.prop(Oe, e);
            }
        }, {
            key: "dataPath",
            get: function() {
                return this.prop(Pe);
            },
            set: function(e) {
                this.prop(Pe, e);
            }
        }, {
            key: "aggregation",
            get: function() {
                return this.prop(Me);
            },
            set: function(e) {
                this.prop(Me, e instanceof d ? e : null);
            }
        }, {
            key: "partialAggregation",
            get: function() {
                return this.prop(Re);
            },
            set: function(e) {
                this.prop(Re, e instanceof d ? e : null);
            }
        }, {
            key: "tags",
            get: function() {
                return this.prop("tags");
            },
            set: function(e) {
                this.prop("tags", Array.isArray(e) ? e : null);
            }
        }, {
            key: "location",
            get: function() {
                return this.prop(Ce);
            },
            set: function(e) {
                this.prop(Ce, e instanceof De ? e : null);
            }
        }, {
            key: "query",
            get: function() {
                return this.prop("query");
            },
            set: function(e) {
                this.prop("query", e);
            }
        }, {
            key: "metadataFilter",
            get: function() {
                return this.prop(Ee);
            },
            set: function(e) {
                this.prop(Ee, e);
            }
        }, {
            key: "withoutTotalResultsCount",
            get: function() {
                return this.prop(We);
            },
            set: function(e) {
                this.prop(We, !!e);
            }
        }, {
            key: "combiningType",
            get: function() {
                return this.prop(Te);
            },
            set: function(e) {
                this.prop(Te, e instanceof g ? e : null);
            }
        }, {
            key: "nodeIdMaps",
            get: function() {
                return this.prop(je);
            },
            set: function(e) {
                this.prop(je, e instanceof Map ? e : null);
            }
        }, {
            key: "sourceIdMaps",
            get: function() {
                return this.prop(xe);
            },
            set: function(e) {
                this.prop(xe, e instanceof Map ? e : null);
            }
        }, {
            key: "toUriEncoding",
            value: function(e, t) {
                return G(o(n.prototype), "toUriEncoding", this).call(this, e, t || Ve);
            }
        } ]), n;
    }();
    function Ve(e, t) {
        if (e === _e || e === Ne || e === Le || e === qe) {
            if (Array.isArray(t) && 1 === t.length) return [ e.substring(0, e.length - 1), t[0] ];
        } else {
            if (e === ze || e === Oe) return [ e, p(t) ];
            if (e === He && !t) return null;
            if (e === je || e === xe) return (t = function(e) {
                if (!(e instanceof Map && 0 < e.size)) return null;
                var t, n = [], r = h(e);
                try {
                    for (r.s(); !(t = r.n()).done; ) {
                        var i = t.value;
                        i[1] instanceof Set && n.push("".concat(i[0], ":").concat(Array.from(i[1]).join(",")));
                    }
                } catch (e) {
                    r.e(e);
                } finally {
                    r.f();
                }
                return n;
            }(t)) ? [ e, t, !0 ] : null;
        }
        return e;
    }
    var Be = function() {
        i(r, f);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e))._key = t, e.constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "key",
            get: function() {
                return this._key;
            }
        } ], [ {
            key: "valueOf",
            value: function(e) {
                var t = this.enumValues();
                if (Array.isArray(t)) for (var n = 0, r = t.length; n < r; n += 1) {
                    if (e === t[n].key) return t[n];
                    if (e === t[n].name) return t[n];
                }
            }
        } ]), r;
    }(), A = function() {
        i(r, Be);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e, t)).constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, null, [ {
            key: "enumValues",
            value: function() {
                return Ke;
            }
        } ]), r;
    }(), Ke = Object.freeze([ new A("CalculatedAt", "at"), new A("CalculatedAtDifference", "atd"), new A("NearestDifference", "diff"), new A("Difference", "delta"), new A("DifferenceWithin", "change") ]), Qe = A.enumsValue(Ke), w = function() {
        i(r, f);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e))._bitNumber = t, e.constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "bitmaskBitNumber",
            get: function() {
                return this._bitNumber;
            }
        }, {
            key: "bitmaskBitOffset",
            get: function() {
                return this._bitNumber - 1;
            }
        } ], [ {
            key: "enumForBitNumber",
            value: function(e, t) {
                var n, r = h(t);
                try {
                    for (r.s(); !(n = r.n()).done; ) {
                        var i = n.value;
                        if (i.bitmaskBitNumber == e) return i;
                    }
                } catch (e) {
                    r.e(e);
                } finally {
                    r.f();
                }
                return null;
            }
        }, {
            key: "bitmaskValue",
            value: function(e) {
                var t = 0;
                if (null != e) {
                    var n, r = h(e);
                    try {
                        for (r.s(); !(n = r.n()).done; ) {
                            var i = n.value;
                            0 <= i.bitmaskBitOffset && (t |= 1 << i.bitmaskBitOffset);
                        }
                    } catch (e) {
                        r.e(e);
                    } finally {
                        r.f();
                    }
                }
                return t;
            }
        }, {
            key: "setForBitmaskEnum",
            value: function(e, t) {
                return r.setForBitmask(e, t.enumValues());
            }
        }, {
            key: "setForBitmask",
            value: function(e, t) {
                if (e < 1) return new Set();
                var n, r = new Set(), i = h(t);
                try {
                    for (i.s(); !(n = i.n()).done; ) {
                        var a = n.value, o = a.bitmaskBitOffset;
                        0 <= o && 1 == (e >> o & 1) && r.add(a);
                    }
                } catch (e) {
                    i.e(e);
                } finally {
                    i.f();
                }
                return r;
            }
        } ]), r;
    }(), I = function() {
        i(r, w);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e, t)).constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "code",
            get: function() {
                return this.bitmaskBitNumber;
            }
        } ], [ {
            key: "forCode",
            value: function(e) {
                return w.enumForBitNumber(e, Ye);
            }
        }, {
            key: "enumValues",
            value: function() {
                return Ye;
            }
        } ]), r;
    }(), Ye = Object.freeze([ new I("Unknown", 0), new I("Normal", 1), new I("Starting", 2), new I("Standby", 3), new I("Shutdown", 4), new I("Fault", 5), new I("Disabled", 6), new I("Recovery", 7), new I("Override", 8) ]), Ge = I.enumsValue(Ye), Je = function() {
        function i(e, t, n) {
            l(this, i), this.info = e || null, this.propertyInfo = t || null, this.tags = n instanceof Set ? n : Array.isArray(n) ? new Set(n) : null;
        }
        return a(i, [ {
            key: "toJsonEncoding",
            value: function() {
                var e = {}, t = this.info, t = (t && (e.m = Xe(t)), this.propertyInfo), t = (t && (e.pm = Xe(t)), 
                this.tags);
                return t && (e.t = Array.from(t)), JSON.stringify(e);
            }
        } ], [ {
            key: "fromJsonEncoding",
            value: function(e) {
                var t, n, r;
                return e && (t = (e = JSON.parse(e)).m ? Ze(e.m) : null, n = e.pm ? Ze(e.pm) : null, 
                r = Array.isArray(e.t) ? new Set(e.t) : null), new i(t, n, r);
            }
        } ]), i;
    }();
    function Xe(e) {
        var t = Object.create(null);
        if (e) {
            var n, r = h(e);
            try {
                for (r.s(); !(n = r.n()).done; ) {
                    var i = J(n.value, 2), a = i[0], o = i[1];
                    t[a] = o instanceof Map ? Xe(o) : o;
                }
            } catch (e) {
                r.e(e);
            } finally {
                r.f();
            }
        }
        return t;
    }
    function Ze(e) {
        var t = new Map();
        if (e) for (var n = 0, r = Object.keys(e); n < r.length; n++) {
            var i = r[n], a = e[i];
            t.set(i, "object" === K(a) ? Ze(a) : a);
        }
        return t;
    }
    var S = function() {
        i(n, f);
        var t = s(n);
        function n(e) {
            return l(this, n), (e = t.call(this, e)).constructor === n && Object.freeze(u(e)), 
            e;
        }
        return a(n, null, [ {
            key: "enumValues",
            value: function() {
                return $e;
            }
        } ]), n;
    }(), $e = Object.freeze([ new S("Unknown"), new S("Queued"), new S("Received"), new S("Executing"), new S("Declined"), new S("Completed") ]), et = S.enumsValue($e), D = function() {
        i(r, $);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e, t)).constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "precision",
            get: function() {
                return this.value;
            }
        } ], [ {
            key: "enumValues",
            value: function() {
                return tt;
            }
        } ]), r;
    }(), tt = Object.freeze([ new D("LatLong", 1), new D("Block", 5), new D("Street", 10), new D("PostalCode", 20), new D("Locality", 30), new D("StateOrProvince", 40), new D("Region", 50), new D("TimeZone", 60), new D("Country", 70) ]), nt = D.enumsValue(tt);
    function M(e) {
        var t = null;
        return e instanceof Set ? t = 0 < e.size ? e : null : Array.isArray(e) ? t = 0 < e.length ? new Set(e) : null : e && (t = new Set([ e ])), 
        t;
    }
    function T(e, t) {
        var n = M(e), e = M(t);
        if (null === n && null === e) return null;
        if (null === e) return n;
        if (null === n) return e;
        var r, i = h(e.values());
        try {
            for (i.s(); !(r = i.n()).done; ) {
                var a = r.value;
                n.add(a);
            }
        } catch (e) {
            i.e(e);
        } finally {
            i.f();
        }
        return n;
    }
    var rt = function() {
        function s(e, t, n, r, i, a, o, u) {
            l(this, s), this._nodeIds = M(e), this._sourceIds = M(t), this._aggregations = M(n), 
            this._minAggregation = r instanceof d ? r : null, this._locationPrecisions = M(i), 
            this._minLocationPrecision = a instanceof D ? a : null, this._nodeMetadataPaths = M(o), 
            this._userMetadataPaths = M(u), this.constructor === s && Object.freeze(this);
        }
        return a(s, [ {
            key: "nodeIds",
            get: function() {
                return this._nodeIds;
            }
        }, {
            key: "sourceIds",
            get: function() {
                return this._sourceIds;
            }
        }, {
            key: "aggregations",
            get: function() {
                return this._aggregations;
            }
        }, {
            key: "locationPrecisions",
            get: function() {
                return this._locationPrecisions;
            }
        }, {
            key: "minAggregation",
            get: function() {
                return this._minAggregation;
            }
        }, {
            key: "minLocationPrecision",
            get: function() {
                return this._minLocationPrecision;
            }
        }, {
            key: "nodeMetadataPaths",
            get: function() {
                return this._nodeMetadataPaths;
            }
        }, {
            key: "userMetadataPaths",
            get: function() {
                return this._userMetadataPaths;
            }
        }, {
            key: "toJsonEncoding",
            value: function() {
                var e = {}, t = this.nodeIds;
                return t && (e.nodeIds = Array.from(t)), (t = this.sourceIds) && (e.sourceIds = Array.from(t)), 
                (t = this.aggregations) && (e.aggregations = Array.from(t).map(function(e) {
                    return e.name;
                })), (t = this.locationPrecisions) && (e.locationPrecisions = Array.from(t).map(function(e) {
                    return e.name;
                })), (t = this.minAggregation) && (0 < e.length && (e += "&"), e.minAggregation = t.name), 
                (t = this.minLocationPrecision) && (e.minLocationPrecision = t.name), 
                (t = this.nodeMetadataPaths) && (e.nodeMetadataPaths = Array.from(t)), 
                (t = this.userMetadataPaths) && (e.userMetadataPaths = Array.from(t)), 
                JSON.stringify(e);
            }
        } ]), s;
    }(), it = new Map(), at = new Map(), ot = function() {
        function e() {
            l(this, e);
        }
        return a(e, [ {
            key: "withPolicy",
            value: function(e) {
                return e && this.withAggregations(e.aggregations).withMinAggregation(e.minAggregation).withLocationPrecisions(e.locationPrecisions).withMinLocationPrecision(e.minLocationPrecision).withNodeIds(e.nodeIds).withSourceIds(e.sourceIds).withNodeMetadataPaths(e.nodeMetadataPaths).withUserMetadataPaths(e.userMetadataPaths), 
                this;
            }
        }, {
            key: "addPolicy",
            value: function(e) {
                return e && (this.addAggregations(e.aggregations).addLocationPrecisions(e.locationPrecisions).addNodeIds(e.nodeIds).addSourceIds(e.sourceIds).addNodeMetadataPaths(e.nodeMetadataPaths).addUserMetadataPaths(e.userMetadataPaths), 
                e.minAggregation && this.withMinAggregation(e.minAggregation), e.minLocationPrecision && this.withMinLocationPrecision(e.minLocationPrecision)), 
                this;
            }
        }, {
            key: "withNodeIds",
            value: function(e) {
                return this.nodeIds = M(e), this;
            }
        }, {
            key: "addNodeIds",
            value: function(e) {
                return this.withNodeIds(T(this.nodeIds, e));
            }
        }, {
            key: "withNodeMetadataPaths",
            value: function(e) {
                return this.nodeMetadataPaths = M(e), this;
            }
        }, {
            key: "addNodeMetadataPaths",
            value: function(e) {
                return this.withNodeMetadataPaths(T(this.nodeMetadataPaths, e));
            }
        }, {
            key: "withUserMetadataPaths",
            value: function(e) {
                return this.userMetadataPaths = M(e), this;
            }
        }, {
            key: "addUserMetadataPaths",
            value: function(e) {
                return this.withUserMetadataPaths(T(this.userMetadataPaths, e));
            }
        }, {
            key: "withSourceIds",
            value: function(e) {
                return this.sourceIds = M(e), this;
            }
        }, {
            key: "addSourceIds",
            value: function(e) {
                return this.withSourceIds(T(this.sourceIds, e));
            }
        }, {
            key: "withAggregations",
            value: function(e) {
                return this.aggregations = M(e), this;
            }
        }, {
            key: "addAggregations",
            value: function(e) {
                return this.withAggregations(T(this.aggregations, e));
            }
        }, {
            key: "withLocationPrecisions",
            value: function(e) {
                return this.locationPrecisions = M(e), this;
            }
        }, {
            key: "addLocationPrecisions",
            value: function(e) {
                return this.withLocationPrecisions(T(this.locationPrecisions, e));
            }
        }, {
            key: "withMinAggregation",
            value: function(e) {
                return this.minAggregation = e, this;
            }
        }, {
            key: "buildAggregations",
            value: function() {
                var e = this.minAggregation, t = this.aggregations;
                return !e && t && 0 < t.size ? t : e ? d.minimumEnumSet(e, it) : null;
            }
        }, {
            key: "withMinLocationPrecision",
            value: function(e) {
                return this.minLocationPrecision = e, this;
            }
        }, {
            key: "buildLocationPrecisions",
            value: function() {
                var e = this.minLocationPrecision, t = this.locationPrecisions;
                return !e && t && 0 < t.size ? t : e ? D.minimumEnumSet(e, at) : null;
            }
        }, {
            key: "build",
            value: function() {
                return new rt(this.nodeIds, this.sourceIds, this.buildAggregations(), this.minAggregation, this.buildLocationPrecisions(), this.minLocationPrecision, this.nodeMetadataPaths, this.userMetadataPaths);
            }
        } ]), e;
    }(), P = function() {
        i(r, w);
        var n = s(r);
        function r(e, t) {
            return l(this, r), (e = n.call(this, e, t)).constructor === r && Object.freeze(u(e)), 
            e;
        }
        return a(r, [ {
            key: "code",
            get: function() {
                return this.bitmaskBitNumber;
            }
        } ], [ {
            key: "forCode",
            value: function(e) {
                return w.enumForBitNumber(e, ut);
            }
        }, {
            key: "enumValues",
            value: function() {
                return ut;
            }
        } ]), r;
    }(), ut = Object.freeze([ new P("Clear", 1), new P("ScatteredClouds", 2), new P("Cloudy", 3), new P("Fog", 4), new P("Drizzle", 5), new P("ScatteredShowers", 6), new P("Showers", 7), new P("Rain", 8), new P("Hail", 9), new P("ScatteredSnow", 10), new P("Snow", 11), new P("Storm", 12), new P("SevereStorm", 13), new P("Thunder", 14), new P("Windy", 15), new P("Hazy", 16), new P("Tornado", 17), new P("Hurricane", 18), new P("Dusty", 19) ]), st = P.enumsValue(ut);
    var O = function() {
        function t(e) {
            l(this, t), this.mappings = {}, this.mappingNames = [], e && this.putAll(e);
        }
        return a(t, [ {
            key: "add",
            value: function(e, t) {
                return ct(this, e, t);
            }
        }, {
            key: "put",
            value: function(e, t) {
                return ct(this, e, t, !0);
            }
        }, {
            key: "putAll",
            value: function(e) {
                for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && ct(this, t, e[t], !0);
                return this;
            }
        }, {
            key: "value",
            value: function(e) {
                e = e.toLowerCase(), e = this.mappings[e];
                return e ? e.val : void 0;
            }
        }, {
            key: "firstValue",
            value: function(e) {
                e = this.value(e);
                return e && 0 < e.length ? e[0] : void 0;
            }
        }, {
            key: "clear",
            value: function() {
                return this.mappingNames.length = 0, this.mappings = {}, this;
            }
        }, {
            key: "remove",
            value: function(e) {
                var e = e.toLowerCase(), t = this.mappingNames.indexOf(e), n = this.mappings[e];
                return n && (delete this.mappings[e], this.mappingNames.splice(t, 1)), 
                n ? n.val : void 0;
            }
        }, {
            key: "size",
            value: function() {
                return this.mappingNames.length;
            }
        }, {
            key: "isEmpty",
            value: function() {
                return this.size() < 1;
            }
        }, {
            key: "containsKey",
            value: function(e) {
                return void 0 !== this.value(e);
            }
        }, {
            key: "keySet",
            value: function() {
                for (var e = [], t = this.size(), n = 0; n < t; n += 1) e.push(this.mappings[this.mappingNames[n]].key);
                return e;
            }
        } ]), t;
    }();
    function ct(e, t, n, r) {
        if (void 0 === n) return e;
        var i = t.toLowerCase(), a = e.mappings[i];
        if (a || (e.mappings[i] = a = {
            key: t,
            val: []
        }, e.mappingNames.push(i)), r && (a.val.length = 0), Array.isArray(n)) for (var o = n.length, u = 0; u < o; u += 1) a.val.push(n[u]); else a.val.push(n);
        return e;
    }
    var lt = function() {
        function t(e) {
            l(this, t), this.map = {}, void 0 !== e && this.values(e);
        }
        return a(t, [ {
            key: "enabled",
            value: function(e) {
                return void 0 !== e && !!this.map[e];
            }
        }, {
            key: "toggle",
            value: function(e, t) {
                var n = t;
                return void 0 === e ? this : (void 0 === t && (n = void 0 === this.map[e]), 
                this.value(e, !0 === n || null));
            }
        }, {
            key: "value",
            value: function(e, t) {
                return 1 === arguments.length ? this.map[e] : (null === t ? (delete this.map[e], 
                Object.prototype.hasOwnProperty.call(this, e) && delete this[e]) : (this.map[e] = t, 
                Object.prototype.hasOwnProperty.call(this, e) || (t = this, e = e, 
                Object.defineProperty(t, e, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        return i.map[a];
                    },
                    set: (n = i = t, r = a = e, function(e) {
                        n.map[r] = e;
                    })
                }))), this);
                var n, r, i, a;
            }
        }, {
            key: "values",
            value: function(e) {
                if (e) {
                    for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && this.value(t, e[t]);
                    return this;
                }
                return Object.assign({}, this.map);
            }
        } ]), t;
    }();
    var ht = function() {
        i(r, lt);
        var n = s(r);
        function r(e) {
            return l(this, r), n.call(this, (e = e, (e = Object.assign({
                host: "data.solarnetwork.net"
            }, e)).protocol = (t = e.protocol || "https") ? t.replace(/:$/, "") : "https", 
            e.port = e.port || ("https" === e.protocol ? 443 : 80), e.host = e.port && e.hostname ? e.hostname : e.host, 
            e));
            var t;
        }
        return a(r, [ {
            key: "useTls",
            value: function() {
                return "https" === this.value("protocol");
            }
        } ]), r;
    }(), ft = Object.freeze({
        GET: "GET",
        HEAD: "HEAD",
        POST: "POST",
        PUT: "PUT",
        PATCH: "PATCH",
        DELETE: "DELETE",
        OPTIONS: "OPTIONS",
        TRACE: "TRACE"
    }), dt = Object.freeze({
        APPLICATION_JSON: "application/json",
        APPLICATION_JSON_UTF8: "application/json; charset=UTF-8",
        FORM_URLENCODED: "application/x-www-form-urlencoded",
        FORM_URLENCODED_UTF8: "application/x-www-form-urlencoded; charset=UTF-8"
    }), N = function() {
        i(t, O);
        var e = s(t);
        function t() {
            return l(this, t), e.call(this);
        }
        return a(t);
    }();
    function yt(e, t) {
        var n, r, i, a, o, u = {};
        if (void 0 !== e && 0 < e.length) for (r = 0, i = (n = (e = e.match(/^\?/) ? e.substring(1) : e).split("&")).length; r < i; r++) 2 === (o = n[r].split("=", 2)).length && (a = decodeURIComponent(o[0]), 
        o = decodeURIComponent(o[1]), u[a] ? (Array.isArray(u[a]) || (u[a] = [ u[a] ]), 
        u[a].push(o)) : t && t.has(a) ? u[a] = [ o ] : u[a] = o);
        return u;
    }
    Object.defineProperties(N, {
        ACCEPT: {
            value: "Accept"
        },
        AUTHORIZATION: {
            value: "Authorization"
        },
        CONTENT_MD5: {
            value: "Content-MD5"
        },
        CONTENT_TYPE: {
            value: "Content-Type"
        },
        DATE: {
            value: "Date"
        },
        DIGEST: {
            value: "Digest"
        },
        HOST: {
            value: "Host"
        },
        X_SN_DATE: {
            value: "X-SN-Date"
        }
    });
    var pt = {
        urlQueryParse: yt,
        urlQueryEncode: function(e, t) {
            var n, r, i, a, o = "", u = t || encodeURIComponent;
            function s(e, t) {
                o.length && (o += "&"), o += u(e) + "=" + u(t);
            }
            if (e) for (n in e) if (Object.prototype.hasOwnProperty.call(e, n)) if (r = e[n], 
            Array.isArray(r)) for (i = 0, a = r.length; i < a; i++) s(n, r[i]); else s(n, r);
            return o;
        }
    }, vt = function() {
        function n(e, t) {
            l(this, n), this.tokenId = e, this.environment = t || new ht(), this.httpHeaders = new N(), 
            this.parameters = new O(), this.forceHostPort = !1, this.reset();
        }
        return a(n, [ {
            key: "reset",
            value: function() {
                this.contentDigest = null;
                var e = this.environment.host;
                return this.httpHeaders.clear(), this.parameters.clear(), this.signedHttpHeaders([]).method(ft.GET).host(e).path("/").date(new Date());
            }
        }, {
            key: "saveSigningKey",
            value: function(e) {
                return this.key(this.computeSigningKey(e), this.requestDate), this;
            }
        }, {
            key: "key",
            value: function(e, t) {
                if (void 0 === e) return this.signingKey;
                this.signingKey = e;
                e = new Date((t || this.requestDate).getTime() + 6048e5);
                return e.setUTCHours(0), e.setUTCMinutes(0), e.setUTCSeconds(0), 
                e.setUTCMilliseconds(0), this.signingKeyExpiration = e, this;
            }
        }, {
            key: "signingKeyExpirationDate",
            get: function() {
                return this.signingKeyExpiration;
            }
        }, {
            key: "signingKeyValid",
            get: function() {
                return !!(this.signingKey && this.signingKeyExpiration instanceof Date && Date.now() < this.signingKeyExpiration.getTime());
            }
        }, {
            key: "method",
            value: function(e) {
                return this.httpMethod = e, this;
            }
        }, {
            key: "host",
            value: function(e) {
                return this.forceHostPort && e.indexOf(":") < 0 && 80 != this.environment.port && (e += ":" + this.environment.port), 
                this.httpHeaders.put(N.HOST, e), this;
            }
        }, {
            key: "path",
            value: function(e) {
                return this.requestPath = e, this;
            }
        }, {
            key: "url",
            value: function(e, t) {
                var e = q.parse(e), n = e.host;
                return !e.port || ("https" !== e.scheme && "wss" !== e.scheme || 443 === e.port) && ("http" !== e.scheme && "ws" !== e.scheme || 80 === e.port) || (n += ":" + e.port), 
                e.query && this.queryParams(yt(e.query)), t || this.host(n), this.path(e.path);
            }
        }, {
            key: "contentType",
            value: function(e) {
                return this.httpHeaders.put(N.CONTENT_TYPE, e), this;
            }
        }, {
            key: "date",
            value: function(e) {
                return this.requestDate = e || new Date(), this;
            }
        }, {
            key: "requestDateHeaderValue",
            get: function() {
                return this.requestDate.toUTCString();
            }
        }, {
            key: "useSnDate",
            get: function() {
                var e = this.signedHeaderNames;
                return 0 <= (Array.isArray(e) ? e.findIndex(mt(N.X_SN_DATE)) : -1) || this.httpHeaders.containsKey(N.X_SN_DATE);
            },
            set: function(e) {
                var t = this.signedHeaderNames, n = Array.isArray(t) ? t.findIndex(mt(N.X_SN_DATE)) : -1;
                e && n < 0 ? (t = t ? t.concat(N.X_SN_DATE) : [ N.X_SN_DATE ], this.signedHeaderNames = t) : !e && 0 <= n && (t.splice(n, 1), 
                this.signedHeaderNames = t), this.httpHeaders.remove(N.X_SN_DATE);
            }
        }, {
            key: "snDate",
            value: function(e) {
                return this.useSnDate = e, this;
            }
        }, {
            key: "header",
            value: function(e, t) {
                return this.httpHeaders.put(e, t), this;
            }
        }, {
            key: "headers",
            value: function(e) {
                return this.httpHeaders = e, this;
            }
        }, {
            key: "queryParams",
            value: function(e) {
                return e instanceof O ? this.parameters = e : this.parameters.putAll(e), 
                this;
            }
        }, {
            key: "signedHttpHeaders",
            value: function(e) {
                return this.signedHeaderNames = e, this;
            }
        }, {
            key: "contentSHA256",
            value: function(e) {
                e = "string" == typeof e ? r.default.parse(e) : e;
                return this.contentDigest = e, this;
            }
        }, {
            key: "computeContentDigest",
            value: function(e) {
                e = B.default(e);
                return this.contentSHA256(e), this.header("Digest", "sha-256=" + W.default.stringify(e)), 
                this;
            }
        }, {
            key: "canonicalQueryParameters",
            value: function() {
                var e = this.parameters.keySet();
                if (e.length < 1) return "";
                e.sort();
                for (var t = e.length, n = !0, r = "", i = 0; i < t; i += 1) for (var a = e[i], o = this.parameters.value(a), u = o.length, s = 0; s < u; s += 1) n ? n = !1 : r += "&", 
                r += kt(a) + "=" + kt(o[s]);
                return r;
            }
        }, {
            key: "canonicalHeaders",
            value: function(e) {
                for (var t, n = "", r = e.length, i = 0; i < r; i += 1) n += (t = e[i]) + ":" + ((t = "date" === t || "x-sn-date" === t ? this.requestDate.toUTCString() : this.httpHeaders.firstValue(t)) ? t.trim() : "") + "\n";
                return n;
            }
        }, {
            key: "canonicalSignedHeaderNames",
            value: function(e) {
                return e.join(";");
            }
        }, {
            key: "canonicalContentSHA256",
            value: function() {
                return this.contentDigest ? r.default.stringify(this.contentDigest) : n.EMPTY_STRING_SHA256_HEX;
            }
        }, {
            key: "canonicalHeaderNames",
            value: function() {
                for (var e = this.httpHeaders, t = this.signedHeaderNames, n = new O(), r = (n.put(N.HOST, !0), 
                this.useSnDate ? n.put(N.X_SN_DATE, !0) : n.put(N.DATE, !0), e.containsKey(N.CONTENT_MD5) && n.put(N.CONTENT_MD5, !0), 
                e.containsKey(N.CONTENT_TYPE) && n.put(N.CONTENT_TYPE, !0), e.containsKey(N.DIGEST) && n.put(N.DIGEST, !0), 
                t && 0 < t.length && t.forEach(function(e) {
                    return n.put(e, !0);
                }), n.keySet()), i = [], a = r.length, o = 0; o < a; o += 1) i.push(r[o].toLowerCase());
                return i.sort(), i;
            }
        }, {
            key: "buildCanonicalRequestData",
            value: function() {
                return this.computeCanonicalRequestData(this.canonicalHeaderNames());
            }
        }, {
            key: "computeCanonicalRequestData",
            value: function(e) {
                var t = this.httpMethod + "\n";
                return (t += this.requestPath + "\n") + (this.canonicalQueryParameters() + "\n") + this.canonicalHeaders(e) + (this.canonicalSignedHeaderNames(e) + "\n") + this.canonicalContentSHA256();
            }
        }, {
            key: "computeSigningKey",
            value: function(e) {
                var t = ae(this.requestDate);
                return V.default("snws2_request", V.default(t, "SNWS2" + e));
            }
        }, {
            key: "computeSignatureData",
            value: function(e) {
                return "SNWS2-HMAC-SHA256\n" + ae(this.requestDate, !0) + "\n" + r.default.stringify(B.default(e));
            }
        }, {
            key: "buildWithKey",
            value: function(e) {
                var t = this.canonicalHeaderNames(), n = this.computeCanonicalRequestData(t), n = this.computeSignatureData(n), n = r.default.stringify(V.default(n, e));
                return "SNWS2 Credential=" + this.tokenId + ",SignedHeaders=" + t.join(";") + ",Signature=" + n;
            }
        }, {
            key: "build",
            value: function(e) {
                e = this.computeSigningKey(e);
                return this.buildWithKey(e);
            }
        }, {
            key: "buildWithSavedKey",
            value: function() {
                return this.buildWithKey(this.signingKey);
            }
        } ]), n;
    }();
    function mt(e) {
        var t = e.toLowerCase();
        return function(e) {
            return t === e.toString().toLowerCase();
        };
    }
    function gt(e) {
        return "%" + e.charCodeAt(0).toString(16).toUpperCase();
    }
    function kt(e) {
        return encodeURIComponent(e).replace(/[!'()*]/g, gt);
    }
    Object.defineProperties(vt, {
        EMPTY_STRING_SHA256_HEX: {
            value: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        },
        SNWS2_AUTH_SCHEME: {
            value: "SNWS2"
        }
    });
    function Ut(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "locationId",
                get: function() {
                    var e = this.locationIds;
                    return Array.isArray(e) && 0 < e.length ? e[0] : null;
                },
                set: function(e) {
                    this.parameter(Ot, e ? [ e ] : null);
                }
            }, {
                key: "locationIds",
                get: function() {
                    return this.parameter(Ot);
                },
                set: function(e) {
                    this.parameter(Ot, e);
                }
            }, {
                key: "sourceId",
                get: function() {
                    var e = this.sourceIds;
                    return Array.isArray(e) && 0 < e.length ? e[0] : null;
                },
                set: function(e) {
                    this.parameter(Nt, e && [ e ]);
                }
            }, {
                key: "sourceIds",
                get: function() {
                    return this.parameter(Nt);
                },
                set: function(e) {
                    this.parameter(Nt, e);
                }
            }, {
                key: "findLocationsUrl",
                value: function(e, t, n) {
                    return this.baseUrl() + "/location?" + e.toUriEncodingWithSorting(t, n);
                }
            } ]), t;
        }();
    }
    function C(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "publicQuery",
                get: function() {
                    return !!this.env(jt);
                },
                set: function(e) {
                    this.env(jt, !!e);
                }
            }, {
                key: "baseUrl",
                value: function() {
                    var e = this.env(Et) || Ct, t = this.publicQuery;
                    return this.hostUrl() + e + Ht + (t ? "/pub" : "/sec");
                }
            } ]), t;
        }();
    }
    function bt(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "baseLocationDatumMetadataUrl",
                value: function(e) {
                    return this.baseUrl() + "/location/meta/" + (e || this.locationId);
                }
            }, {
                key: "locationDatumMetadataUrlWithSource",
                value: function(e, t) {
                    var e = this.baseLocationDatumMetadataUrl(e), n = t || this.sourceId;
                    return null !== t && n && (e += "?sourceId=" + encodeURIComponent(n)), 
                    e;
                }
            }, {
                key: "viewLocationDatumMetadataUrl",
                value: function(e, t) {
                    return this.locationDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "addLocationDatumMetadataUrl",
                value: function(e, t) {
                    return this.locationDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "replaceLocationDatumMetadataUrl",
                value: function(e, t) {
                    return this.locationDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "deleteLocationDatumMetadataUrl",
                value: function(e, t) {
                    return this.locationDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "findLocationDatumMetadataUrl",
                value: function(e, t, n) {
                    var r = this.baseUrl() + "/location/meta", e = e.toUriEncodingWithSorting(t, n);
                    return 0 < e.length && (r += "?" + e), r;
                }
            } ]), t;
        }();
    }
    function At(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "reportableIntervalUrl",
                value: function(e, t) {
                    var e = this.baseUrl() + "/location/datum/interval?locationId=" + (e || this.locationId), n = t || this.sourceId;
                    return null !== t && n && (e += "&sourceId=" + encodeURIComponent(n)), 
                    e;
                }
            }, {
                key: "availableSourcesUrl",
                value: function(e, t, n) {
                    e = this.baseUrl() + "/location/datum/sources?locationId=" + (e || this.locationId);
                    return t instanceof Date && (e += "&start=" + encodeURIComponent(p(t))), 
                    n instanceof Date && (e += "&end=" + encodeURIComponent(p(n))), 
                    e;
                }
            }, {
                key: "listDatumUrl",
                value: function(e, t, n) {
                    var r = this.baseUrl() + "/location/datum/list", e = e ? e.toUriEncodingWithSorting(t, n) : "";
                    return 0 < e.length && (r += "?" + e), r;
                }
            }, {
                key: "mostRecentDatumUrl",
                value: function(e, t, n) {
                    var r = this.baseUrl() + "/location/datum/mostRecent", e = e ? e.toUriEncodingWithSorting(t, n) : "";
                    return 0 < e.length && (r += "?" + e), r;
                }
            } ]), t;
        }();
    }
    function E(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "nodeId",
                get: function() {
                    var e = this.nodeIds;
                    return Array.isArray(e) && 0 < e.length ? e[0] : null;
                },
                set: function(e) {
                    this.parameter(xt, e ? [ e ] : null);
                }
            }, {
                key: "nodeIds",
                get: function() {
                    return this.parameter(xt);
                },
                set: function(e) {
                    this.parameter(xt, e);
                }
            }, {
                key: "sourceId",
                get: function() {
                    var e = this.sourceIds;
                    return Array.isArray(e) && 0 < e.length ? e[0] : null;
                },
                set: function(e) {
                    this.parameter(Lt, e && [ e ]);
                }
            }, {
                key: "sourceIds",
                get: function() {
                    return this.parameter(Lt);
                },
                set: function(e) {
                    this.parameter(Lt, e);
                }
            }, {
                key: "listAllNodeIdsUrl",
                value: function() {
                    return this.baseUrl() + "/nodes";
                }
            } ]), t;
        }();
    }
    function wt(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "baseNodeDatumMetadataUrl",
                value: function(e) {
                    return this.baseUrl() + "/datum/meta/" + (e || this.nodeId);
                }
            }, {
                key: "nodeDatumMetadataUrlWithSource",
                value: function(e, t) {
                    var e = this.baseNodeDatumMetadataUrl(e), n = t || this.sourceId;
                    return null !== t && n && (e += "?sourceId=" + encodeURIComponent(n)), 
                    e;
                }
            }, {
                key: "viewNodeDatumMetadataUrl",
                value: function(e, t) {
                    return this.nodeDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "addNodeDatumMetadataUrl",
                value: function(e, t) {
                    return this.nodeDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "replaceNodeDatumMetadataUrl",
                value: function(e, t) {
                    return this.nodeDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "deleteNodeDatumMetadataUrl",
                value: function(e, t) {
                    return this.nodeDatumMetadataUrlWithSource(e, t);
                }
            }, {
                key: "findNodeDatumMetadataUrl",
                value: function(e, t, n, r) {
                    var e = this.baseNodeDatumMetadataUrl(e), i = "", a = t || this.sourceId;
                    return null !== t && a && (i += "sourceId=" + encodeURIComponent(a)), 
                    Array.isArray(n) && n.forEach(function(e, t) {
                        e instanceof U && (0 < i.length && (i += "&"), i += e.toUriEncoding(t));
                    }), r instanceof k && (0 < i.length && (i += "&"), i += r.toUriEncoding()), 
                    0 < i.length && (e += "?" + i), e;
                }
            }, {
                key: "userMetadataUrl",
                value: function(e) {
                    var t = this.baseUrl() + "/users/meta", n = e || this.userId;
                    return (n = Array.isArray(n) ? 0 < n.length ? n[0] : null : n) && null !== e && (t += "/" + n), 
                    t;
                }
            }, {
                key: "viewUserMetadataUrl",
                value: function(e) {
                    return this.userMetadataUrl(e);
                }
            } ]), t;
        }();
    }
    function It(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "reportableIntervalUrl",
                value: function(e, t) {
                    e = this.baseUrl() + "/range/interval?nodeId=" + (e || this.nodeId), 
                    t = t || this.sourceIds;
                    return Array.isArray(t) && 0 < t.length && (e += "&sourceIds=" + t.map(function(e) {
                        return encodeURIComponent(e);
                    }).join(",")), e;
                }
            }, {
                key: "availableSourcesUrl",
                value: function(e, t) {
                    e = e ? new b(e) : this.datumFilter(), void 0 !== t && e.prop("withNodeIds", !!t), 
                    t = this.baseUrl() + "/range/sources", e = e.toUriEncoding();
                    return 0 < e.length && (t += "?" + e), t;
                }
            }, {
                key: "listDatumUrl",
                value: function(e, t, n) {
                    var r = this.baseUrl() + "/datum/list", e = (e || this.datumFilter()).toUriEncodingWithSorting(t, n);
                    return 0 < e.length && (r += "?" + e), r;
                }
            }, {
                key: "datumReadingUrl",
                value: function(e, t, n, r, i) {
                    var a = this.baseUrl() + "/datum/reading", e = new b(e) || this.datumFilter(), t = (e.prop("readingType", t.name), 
                    n && e.prop("tolerance", n), e.toUriEncodingWithSorting(r, i));
                    return 0 < t.length && (a += "?" + t), a;
                }
            }, {
                key: "streamDatumUrl",
                value: function(e, t, n) {
                    var r = this.baseUrl() + "/datum/stream/datum", e = (e || this.datumFilter()).toUriEncodingWithSorting(t, n);
                    return 0 < e.length && (r += "?" + e), r;
                }
            }, {
                key: "streamReadingUrl",
                value: function(e, t, n, r, i) {
                    var a = this.baseUrl() + "/datum/stream/reading", e = new b(e) || this.datumFilter(), t = (e.prop("readingType", t.name), 
                    n && e.prop("tolerance", n), e.toUriEncodingWithSorting(r, i));
                    return 0 < t.length && (a += "?" + t), a;
                }
            }, {
                key: "datumFilter",
                value: function() {
                    var e = new b(), t = this.nodeIds;
                    return t && (e.nodeIds = t), (t = this.sourceIds) && (e.sourceIds = t), 
                    e;
                }
            }, {
                key: "mostRecentDatumUrl",
                value: function(e, t, n) {
                    var r = this.baseUrl() + "/datum/mostRecent", e = (e || this.datumFilter()).toUriEncodingWithSorting(t, n);
                    return 0 < e.length && (r += "?" + e), r;
                }
            } ]), t;
        }();
    }
    function H(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "userId",
                get: function() {
                    var e = this.parameter(Bt);
                    return Array.isArray(e) && 0 < e.length ? e[0] : null;
                },
                set: function(e) {
                    this.parameter(Bt, [ e ]);
                }
            }, {
                key: "userIds",
                get: function() {
                    return this.parameter(Bt);
                },
                set: function(e) {
                    this.parameter(Bt, e);
                }
            }, {
                key: "baseUrl",
                value: function() {
                    var e = this.env(Wt) || qt;
                    return G(o(t.prototype), "baseUrl", this).call(this) + e + Vt;
                }
            }, {
                key: "whoamiUrl",
                value: function() {
                    return this.baseUrl() + "/whoami";
                }
            }, {
                key: "viewNodesUrl",
                value: function() {
                    return this.baseUrl() + "/nodes";
                }
            }, {
                key: "viewPendingNodesUrl",
                value: function() {
                    return this.baseUrl() + "/nodes/pending";
                }
            }, {
                key: "viewArchivedNodesUrl",
                value: function() {
                    return this.baseUrl() + "/nodes/archived";
                }
            }, {
                key: "updateNodeArchivedStatusUrl",
                value: function(e, t) {
                    e = Array.isArray(e) ? e : e ? [ e ] : this.nodeIds;
                    return this.baseUrl() + "/nodes/archived?nodeIds=" + e.join(",") + "&archived=" + (t ? "true" : "false");
                }
            }, {
                key: "nimAuthorizeUrl",
                value: function() {
                    return this.baseUrl() + "/user/nim/authorize";
                }
            } ]), t;
        }();
    }
    function St(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "viewInstructionUrl",
                value: function(e) {
                    return this.baseUrl() + "/instr/view?id=" + encodeURIComponent(e);
                }
            }, {
                key: "viewActiveInstructionsUrl",
                value: function(e) {
                    return this.baseUrl() + "/instr/viewActive?nodeId=" + (e || this.nodeId);
                }
            }, {
                key: "viewPendingInstructionsUrl",
                value: function(e) {
                    return this.baseUrl() + "/instr/viewPending?nodeId=" + (e || this.nodeId);
                }
            }, {
                key: "updateInstructionStateUrl",
                value: function(e, t) {
                    return this.baseUrl() + "/instr/updateState?id=" + encodeURIComponent(e) + "&state=" + encodeURIComponent(t.name);
                }
            }, {
                key: "urlEncodeInstructionParameters",
                value: function(e) {
                    var t, n, r = "";
                    if (Array.isArray(e)) for (t = 0, n = e.length; t < n; t += 1) 0 < r.length && (r += "&"), 
                    r += encodeURIComponent("parameters[" + t + "].name") + "=" + encodeURIComponent(e[t].name) + "&" + encodeURIComponent("parameters[" + t + "].value") + "=" + encodeURIComponent(e[t].value);
                    return r;
                }
            }, {
                key: "queueInstructionUrl",
                value: function(e, t, n) {
                    e = this.baseUrl() + "/instr/add/" + encodeURIComponent(e) + "?nodeId=" + (n || this.nodeId);
                    return Array.isArray(t) && 0 < t.length && (e += "&" + this.urlEncodeInstructionParameters(t)), 
                    e;
                }
            }, {
                key: "queueInstructionsUrl",
                value: function(e, t, n) {
                    e = this.baseUrl() + "/instr/add/" + encodeURIComponent(e) + "?nodeIds=" + (Array.isArray(n) && 0 < n.length ? n.join(",") : Array.isArray(this.nodeIds) ? this.nodeIds.join(",") : "");
                    return Array.isArray(t) && 0 < t.length && (e += "&" + this.urlEncodeInstructionParameters(t)), 
                    e;
                }
            } ], [ {
                key: "instructionParameter",
                value: function(e, t) {
                    return {
                        name: e,
                        value: t
                    };
                }
            } ]), t;
        }();
    }
    function Dt(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "viewNodeMetadataUrl",
                value: function(e) {
                    return this.baseUrl() + "/nodes/meta/" + (e || this.nodeId);
                }
            }, {
                key: "addNodeMetadataUrl",
                value: function(e) {
                    return this.viewNodeMetadataUrl(e);
                }
            }, {
                key: "replaceNodeMetadataUrl",
                value: function(e) {
                    return this.viewNodeMetadataUrl(e);
                }
            }, {
                key: "deleteNodeMetadataUrl",
                value: function(e) {
                    return this.viewNodeMetadataUrl(e);
                }
            }, {
                key: "findNodeMetadataUrl",
                value: function(e, t, n) {
                    var e = Array.isArray(e) ? e : e ? [ e ] : null !== e ? this.nodeIds : void 0, r = this.baseUrl() + "/nodes/meta", i = "";
                    return Array.isArray(e) && (i += "nodeIds=" + e.join(",")), 
                    Array.isArray(t) && t.forEach(function(e, t) {
                        e instanceof U && (0 < i.length && (i += "&"), i += e.toUriEncoding(t));
                    }), n instanceof k && (0 < i.length && (i += "&"), i += n.toUriEncoding()), 
                    0 < i.length && (r += "?" + i), r;
                }
            } ]), t;
        }();
    }
    function Mt(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "listAllAuthTokensUrl",
                value: function() {
                    return this.baseUrl() + "/user/auth-tokens";
                }
            }, {
                key: "generateAuthTokenUrl",
                value: function(e) {
                    return this.baseUrl() + "/user/auth-tokens/generate/" + e.name;
                }
            }, {
                key: "authTokenUrl",
                value: function(e) {
                    return this.baseUrl() + "/user/auth-tokens/" + encodeURIComponent(e);
                }
            }, {
                key: "deleteAuthTokenUrl",
                value: function(e) {
                    return this.authTokenUrl(e);
                }
            }, {
                key: "updateAuthTokenSecurityPolicyUrl",
                value: function(e) {
                    return this.authTokenUrl(e);
                }
            }, {
                key: "replaceAuthTokenSecurityPolicyUrl",
                value: function(e) {
                    return this.authTokenUrl(e);
                }
            }, {
                key: "updateAuthTokenStatusUrl",
                value: function(e, t) {
                    return this.authTokenUrl(e) + "?status=" + encodeURIComponent(t.name);
                }
            } ]), t;
        }();
    }
    function Tt(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "userDatumAuxiliaryBaseUrl",
                value: function() {
                    return this.baseUrl() + "/datum/auxiliary";
                }
            }, {
                key: "listUserDatumAuxiliaryUrl",
                value: function(e) {
                    var t = this.userDatumAuxiliaryBaseUrl();
                    return e && 0 < (e = e.toUriEncoding()).length && (t += "?" + e), 
                    t;
                }
            }, {
                key: "userDatumAuxiliaryIdUrl",
                value: function(e, t, n, r) {
                    if (r && 0 <= r.indexOf("/")) return this.userDatumAuxiliaryIdQueryUrl(e, t, n, r);
                    var i = this.userDatumAuxiliaryBaseUrl();
                    return i += "/" + encodeURIComponent(e.name || e) + "/" + encodeURIComponent(t) + "/" + encodeURIComponent(te(n)) + "/" + encodeURIComponent(r);
                }
            }, {
                key: "userDatumAuxiliaryIdQueryUrl",
                value: function(e, t, n, r) {
                    var i = this.userDatumAuxiliaryBaseUrl(), e = new me({
                        type: e,
                        nodeId: t,
                        date: te(n),
                        sourceId: r
                    }).toUriEncoding();
                    return 0 < e.length && (i += "?" + e), i;
                }
            }, {
                key: "storeUserDatumAuxiliaryUrl",
                value: function(e, t, n, r) {
                    return this.userDatumAuxiliaryIdUrl(e, t, n, r);
                }
            }, {
                key: "viewUserDatumAuxiliaryUrl",
                value: function(e, t, n, r) {
                    return this.userDatumAuxiliaryIdUrl(e, t, n, r);
                }
            }, {
                key: "deleteUserDatumAuxiliaryUrl",
                value: function(e, t, n, r) {
                    return this.userDatumAuxiliaryIdUrl(e, t, n, r);
                }
            } ]), t;
        }();
    }
    function Pt(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "findUserMetadataUrl",
                value: function(e) {
                    var t = this.baseUrl() + "/users/meta";
                    return e && 0 < (e = e.toUriEncoding()).length && (t += "?" + e), 
                    t;
                }
            }, {
                key: "userMetadataUrl",
                value: function(e) {
                    var t = this.baseUrl() + "/users/meta", n = e || this.userId;
                    return (n = Array.isArray(n) ? 0 < n.length ? n[0] : null : n) && null !== e && (t += "/" + n), 
                    t;
                }
            }, {
                key: "viewUserMetadataUrl",
                value: function(e) {
                    return this.userMetadataUrl(e);
                }
            }, {
                key: "addUserMetadataUrl",
                value: function(e) {
                    return this.userMetadataUrl(e);
                }
            }, {
                key: "replaceUserMetadataUrl",
                value: function(e) {
                    return this.userMetadataUrl(e);
                }
            }, {
                key: "deleteUserMetadataUrl",
                value: function(e) {
                    return this.userMetadataUrl(e);
                }
            } ]), t;
        }();
    }
    var j = function() {
        function t(e) {
            l(this, t);
            e = e instanceof ht ? e : new ht(e);
            this.environment = e, this._parameters = new lt();
        }
        return a(t, [ {
            key: "parameters",
            get: function() {
                return this._parameters;
            }
        }, {
            key: "env",
            value: function() {
                var e;
                return (e = this.environment).value.apply(e, arguments);
            }
        }, {
            key: "parameter",
            value: function() {
                var e;
                return (e = this._parameters).value.apply(e, arguments);
            }
        }, {
            key: "hostUrl",
            value: function() {
                var e = this.environment.useTls(), t = this.environment.value("proxyHost") || this.environment.value("host"), n = +(this.environment.value("proxyPort") || this.environment.value("port")), t = "http" + (e ? "s" : "") + "://" + t;
                return (e && 0 < n && 443 != n || !e && 0 < n && 80 != n) && (t += ":" + n), 
                t;
            }
        }, {
            key: "hostWebSocketUrl",
            value: function() {
                var e = this.environment.useTls(), t = this.environment.value("proxyHost") || this.environment.value("host"), n = +(this.environment.value("proxyPort") || this.environment.value("port")), t = "ws" + (e ? "s" : "") + "://" + t;
                return (e && 0 < n && 443 != n || !e && 0 < n && 80 != n) && (t += ":" + n), 
                t;
            }
        }, {
            key: "baseUrl",
            value: function() {
                return this.hostUrl();
            }
        }, {
            key: "resolveTemplatePath",
            value: function(e) {
                return this.hostUrl() + this.resolveTemplateUrl(e);
            }
        }, {
            key: "resolveTemplateUrl",
            value: function(e) {
                return t.resolveTemplateUrl(e, this._parameters);
            }
        } ], [ {
            key: "resolveTemplateUrl",
            value: function(e, n) {
                return e.replace(/\{([^}]+)\}/g, function(e, t) {
                    t = n[t];
                    return void 0 !== t ? encodeURIComponent(t) : "";
                });
            }
        } ]), t;
    }(), Ot = "locationIds", Nt = "sourceIds", Ct = "/solarquery", Et = "solarQueryPath", Ht = "/api/v1", jt = "publicQuery", _t = function() {
        i(t, bt(C(Ut(j))));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Rt = function() {
        i(t, At(C(Ut(j))));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), xt = "nodeIds", Lt = "sourceIds", zt = function() {
        i(t, wt(C(E(j))));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Ft = function() {
        i(t, It(C(E(j))));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), qt = "/solaruser", Wt = "solarUserPath", Vt = "/api/v1/sec", Bt = "userIds", Kt = function() {
        i(t, St(H(E(j))));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Qt = Kt.instructionParameter, Yt = function() {
        i(t, Dt(H(E(j))));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Gt = function() {
        i(t, Mt(H(j)));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Jt = function() {
        i(t, Tt(H(j)));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Xt = function() {
        i(t, Pt(H(j)));
        var e = s(t);
        function t() {
            return l(this, t), e.apply(this, arguments);
        }
        return a(t);
    }(), Zt = 2;
    function $t(e) {
        if (!(Zt < e) && console) {
            var t;
            switch (e) {
              case 1:
                t = console.error;
                break;

              case 2:
                t = console.warn;
                break;

              case 3:
                t = console.info;
            }
            if (t = t || console.log) {
                for (var n = arguments.length, r = new Array(1 < n ? n - 1 : 0), i = 1; i < n; i++) r[i - 1] = arguments[i];
                t.apply(void 0, r);
            }
        }
    }
    var en = Object.freeze({
        DEBUG: 4,
        INFO: 3,
        WARN: 2,
        ERROR: 1,
        OFF: 0
    }), tn = function() {
        function e() {
            l(this, e);
        }
        return a(e, null, [ {
            key: "debug",
            value: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                $t.apply(void 0, [ 4 ].concat(t));
            }
        }, {
            key: "info",
            value: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                $t.apply(void 0, [ 3 ].concat(t));
            }
        }, {
            key: "warn",
            value: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                $t.apply(void 0, [ 2 ].concat(t));
            }
        }, {
            key: "error",
            value: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                $t.apply(void 0, [ 1 ].concat(t));
            }
        } ]), e;
    }();
    Object.defineProperties(tn, {
        level: {
            get: function() {
                return Zt;
            },
            set: function(e) {
                Zt = "number" == typeof e ? e : 0;
            }
        }
    }), Object.defineProperty(e, "dateParse", {
        enumerable: !0,
        get: function() {
            return t.isoParse;
        }
    }), Object.defineProperty(e, "dateTimeUrlParse", {
        enumerable: !0,
        get: function() {
            return t.isoParse;
        }
    }), e.Aggregation = d, e.Aggregations = y, e.AuthTokenStatus = v, e.AuthTokenStatuses = ce, 
    e.AuthTokenType = m, e.AuthTokenTypes = he, e.AuthTokenUrlHelperMixin = function(n) {
        return function() {
            i(t, n);
            var e = s(t);
            function t() {
                return l(this, t), e.apply(this, arguments);
            }
            return a(t, [ {
                key: "refreshTokenV2Url",
                value: function(e) {
                    return this.baseUrl() + "/auth-tokens/refresh/v2?date=" + encodeURIComponent(ne(e || new Date()));
                }
            } ]), t;
        }();
    }, e.AuthorizationV2Builder = vt, e.BitmaskEnum = w, e.CombiningType = g, e.CombiningTypes = de, 
    e.ComparableEnum = $, e.Configuration = lt, e.DatumAuxiliaryType = ye, e.DatumAuxiliaryTypes = ve, 
    e.DatumFilter = b, e.DatumReadingType = A, e.DatumReadingTypes = Qe, e.DeviceOperatingState = I, 
    e.DeviceOperatingStates = Ge, e.Enum = f, e.Environment = ht, e.GeneralMetadata = Je, 
    e.HttpContentType = dt, e.HttpHeaders = N, e.HttpMethod = ft, e.InstructionState = S, 
    e.InstructionStates = et, e.Location = De, e.LocationDatumMetadataUrlHelper = _t, 
    e.LocationDatumMetadataUrlHelperMixin = bt, e.LocationDatumUrlHelper = Rt, e.LocationDatumUrlHelperMixin = At, 
    e.LocationPrecision = D, e.LocationPrecisions = nt, e.LocationUrlHelperMixin = Ut, 
    e.Logger = tn, e.MultiMap = O, e.NodeDatumMetadataUrlHelper = zt, e.NodeDatumMetadataUrlHelperMixin = wt, 
    e.NodeDatumUrlHelper = Ft, e.NodeDatumUrlHelperMixin = It, e.NodeInstructionUrlHelper = Kt, 
    e.NodeInstructionUrlHelperMixin = St, e.NodeMetadataUrlHelper = Yt, e.NodeMetadataUrlHelperMixin = Dt, 
    e.NodeUrlHelperMixin = E, e.Pagination = k, e.PropMap = me, e.QueryUrlHelperMixin = C, 
    e.SecurityPolicy = rt, e.SecurityPolicyBuilder = ot, e.SkyCondition = P, e.SkyConditions = st, 
    e.SolarQueryApiPathV1 = Ht, e.SolarQueryDefaultPath = Ct, e.SolarQueryPathKey = Et, 
    e.SolarQueryPublicPathKey = jt, e.SolarUserApiPathV1 = Vt, e.SolarUserDefaultPath = qt, 
    e.SolarUserPathKey = Wt, e.SortDescriptor = U, e.UrlHelper = j, e.UserAuthTokenUrlHelper = Gt, 
    e.UserAuthTokenUrlHelperMixin = Mt, e.UserDatumAuxiliaryUrlHelper = Jt, e.UserDatumAuxiliaryUrlHelperMixin = Tt, 
    e.UserMetadataUrlHelper = Xt, e.UserMetadataUrlHelperMixin = Pt, e.UserUrlHelperMixin = H, 
    e.arrayData = x, e.dateFormat = ne, e.dateParser = function(e) {
        return t.isoParse(e) || re(e) || ie(e);
    }, e.dateTimeFormat = L, e.dateTimeParse = ie, e.dateTimeUrlFormat = p, e.dateUtils = z, 
    e.displayScaleForValue = function(e) {
        var t = 1, e = Math.abs(Number(e));
        return !1 === isNaN(e) && (1e9 <= e ? t = 1e9 : 1e6 <= e ? t = 1e6 : 1e3 <= e && (t = 1e3)), 
        t;
    }, e.displayUnitsForScale = function(e, t) {
        return (1e9 === t ? "G" : 1e6 === t ? "M" : 1e3 === t ? "k" : "") + e;
    }, e.instructionParameter = Qt, e.iso8601Date = ae, e.logLevels = en, e.nestData = F, 
    e.objectToStringMap = Ze, e.seasonForDate = function(e) {
        return (e = e.getUTCMonth ? e.getUTCMonth() : Number(e)) < 2 || 11 === e ? 3 : e < 5 ? 0 : e < 8 ? 1 : 2;
    }, e.stringMapToObject = Xe, e.timestampFormat = te, e.timestampParse = re, 
    e.urlQuery = pt, Object.defineProperty(e, "__esModule", {
        value: !0
    });
});