// https://github.com/SolarNetwork/sn-api-core-js Version 0.23.1-dev.0. Copyright 2022 SolarNetwork Foundation.
import {
    max,
    ascending,
    sum
} from "d3-array";

import {
    nest as nest$1
} from "d3-collection";

import {
    utcHour,
    utcYear,
    utcMonth,
    utcDay,
    utcMinute
} from "d3-time";

import {
    utcFormat,
    utcParse,
    isoParse
} from "d3-time-format";

export {
    isoParse as dateParse,
    isoParse as dateTimeUrlParse
} from "d3-time-format";

import Base64 from "crypto-js/enc-base64";

import Hex from "crypto-js/enc-hex";

import HmacSHA256 from "crypto-js/hmac-sha256";

import SHA256 from "crypto-js/sha256";

import {
    parse
} from "uri-js";

function timeNormalizeDataArray(e, t) {
    var r = 1e3 * t.level;
    if (!Array.isArray(e) || e.length < 2) return e;
    for (var n = 0; n < e.length - 1; ) {
        var a = e[n], i = a.date.getTime(), o = i + r, s = e[n + 1].date.getTime();
        if (o < s) {
            for (var u = [ n + 1, 0 ], l = i + r; l < s; l += r) {
                var c, h = Object.create(Object.getPrototypeOf(a), Object.getOwnPropertyDescriptors(a));
                for (c in h) h[c] = null;
                h.date = new Date(l), u.push(h);
            }
            Array.prototype.splice.apply(e, u), n += u.length;
        }
        n += 1;
    }
}

var array = Object.freeze({
    timeNormalizeDataArray: timeNormalizeDataArray
});

function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
        return typeof e;
    } : function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
    })(e);
}

function _classCallCheck(e, t) {
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}

function _defineProperties(e, t) {
    for (var r = 0; r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
        Object.defineProperty(e, n.key, n);
    }
}

function _createClass(e, t, r) {
    return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), 
    Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}

function _inherits(e, t) {
    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
    e.prototype = Object.create(t && t.prototype, {
        constructor: {
            value: e,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(e, "prototype", {
        writable: !1
    }), t && _setPrototypeOf(e, t);
}

function _getPrototypeOf(e) {
    return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
        return e.__proto__ || Object.getPrototypeOf(e);
    })(e);
}

function _setPrototypeOf(e, t) {
    return (_setPrototypeOf = Object.setPrototypeOf || function(e, t) {
        return e.__proto__ = t, e;
    })(e, t);
}

function _isNativeReflectConstruct() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (e) {
        return !1;
    }
}

function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}

function _possibleConstructorReturn(e, t) {
    if (t && ("object" == typeof t || "function" == typeof t)) return t;
    if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
    return _assertThisInitialized(e);
}

function _createSuper(r) {
    var n = _isNativeReflectConstruct();
    return function() {
        var e, t = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, n ? (e = _getPrototypeOf(this).constructor, 
        Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
    };
}

function _superPropBase(e, t) {
    for (;!Object.prototype.hasOwnProperty.call(e, t) && null !== (e = _getPrototypeOf(e)); );
    return e;
}

function _get() {
    return (_get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e, t, r) {
        var n = _superPropBase(e, t);
        if (n) return n = Object.getOwnPropertyDescriptor(n, t), n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;
    }).apply(this, arguments);
}

function _slicedToArray(e, t) {
    return _arrayWithHoles(e) || _iterableToArrayLimit(e, t) || _unsupportedIterableToArray(e, t) || _nonIterableRest();
}

function _arrayWithHoles(e) {
    if (Array.isArray(e)) return e;
}

function _iterableToArrayLimit(e, t) {
    var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
    if (null != r) {
        var n, a, i = [], o = !0, s = !1;
        try {
            for (r = r.call(e); !(o = (n = r.next()).done) && (i.push(n.value), 
            !t || i.length !== t); o = !0);
        } catch (e) {
            s = !0, a = e;
        } finally {
            try {
                o || null == r.return || r.return();
            } finally {
                if (s) throw a;
            }
        }
        return i;
    }
}

function _unsupportedIterableToArray(e, t) {
    if (e) {
        if ("string" == typeof e) return _arrayLikeToArray(e, t);
        var r = Object.prototype.toString.call(e).slice(8, -1);
        return "Map" === (r = "Object" === r && e.constructor ? e.constructor.name : r) || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(e, t) : void 0;
    }
}

function _arrayLikeToArray(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
    return n;
}

function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _createForOfIteratorHelper(e, t) {
    var r, n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
    if (!n) {
        if (Array.isArray(e) || (n = _unsupportedIterableToArray(e)) || t && e && "number" == typeof e.length) return n && (e = n), 
        r = 0, {
            s: t = function() {},
            n: function() {
                return r >= e.length ? {
                    done: !0
                } : {
                    done: !1,
                    value: e[r++]
                };
            },
            e: function(e) {
                throw e;
            },
            f: t
        };
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var a, i = !0, o = !1;
    return {
        s: function() {
            n = n.call(e);
        },
        n: function() {
            var e = n.next();
            return i = e.done, e;
        },
        e: function(e) {
            o = !0, a = e;
        },
        f: function() {
            try {
                i || null == n.return || n.return();
            } finally {
                if (o) throw a;
            }
        }
    };
}

var Enum = function() {
    function t(e) {
        _classCallCheck(this, t), this._name = e, this.constructor === t && Object.freeze(this);
    }
    return _createClass(t, [ {
        key: "name",
        get: function() {
            return this._name;
        }
    }, {
        key: "equals",
        value: function(e) {
            return this.constructor === e.constructor ? e.name === this.name : e === this.name;
        }
    } ], [ {
        key: "enumValues",
        value: function() {
            return [];
        }
    }, {
        key: "enumsValue",
        value: function(e) {
            return Object.freeze(e.reduce(function(e, t) {
                return e[t.name] = t, e;
            }, {}));
        }
    }, {
        key: "valueOf",
        value: function(e) {
            var t = this.enumValues();
            if (Array.isArray(t)) for (var r = 0, n = t.length; r < n; r += 1) if (e === t[r].name) return t[r];
        }
    }, {
        key: "namesFor",
        value: function(e) {
            var t = [];
            if (e) {
                var r, n = _createForOfIteratorHelper(e);
                try {
                    for (n.s(); !(r = n.n()).done; ) {
                        var a = r.value;
                        t.push(a.name);
                    }
                } catch (e) {
                    n.e(e);
                } finally {
                    n.f();
                }
            }
            return t;
        }
    } ]), t;
}(), ComparableEnum = function() {
    _inherits(n, Enum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e))._value = t, e.constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "value",
        get: function() {
            return this._value;
        }
    }, {
        key: "compareTo",
        value: function(e) {
            return this.value < e.value ? -1 : this.value > e.value ? 1 : 0;
        }
    } ], [ {
        key: "minimumEnumSet",
        value: function(e, t) {
            if (!e) return null;
            if (n = t ? t.get(e.name) : void 0) return n;
            var r, n = new Set(), a = _createForOfIteratorHelper(e.constructor.enumValues());
            try {
                for (a.s(); !(r = a.n()).done; ) {
                    var i = r.value;
                    -1 < i.compareTo(e) && n.add(i);
                }
            } catch (e) {
                a.e(e);
            } finally {
                a.f();
            }
            return t && t.set(e.name, n), 0 < n.size ? n : null;
        }
    } ]), n;
}(), Aggregation = function() {
    _inherits(n, ComparableEnum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e, t)).constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "level",
        get: function() {
            return this.value;
        }
    } ], [ {
        key: "enumValues",
        value: function() {
            return AggregationValues;
        }
    } ]), n;
}(), AggregationValues = Object.freeze([ new Aggregation("Minute", 60), new Aggregation("FiveMinute", 300), new Aggregation("TenMinute", 600), new Aggregation("FifteenMinute", 900), new Aggregation("ThirtyMinute", 1800), new Aggregation("Hour", 3600), new Aggregation("HourOfDay", 3600), new Aggregation("SeasonalHourOfDay", 3600), new Aggregation("Day", 86400), new Aggregation("DayOfWeek", 86400), new Aggregation("SeasonalDayOfWeek", 86400), new Aggregation("Week", 604800), new Aggregation("WeekOfYear", 604800), new Aggregation("Month", 2419200), new Aggregation("Year", 31536e3), new Aggregation("RunningTotal", Number.MAX_SAFE_INTEGER) ]), Aggregations = Aggregation.enumsValue(AggregationValues), timestampFormat = utcFormat("%Y-%m-%d %H:%M:%S.%LZ"), dateTimeFormat = utcFormat("%Y-%m-%d %H:%M"), dateTimeUrlFormat = utcFormat("%Y-%m-%dT%H:%M"), dateFormat = utcFormat("%Y-%m-%d"), timestampParse = utcParse("%Y-%m-%d %H:%M:%S.%LZ"), dateTimeParse = utcParse("%Y-%m-%d %H:%M");

function dateParser(e) {
    return isoParse(e) || timestampParse(e) || dateTimeParse(e);
}

function iso8601Date(e, t) {
    return "" + e.getUTCFullYear() + (e.getUTCMonth() < 9 ? "0" : "") + (e.getUTCMonth() + 1) + (e.getUTCDate() < 10 ? "0" : "") + e.getUTCDate() + (t ? "T" + (e.getUTCHours() < 10 ? "0" : "") + e.getUTCHours() + (e.getUTCMinutes() < 10 ? "0" : "") + e.getUTCMinutes() + (e.getUTCSeconds() < 10 ? "0" : "") + e.getUTCSeconds() + "Z" : "");
}

function seasonForDate(e) {
    e = e.getUTCMonth ? e.getUTCMonth() : Number(e);
    return e < 2 || 11 === e ? 3 : e < 5 ? 0 : e < 8 ? 1 : 2;
}

function rollingQueryDateRange(e, t, r) {
    function n(e, t) {
        var r = e.ceil(t);
        return r = r.getTime() === t.getTime() ? e.offset(r, 1) : r;
    }
    function a(e) {
        e = isNaN(Number(t)) ? void 0 !== t[e] ? Number(t[e]) : 1 : t;
        return e = "number" != typeof e ? 1 : e;
    }
    var i, o, s, u;
    return r = r || new Date(), {
        start: e.compareTo(Aggregations.Hour) < 0 ? (i = a("numHours"), o = Aggregations.Hour, 
        s = n(utcMinute, r), u = Math.min(30, e.level / 60), s.setUTCMinutes(s.getUTCMinutes() + u - s.getUTCMinutes() % u, 0, 0), 
        utcHour.offset(s, -i)) : Aggregations.Month.equals(e) ? (i = a("numYears"), 
        o = Aggregations.Year, s = n(utcMonth, r), utcYear.offset(utcMonth.floor(r), -i)) : Aggregations.Day.equals(e) ? (i = a("numMonths"), 
        o = Aggregations.Month, s = n(utcDay, r), utcMonth.offset(utcDay.floor(r), -i)) : (i = a("numDays"), 
        o = Aggregations.Day, s = n(utcHour, r), utcDay.offset(utcHour.floor(s), -i)),
        end: s,
        timeUnit: o,
        timeCount: i,
        aggregate: e
    };
}

function datumDate(e) {
    return e ? e.date || (e.localDate ? dateTimeParse(e.localDate + (e.localTime ? " " + e.localTime : " 00:00")) : e.created ? timestampParse(e.created) || isoParse(e.created) : void 0) : null;
}

var date = Object.freeze({
    datumDate: datumDate,
    rollingQueryDateRange: rollingQueryDateRange
});

function normalizeNestedStackDataByDate(e, t, r) {
    var n, a, i, o, s, u = 0, l = e.length - 1;
    if (0 < l) for (;u < max(e.map(function(e) {
        return e.values.length;
    })); ) {
        for (i = void 0, n = 0; n <= l; n++) if (!(e[n].values.length <= u) && (e[a = n < l ? n + 1 : 0].values.length <= u || e[n].values[u].date.getTime() < e[a].values[u].date.getTime())) {
            if (i = {
                date: e[n].values[u].date,
                sourceId: e[a].key
            }, t) for (o in t) Object.prototype.hasOwnProperty.call(t, o) && (i[o] = t[o]);
            r && (s = e[a].values.length > u ? u : 0 < u ? u - 1 : null, r(i, e[a].key, null !== s ? e[a].values[s] : void 0)), 
            e[a].values.splice(u, 0, i);
        }
        void 0 === i && u++;
    }
}

function aggregateNestedDataLayers(e, t, r, n, a) {
    var i, o, s, u, l, c, h, d = e.length, y = r ? r.length : 0, p = n ? n.length : 0, f = e[0].values.length;
    if (0 < f) {
        for (h = [], i = 0; i < f; i += 1) {
            if (u = e[0].values[i], c = {}, void 0 !== a) for (l in a) Object.prototype.hasOwnProperty.call(a, l) && (c[l] = a[l]);
            for (s = 0; s < y; s += 1) c[r[s]] = u[r[s]];
            for (s = 0; s < p; s += 1) c[n[s]] = 0;
            for (o = 0; o < d; o += 1) for (s = 0; s < p; s += 1) void 0 !== (l = e[o].values[i][n[s]]) && (c[n[s]] += l);
            h.push(c);
        }
        e = [ {
            key: t,
            values: h
        } ];
    }
    return e;
}

function groupedBySourceMetricDataArray(e, t, n, r) {
    function a(e) {
        return e[t];
    }
    var i = "function" == typeof r ? r : sum, r = nest$1().key(function(e) {
        return n && n.has(e.sourceId) ? n.get(e.sourceId) : e.sourceId;
    }).sortKeys(ascending).key(function(e) {
        return e.localDate + " " + e.localTime;
    }).rollup(function(e) {
        var t = {
            date: datumDate(e[0])
        }, r = e[0].sourceId;
        return t[r = n && n.has(r) ? n.get(r) : r] = i(e, a), t;
    }).entries(e).map(function(e) {
        return {
            key: e.key,
            values: e.values.map(function(e) {
                return e.value;
            })
        };
    });
    return normalizeNestedStackDataByDate(r, null, function(e, t) {
        e[t] = null;
    }), r.reduce(function(e, r) {
        return e ? (e.forEach(function(e, t) {
            t = r.values[t][r.key];
            e[r.key] = t;
        }), e) : r.values;
    }, null);
}

var nest = Object.freeze({
    aggregateNestedDataLayers: aggregateNestedDataLayers,
    groupedBySourceMetricDataArray: groupedBySourceMetricDataArray,
    normalizeNestedStackDataByDate: normalizeNestedStackDataByDate
}), AuthTokenStatus = function() {
    _inherits(r, Enum);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), (e = t.call(this, e)).constructor === r && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return AuthTokenStatusValues;
        }
    } ]), r;
}(), AuthTokenStatusValues = Object.freeze([ new AuthTokenStatus("Active"), new AuthTokenStatus("Disabled") ]), AuthTokenStatuses = AuthTokenStatus.enumsValue(AuthTokenStatusValues), AuthTokenType = function() {
    _inherits(r, Enum);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), (e = t.call(this, e)).constructor === r && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return AuthTokenTypeValues;
        }
    } ]), r;
}(), AuthTokenTypeValues = Object.freeze([ new AuthTokenType("ReadNodeData"), new AuthTokenType("User") ]), AuthTokenTypes = AuthTokenType.enumsValue(AuthTokenTypeValues), CombiningType = function() {
    _inherits(r, Enum);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), (e = t.call(this, e)).constructor === r && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return CombiningTypeValues;
        }
    } ]), r;
}(), CombiningTypeValues = Object.freeze([ new CombiningType("Average"), new CombiningType("Sum"), new CombiningType("Difference") ]), CombiningTypes = CombiningType.enumsValue(CombiningTypeValues), DatumAuxiliaryType = function() {
    _inherits(r, Enum);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), (e = t.call(this, e)).constructor === r && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return DatumAuxiliaryTypeValues;
        }
    } ]), r;
}(), DatumAuxiliaryTypeValues = Object.freeze([ new DatumAuxiliaryType("Reset") ]), DatumAuxiliaryTypes = DatumAuxiliaryType.enumsValue(DatumAuxiliaryTypeValues), Pagination = function() {
    function r(e, t) {
        _classCallCheck(this, r), this._max = 0 < e ? +e : 0, this._offset = 0 < t ? +t : 0;
    }
    return _createClass(r, [ {
        key: "max",
        get: function() {
            return this._max;
        }
    }, {
        key: "offset",
        get: function() {
            return this._offset;
        }
    }, {
        key: "withOffset",
        value: function(e) {
            return new r(this.max, e);
        }
    }, {
        key: "toUriEncoding",
        value: function() {
            var e = "";
            return 0 < this.max && (e += "max=" + this.max), 0 < this.offset && (0 < e.length && (e += "&"), 
            e += "offset=" + this.offset), e;
        }
    } ]), r;
}(), SortDescriptor = function() {
    function r(e, t) {
        _classCallCheck(this, r), this._key = e, this._descending = !!t;
    }
    return _createClass(r, [ {
        key: "key",
        get: function() {
            return this._key;
        }
    }, {
        key: "descending",
        get: function() {
            return this._descending;
        }
    }, {
        key: "toUriEncoding",
        value: function(e, t) {
            var t = t || "sorts", r = void 0 !== e && 0 <= e ? encodeURIComponent(t + "[" + e + "].key") + "=" : "key=";
            return r += encodeURIComponent(this.key), this.descending && (r += void 0 !== e && 0 <= e ? "&" + encodeURIComponent(t + "[" + e + "].descending") + "=true" : "&descending=true"), 
            r;
        }
    } ]), r;
}(), PropMap = function() {
    function t(e) {
        _classCallCheck(this, t), this.props = e instanceof t ? e.properties() : "object" === _typeof(e) ? e : {};
    }
    return _createClass(t, [ {
        key: "prop",
        value: function(e, t) {
            return 1 === arguments.length ? this.props[e] : (null === t ? delete this.props[e] : this.props[e] = t, 
            this);
        }
    }, {
        key: "properties",
        value: function(e) {
            if (e) {
                for (var t = 0, r = Object.keys(e); t < r.length; t++) {
                    var n = r[t];
                    this.prop(n, e[n]);
                }
                return this;
            }
            return Object.assign({}, this.props);
        }
    }, {
        key: "toUriEncoding",
        value: function(a, i) {
            for (var o = this, s = "", u = 0, l = Object.keys(this.props); u < l.length; u++) !function() {
                var r = l[u], e = (0 < s.length && (s += "&"), o.props[r]), n = !1;
                if (i) {
                    var t = i(r, e);
                    if (null === t) return;
                    Array.isArray(t) && 1 < t.length && (r = t[0], e = t[1], 2 < t.length && (n = !!t[2]));
                }
                if ("function" == typeof e.toUriEncoding) return s += e.toUriEncoding(a ? encodeURIComponent(a) + "." + r : r);
                a && (s += encodeURIComponent(a) + "."), s += encodeURIComponent(r) + "=", 
                Array.isArray(e) ? e.forEach(function(e, t) {
                    0 < t && (s += n ? "&" + encodeURIComponent(r) + "=" : ","), 
                    e instanceof Enum && (e = e.name), s += encodeURIComponent(e);
                }) : (e instanceof Enum && (e = e.name), s += encodeURIComponent(e));
            }();
            return s;
        }
    }, {
        key: "toUriEncodingWithSorting",
        value: function(e, t, r, n) {
            var a = this.toUriEncoding(r, n);
            return Array.isArray(e) && e.forEach(function(e, t) {
                e instanceof SortDescriptor && (0 < a.length && (a += "&"), a += e.toUriEncoding(t));
            }), t instanceof Pagination && ((r = t.toUriEncoding()) && (0 < a.length && (a += "&"), 
            a += r)), a;
        }
    } ]), t;
}(), CountryKey = "country", ElevationKey = "elevation", LatitudeKey = "latitude", IdKey = "id", LocalityKey = "locality", LongitudeKey = "longitude", NameKey = "name", PostalCodeKey = "postalCode", RegionKey = "region", StateOrProvinceKey = "stateOrProvince", StreetKey = "street", TimeZoneIdKey = "timeZoneId", Location = function() {
    _inherits(r, PropMap);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), t.call(this, e);
    }
    return _createClass(r, [ {
        key: "id",
        get: function() {
            return this.prop(IdKey);
        },
        set: function(e) {
            this.prop(IdKey, e);
        }
    }, {
        key: "name",
        get: function() {
            return this.prop(NameKey);
        },
        set: function(e) {
            this.prop(NameKey, e);
        }
    }, {
        key: "country",
        get: function() {
            return this.prop(CountryKey);
        },
        set: function(e) {
            this.prop(CountryKey, e);
        }
    }, {
        key: "region",
        get: function() {
            return this.prop(RegionKey);
        },
        set: function(e) {
            this.prop(RegionKey, e);
        }
    }, {
        key: "stateOrProvince",
        get: function() {
            return this.prop(StateOrProvinceKey);
        },
        set: function(e) {
            this.prop(StateOrProvinceKey, e);
        }
    }, {
        key: "locality",
        get: function() {
            return this.prop(LocalityKey);
        },
        set: function(e) {
            this.prop(LocalityKey, e);
        }
    }, {
        key: "postalCode",
        get: function() {
            return this.prop(PostalCodeKey);
        },
        set: function(e) {
            this.prop(PostalCodeKey, e);
        }
    }, {
        key: "street",
        get: function() {
            return this.prop(StreetKey);
        },
        set: function(e) {
            this.prop(StreetKey, e);
        }
    }, {
        key: "latitude",
        get: function() {
            return this.prop(LatitudeKey);
        },
        set: function(e) {
            this.prop(LatitudeKey, e);
        }
    }, {
        key: "longitude",
        get: function() {
            return this.prop(LongitudeKey);
        },
        set: function(e) {
            this.prop(LongitudeKey, e);
        }
    }, {
        key: "elevation",
        get: function() {
            return this.prop(ElevationKey);
        },
        set: function(e) {
            this.prop(ElevationKey, e);
        }
    }, {
        key: "timeZoneId",
        get: function() {
            return this.prop(TimeZoneIdKey);
        },
        set: function(e) {
            this.prop(TimeZoneIdKey, e);
        }
    } ]), r;
}(), AggregationKey = "aggregation", CombiningTypeKey = "combiningType", DataPathKey = "dataPath", EndDateKey = "endDate", LocationIdsKey$1 = "locationIds", LocationKey = "location", MetadataFilterKey = "metadataFilter", MostRecentKey = "mostRecent", NodeIdMapsKey = "nodeIdMaps", NodeIdsKey$1 = "nodeIds", PartialAggregationKey = "partialAggregation", QueryKey = "query", SourceIdMapsKey = "sourceIdMaps", SourceIdsKey$2 = "sourceIds", StartDateKey = "startDate", StreamIdsKey = "streamIds", TagsKey = "tags", UserIdsKey$1 = "userIds", WithoutTotalResultsCountKey = "withoutTotalResultsCount";

function idMapQueryParameterValue(e) {
    if (!(e instanceof Map && 0 < e.size)) return null;
    var t, r = [], n = _createForOfIteratorHelper(e);
    try {
        for (n.s(); !(t = n.n()).done; ) {
            var a = t.value;
            a[1] instanceof Set && r.push("".concat(a[0], ":").concat(Array.from(a[1]).join(",")));
        }
    } catch (e) {
        n.e(e);
    } finally {
        n.f();
    }
    return r;
}

var DatumFilter = function() {
    _inherits(r, PropMap);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), t.call(this, e);
    }
    return _createClass(r, [ {
        key: "nodeId",
        get: function() {
            var e = this.nodeIds;
            return Array.isArray(e) && 0 < e.length ? e[0] : null;
        },
        set: function(e) {
            this.nodeIds = e ? [ e ] : null;
        }
    }, {
        key: "nodeIds",
        get: function() {
            return this.prop(NodeIdsKey$1);
        },
        set: function(e) {
            this.prop(NodeIdsKey$1, Array.isArray(e) ? e : null);
        }
    }, {
        key: "locationId",
        get: function() {
            var e = this.locationIds;
            return Array.isArray(e) && 0 < e.length ? e[0] : null;
        },
        set: function(e) {
            this.locationIds = e ? [ e ] : null;
        }
    }, {
        key: "locationIds",
        get: function() {
            return this.prop(LocationIdsKey$1);
        },
        set: function(e) {
            this.prop(LocationIdsKey$1, Array.isArray(e) ? e : null);
        }
    }, {
        key: "sourceId",
        get: function() {
            var e = this.sourceIds;
            return Array.isArray(e) && 0 < e.length ? e[0] : null;
        },
        set: function(e) {
            this.sourceIds = e ? [ e ] : null;
        }
    }, {
        key: "sourceIds",
        get: function() {
            return this.prop(SourceIdsKey$2);
        },
        set: function(e) {
            this.prop(SourceIdsKey$2, Array.isArray(e) ? e : null);
        }
    }, {
        key: "streamId",
        get: function() {
            var e = this.streamIds;
            return Array.isArray(e) && 0 < e.length ? e[0] : null;
        },
        set: function(e) {
            this.streamIds = e ? [ e ] : null;
        }
    }, {
        key: "streamIds",
        get: function() {
            return this.prop(StreamIdsKey);
        },
        set: function(e) {
            this.prop(StreamIdsKey, Array.isArray(e) ? e : null);
        }
    }, {
        key: "userId",
        get: function() {
            var e = this.userIds;
            return Array.isArray(e) && 0 < e.length ? e[0] : null;
        },
        set: function(e) {
            this.userIds = e ? [ e ] : null;
        }
    }, {
        key: "userIds",
        get: function() {
            return this.prop(UserIdsKey$1);
        },
        set: function(e) {
            this.prop(UserIdsKey$1, Array.isArray(e) ? e : null);
        }
    }, {
        key: "mostRecent",
        get: function() {
            return !!this.prop(MostRecentKey);
        },
        set: function(e) {
            this.prop(MostRecentKey, !!e);
        }
    }, {
        key: "startDate",
        get: function() {
            return this.prop(StartDateKey);
        },
        set: function(e) {
            this.prop(StartDateKey, e);
        }
    }, {
        key: "endDate",
        get: function() {
            return this.prop(EndDateKey);
        },
        set: function(e) {
            this.prop(EndDateKey, e);
        }
    }, {
        key: "dataPath",
        get: function() {
            return this.prop(DataPathKey);
        },
        set: function(e) {
            this.prop(DataPathKey, e);
        }
    }, {
        key: "aggregation",
        get: function() {
            return this.prop(AggregationKey);
        },
        set: function(e) {
            this.prop(AggregationKey, e instanceof Aggregation ? e : null);
        }
    }, {
        key: "partialAggregation",
        get: function() {
            return this.prop(PartialAggregationKey);
        },
        set: function(e) {
            this.prop(PartialAggregationKey, e instanceof Aggregation ? e : null);
        }
    }, {
        key: "tags",
        get: function() {
            return this.prop(TagsKey);
        },
        set: function(e) {
            this.prop(TagsKey, Array.isArray(e) ? e : null);
        }
    }, {
        key: "location",
        get: function() {
            return this.prop(LocationKey);
        },
        set: function(e) {
            this.prop(LocationKey, e instanceof Location ? e : null);
        }
    }, {
        key: "query",
        get: function() {
            return this.prop(QueryKey);
        },
        set: function(e) {
            this.prop(QueryKey, e);
        }
    }, {
        key: "metadataFilter",
        get: function() {
            return this.prop(MetadataFilterKey);
        },
        set: function(e) {
            this.prop(MetadataFilterKey, e);
        }
    }, {
        key: "withoutTotalResultsCount",
        get: function() {
            return this.prop(WithoutTotalResultsCountKey);
        },
        set: function(e) {
            this.prop(WithoutTotalResultsCountKey, !!e);
        }
    }, {
        key: "combiningType",
        get: function() {
            return this.prop(CombiningTypeKey);
        },
        set: function(e) {
            this.prop(CombiningTypeKey, e instanceof CombiningType ? e : null);
        }
    }, {
        key: "nodeIdMaps",
        get: function() {
            return this.prop(NodeIdMapsKey);
        },
        set: function(e) {
            this.prop(NodeIdMapsKey, e instanceof Map ? e : null);
        }
    }, {
        key: "sourceIdMaps",
        get: function() {
            return this.prop(SourceIdMapsKey);
        },
        set: function(e) {
            this.prop(SourceIdMapsKey, e instanceof Map ? e : null);
        }
    }, {
        key: "toUriEncoding",
        value: function(e, t) {
            return _get(_getPrototypeOf(r.prototype), "toUriEncoding", this).call(this, e, t || datumFilterUriEncodingPropertyMapper);
        }
    } ]), r;
}();

function datumFilterUriEncodingPropertyMapper(e, t) {
    if (e === NodeIdsKey$1 || e === LocationIdsKey$1 || e === SourceIdsKey$2 || e === UserIdsKey$1) {
        if (Array.isArray(t) && 1 === t.length) return [ e.substring(0, e.length - 1), t[0] ];
    } else {
        if (e === StartDateKey || e === EndDateKey) return [ e, dateTimeUrlFormat(t) ];
        if (e === MostRecentKey && !t) return null;
        if (e === NodeIdMapsKey || e === SourceIdMapsKey) return (t = idMapQueryParameterValue(t)) ? [ e, t, !0 ] : null;
    }
    return e;
}

var KeyedEnum = function() {
    _inherits(n, Enum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e))._key = t, e.constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "key",
        get: function() {
            return this._key;
        }
    } ], [ {
        key: "valueOf",
        value: function(e) {
            var t = this.enumValues();
            if (Array.isArray(t)) for (var r = 0, n = t.length; r < n; r += 1) {
                if (e === t[r].key) return t[r];
                if (e === t[r].name) return t[r];
            }
        }
    } ]), n;
}(), DatumReadingType = function() {
    _inherits(n, KeyedEnum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e, t)).constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, null, [ {
        key: "enumValues",
        value: function() {
            return DatumReadingTypeValues;
        }
    } ]), n;
}(), DatumReadingTypeValues = Object.freeze([ new DatumReadingType("CalculatedAt", "at"), new DatumReadingType("CalculatedAtDifference", "atd"), new DatumReadingType("NearestDifference", "diff"), new DatumReadingType("Difference", "delta"), new DatumReadingType("DifferenceWithin", "change") ]), DatumReadingTypes = DatumReadingType.enumsValue(DatumReadingTypeValues), BitmaskEnum = function() {
    _inherits(n, Enum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e))._bitNumber = t, e.constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "bitmaskBitNumber",
        get: function() {
            return this._bitNumber;
        }
    }, {
        key: "bitmaskBitOffset",
        get: function() {
            return this._bitNumber - 1;
        }
    } ], [ {
        key: "enumForBitNumber",
        value: function(e, t) {
            var r, n = _createForOfIteratorHelper(t);
            try {
                for (n.s(); !(r = n.n()).done; ) {
                    var a = r.value;
                    if (a.bitmaskBitNumber == e) return a;
                }
            } catch (e) {
                n.e(e);
            } finally {
                n.f();
            }
            return null;
        }
    }, {
        key: "bitmaskValue",
        value: function(e) {
            var t = 0;
            if (null != e) {
                var r, n = _createForOfIteratorHelper(e);
                try {
                    for (n.s(); !(r = n.n()).done; ) {
                        var a = r.value;
                        0 <= a.bitmaskBitOffset && (t |= 1 << a.bitmaskBitOffset);
                    }
                } catch (e) {
                    n.e(e);
                } finally {
                    n.f();
                }
            }
            return t;
        }
    }, {
        key: "setForBitmaskEnum",
        value: function(e, t) {
            return n.setForBitmask(e, t.enumValues());
        }
    }, {
        key: "setForBitmask",
        value: function(e, t) {
            if (e < 1) return new Set();
            var r, n = new Set(), a = _createForOfIteratorHelper(t);
            try {
                for (a.s(); !(r = a.n()).done; ) {
                    var i = r.value, o = i.bitmaskBitOffset;
                    0 <= o && 1 == (e >> o & 1) && n.add(i);
                }
            } catch (e) {
                a.e(e);
            } finally {
                a.f();
            }
            return n;
        }
    } ]), n;
}(), DeviceOperatingState = function() {
    _inherits(n, BitmaskEnum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e, t)).constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "code",
        get: function() {
            return this.bitmaskBitNumber;
        }
    } ], [ {
        key: "forCode",
        value: function(e) {
            return BitmaskEnum.enumForBitNumber(e, DeviceOperatingStateValues);
        }
    }, {
        key: "enumValues",
        value: function() {
            return DeviceOperatingStateValues;
        }
    } ]), n;
}(), DeviceOperatingStateValues = Object.freeze([ new DeviceOperatingState("Unknown", 0), new DeviceOperatingState("Normal", 1), new DeviceOperatingState("Starting", 2), new DeviceOperatingState("Standby", 3), new DeviceOperatingState("Shutdown", 4), new DeviceOperatingState("Fault", 5), new DeviceOperatingState("Disabled", 6), new DeviceOperatingState("Recovery", 7), new DeviceOperatingState("Override", 8) ]), DeviceOperatingStates = DeviceOperatingState.enumsValue(DeviceOperatingStateValues), GeneralMetadata = function() {
    function a(e, t, r) {
        _classCallCheck(this, a), this.info = e || null, this.propertyInfo = t || null, 
        this.tags = r instanceof Set ? r : Array.isArray(r) ? new Set(r) : null;
    }
    return _createClass(a, [ {
        key: "toJsonEncoding",
        value: function() {
            var e = {}, t = this.info, t = (t && (e.m = stringMapToObject(t)), this.propertyInfo), t = (t && (e.pm = stringMapToObject(t)), 
            this.tags);
            return t && (e.t = Array.from(t)), JSON.stringify(e);
        }
    } ], [ {
        key: "fromJsonEncoding",
        value: function(e) {
            var t, r, n;
            return e && (t = (e = JSON.parse(e)).m ? objectToStringMap(e.m) : null, 
            r = e.pm ? objectToStringMap(e.pm) : null, n = Array.isArray(e.t) ? new Set(e.t) : null), 
            new a(t, r, n);
        }
    } ]), a;
}();

function stringMapToObject(e) {
    var t = Object.create(null);
    if (e) {
        var r, n = _createForOfIteratorHelper(e);
        try {
            for (n.s(); !(r = n.n()).done; ) {
                var a = _slicedToArray(r.value, 2), i = a[0], o = a[1];
                t[i] = o instanceof Map ? stringMapToObject(o) : o;
            }
        } catch (e) {
            n.e(e);
        } finally {
            n.f();
        }
    }
    return t;
}

function objectToStringMap(e) {
    var t = new Map();
    if (e) for (var r = 0, n = Object.keys(e); r < n.length; r++) {
        var a = n[r], i = e[a];
        t.set(a, "object" === _typeof(i) ? objectToStringMap(i) : i);
    }
    return t;
}

var InstructionState = function() {
    _inherits(r, Enum);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), (e = t.call(this, e)).constructor === r && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return InstructionStateValues;
        }
    } ]), r;
}(), InstructionStateValues = Object.freeze([ new InstructionState("Unknown"), new InstructionState("Queued"), new InstructionState("Received"), new InstructionState("Executing"), new InstructionState("Declined"), new InstructionState("Completed") ]), InstructionStates = InstructionState.enumsValue(InstructionStateValues), LocationPrecision = function() {
    _inherits(n, ComparableEnum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e, t)).constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "precision",
        get: function() {
            return this.value;
        }
    } ], [ {
        key: "enumValues",
        value: function() {
            return LocationPrecisionValues;
        }
    } ]), n;
}(), LocationPrecisionValues = Object.freeze([ new LocationPrecision("LatLong", 1), new LocationPrecision("Block", 5), new LocationPrecision("Street", 10), new LocationPrecision("PostalCode", 20), new LocationPrecision("Locality", 30), new LocationPrecision("StateOrProvince", 40), new LocationPrecision("Region", 50), new LocationPrecision("TimeZone", 60), new LocationPrecision("Country", 70) ]), LocationPrecisions = LocationPrecision.enumsValue(LocationPrecisionValues);

function setOrNull(e) {
    var t = null;
    return e instanceof Set ? t = 0 < e.size ? e : null : Array.isArray(e) ? t = 0 < e.length ? new Set(e) : null : e && (t = new Set([ e ])), 
    t;
}

function mergedSets(e, t) {
    var r = setOrNull(e), e = setOrNull(t);
    if (null === r && null === e) return null;
    if (null === e) return r;
    if (null === r) return e;
    var n, a = _createForOfIteratorHelper(e.values());
    try {
        for (a.s(); !(n = a.n()).done; ) {
            var i = n.value;
            r.add(i);
        }
    } catch (e) {
        a.e(e);
    } finally {
        a.f();
    }
    return r;
}

var SecurityPolicy = function() {
    function u(e, t, r, n, a, i, o, s) {
        _classCallCheck(this, u), this._nodeIds = setOrNull(e), this._sourceIds = setOrNull(t), 
        this._aggregations = setOrNull(r), this._minAggregation = n instanceof Aggregation ? n : null, 
        this._locationPrecisions = setOrNull(a), this._minLocationPrecision = i instanceof LocationPrecision ? i : null, 
        this._nodeMetadataPaths = setOrNull(o), this._userMetadataPaths = setOrNull(s), 
        this.constructor === u && Object.freeze(this);
    }
    return _createClass(u, [ {
        key: "nodeIds",
        get: function() {
            return this._nodeIds;
        }
    }, {
        key: "sourceIds",
        get: function() {
            return this._sourceIds;
        }
    }, {
        key: "aggregations",
        get: function() {
            return this._aggregations;
        }
    }, {
        key: "locationPrecisions",
        get: function() {
            return this._locationPrecisions;
        }
    }, {
        key: "minAggregation",
        get: function() {
            return this._minAggregation;
        }
    }, {
        key: "minLocationPrecision",
        get: function() {
            return this._minLocationPrecision;
        }
    }, {
        key: "nodeMetadataPaths",
        get: function() {
            return this._nodeMetadataPaths;
        }
    }, {
        key: "userMetadataPaths",
        get: function() {
            return this._userMetadataPaths;
        }
    }, {
        key: "toJsonEncoding",
        value: function() {
            var e = {}, t = this.nodeIds;
            return t && (e.nodeIds = Array.from(t)), (t = this.sourceIds) && (e.sourceIds = Array.from(t)), 
            (t = this.aggregations) && (e.aggregations = Array.from(t).map(function(e) {
                return e.name;
            })), (t = this.locationPrecisions) && (e.locationPrecisions = Array.from(t).map(function(e) {
                return e.name;
            })), (t = this.minAggregation) && (0 < e.length && (e += "&"), e.minAggregation = t.name), 
            (t = this.minLocationPrecision) && (e.minLocationPrecision = t.name), 
            (t = this.nodeMetadataPaths) && (e.nodeMetadataPaths = Array.from(t)), 
            (t = this.userMetadataPaths) && (e.userMetadataPaths = Array.from(t)), 
            JSON.stringify(e);
        }
    } ]), u;
}(), MIN_AGGREGATION_CACHE = new Map(), MIN_LOCATION_PRECISION_CACHE = new Map(), SecurityPolicyBuilder = function() {
    function e() {
        _classCallCheck(this, e);
    }
    return _createClass(e, [ {
        key: "withPolicy",
        value: function(e) {
            return e && this.withAggregations(e.aggregations).withMinAggregation(e.minAggregation).withLocationPrecisions(e.locationPrecisions).withMinLocationPrecision(e.minLocationPrecision).withNodeIds(e.nodeIds).withSourceIds(e.sourceIds).withNodeMetadataPaths(e.nodeMetadataPaths).withUserMetadataPaths(e.userMetadataPaths), 
            this;
        }
    }, {
        key: "addPolicy",
        value: function(e) {
            return e && (this.addAggregations(e.aggregations).addLocationPrecisions(e.locationPrecisions).addNodeIds(e.nodeIds).addSourceIds(e.sourceIds).addNodeMetadataPaths(e.nodeMetadataPaths).addUserMetadataPaths(e.userMetadataPaths), 
            e.minAggregation && this.withMinAggregation(e.minAggregation), e.minLocationPrecision && this.withMinLocationPrecision(e.minLocationPrecision)), 
            this;
        }
    }, {
        key: "withNodeIds",
        value: function(e) {
            return this.nodeIds = setOrNull(e), this;
        }
    }, {
        key: "addNodeIds",
        value: function(e) {
            return this.withNodeIds(mergedSets(this.nodeIds, e));
        }
    }, {
        key: "withNodeMetadataPaths",
        value: function(e) {
            return this.nodeMetadataPaths = setOrNull(e), this;
        }
    }, {
        key: "addNodeMetadataPaths",
        value: function(e) {
            return this.withNodeMetadataPaths(mergedSets(this.nodeMetadataPaths, e));
        }
    }, {
        key: "withUserMetadataPaths",
        value: function(e) {
            return this.userMetadataPaths = setOrNull(e), this;
        }
    }, {
        key: "addUserMetadataPaths",
        value: function(e) {
            return this.withUserMetadataPaths(mergedSets(this.userMetadataPaths, e));
        }
    }, {
        key: "withSourceIds",
        value: function(e) {
            return this.sourceIds = setOrNull(e), this;
        }
    }, {
        key: "addSourceIds",
        value: function(e) {
            return this.withSourceIds(mergedSets(this.sourceIds, e));
        }
    }, {
        key: "withAggregations",
        value: function(e) {
            return this.aggregations = setOrNull(e), this;
        }
    }, {
        key: "addAggregations",
        value: function(e) {
            return this.withAggregations(mergedSets(this.aggregations, e));
        }
    }, {
        key: "withLocationPrecisions",
        value: function(e) {
            return this.locationPrecisions = setOrNull(e), this;
        }
    }, {
        key: "addLocationPrecisions",
        value: function(e) {
            return this.withLocationPrecisions(mergedSets(this.locationPrecisions, e));
        }
    }, {
        key: "withMinAggregation",
        value: function(e) {
            return this.minAggregation = e, this;
        }
    }, {
        key: "buildAggregations",
        value: function() {
            var e = this.minAggregation, t = this.aggregations;
            return !e && t && 0 < t.size ? t : e ? Aggregation.minimumEnumSet(e, MIN_AGGREGATION_CACHE) : null;
        }
    }, {
        key: "withMinLocationPrecision",
        value: function(e) {
            return this.minLocationPrecision = e, this;
        }
    }, {
        key: "buildLocationPrecisions",
        value: function() {
            var e = this.minLocationPrecision, t = this.locationPrecisions;
            return !e && t && 0 < t.size ? t : e ? LocationPrecision.minimumEnumSet(e, MIN_LOCATION_PRECISION_CACHE) : null;
        }
    }, {
        key: "build",
        value: function() {
            return new SecurityPolicy(this.nodeIds, this.sourceIds, this.buildAggregations(), this.minAggregation, this.buildLocationPrecisions(), this.minLocationPrecision, this.nodeMetadataPaths, this.userMetadataPaths);
        }
    } ]), e;
}(), SkyCondition = function() {
    _inherits(n, BitmaskEnum);
    var r = _createSuper(n);
    function n(e, t) {
        return _classCallCheck(this, n), (e = r.call(this, e, t)).constructor === n && Object.freeze(_assertThisInitialized(e)), 
        e;
    }
    return _createClass(n, [ {
        key: "code",
        get: function() {
            return this.bitmaskBitNumber;
        }
    } ], [ {
        key: "forCode",
        value: function(e) {
            return BitmaskEnum.enumForBitNumber(e, SkyConditionValues);
        }
    }, {
        key: "enumValues",
        value: function() {
            return SkyConditionValues;
        }
    } ]), n;
}(), SkyConditionValues = Object.freeze([ new SkyCondition("Clear", 1), new SkyCondition("ScatteredClouds", 2), new SkyCondition("Cloudy", 3), new SkyCondition("Fog", 4), new SkyCondition("Drizzle", 5), new SkyCondition("ScatteredShowers", 6), new SkyCondition("Showers", 7), new SkyCondition("Rain", 8), new SkyCondition("Hail", 9), new SkyCondition("ScatteredSnow", 10), new SkyCondition("Snow", 11), new SkyCondition("Storm", 12), new SkyCondition("SevereStorm", 13), new SkyCondition("Thunder", 14), new SkyCondition("Windy", 15), new SkyCondition("Hazy", 16), new SkyCondition("Tornado", 17), new SkyCondition("Hurricane", 18), new SkyCondition("Dusty", 19) ]), SkyConditions = SkyCondition.enumsValue(SkyConditionValues);

function displayScaleForValue(e) {
    var t = 1, e = Math.abs(Number(e));
    return !1 === isNaN(e) && (1e9 <= e ? t = 1e9 : 1e6 <= e ? t = 1e6 : 1e3 <= e && (t = 1e3)), 
    t;
}

function displayUnitsForScale(e, t) {
    return (1e9 === t ? "G" : 1e6 === t ? "M" : 1e3 === t ? "k" : "") + e;
}

var AuthTokenUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "refreshTokenV2Url",
            value: function(e) {
                return this.baseUrl() + "/auth-tokens/refresh/v2?date=" + encodeURIComponent(dateFormat(e || new Date()));
            }
        } ]), t;
    }();
}, MultiMap = function() {
    function t(e) {
        _classCallCheck(this, t), this.mappings = {}, this.mappingNames = [], e && this.putAll(e);
    }
    return _createClass(t, [ {
        key: "add",
        value: function(e, t) {
            return addValue(this, e, t);
        }
    }, {
        key: "put",
        value: function(e, t) {
            return addValue(this, e, t, !0);
        }
    }, {
        key: "putAll",
        value: function(e) {
            for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && addValue(this, t, e[t], !0);
            return this;
        }
    }, {
        key: "value",
        value: function(e) {
            e = e.toLowerCase(), e = this.mappings[e];
            return e ? e.val : void 0;
        }
    }, {
        key: "firstValue",
        value: function(e) {
            e = this.value(e);
            return e && 0 < e.length ? e[0] : void 0;
        }
    }, {
        key: "clear",
        value: function() {
            return this.mappingNames.length = 0, this.mappings = {}, this;
        }
    }, {
        key: "remove",
        value: function(e) {
            var e = e.toLowerCase(), t = this.mappingNames.indexOf(e), r = this.mappings[e];
            return r && (delete this.mappings[e], this.mappingNames.splice(t, 1)), 
            r ? r.val : void 0;
        }
    }, {
        key: "size",
        value: function() {
            return this.mappingNames.length;
        }
    }, {
        key: "isEmpty",
        value: function() {
            return this.size() < 1;
        }
    }, {
        key: "containsKey",
        value: function(e) {
            return void 0 !== this.value(e);
        }
    }, {
        key: "keySet",
        value: function() {
            for (var e = [], t = this.size(), r = 0; r < t; r += 1) e.push(this.mappings[this.mappingNames[r]].key);
            return e;
        }
    } ]), t;
}();

function addValue(e, t, r, n) {
    if (void 0 === r) return e;
    var a = t.toLowerCase(), i = e.mappings[a];
    if (i || (e.mappings[a] = i = {
        key: t,
        val: []
    }, e.mappingNames.push(a)), n && (i.val.length = 0), Array.isArray(r)) for (var o = r.length, s = 0; s < o; s += 1) i.val.push(r[s]); else i.val.push(r);
    return e;
}

function createGetter(e, t) {
    return function() {
        return e.map[t];
    };
}

function createSetter(t, r) {
    return function(e) {
        t.map[r] = e;
    };
}

function createProperty(e, t) {
    Object.defineProperty(e, t, {
        enumerable: !0,
        configurable: !0,
        get: createGetter(e, t),
        set: createSetter(e, t)
    });
}

var Configuration = function() {
    function t(e) {
        _classCallCheck(this, t), this.map = {}, void 0 !== e && this.values(e);
    }
    return _createClass(t, [ {
        key: "enabled",
        value: function(e) {
            return void 0 !== e && !!this.map[e];
        }
    }, {
        key: "toggle",
        value: function(e, t) {
            var r = t;
            return void 0 === e ? this : (void 0 === t && (r = void 0 === this.map[e]), 
            this.value(e, !0 === r || null));
        }
    }, {
        key: "value",
        value: function(e, t) {
            return 1 === arguments.length ? this.map[e] : (null === t ? (delete this.map[e], 
            Object.prototype.hasOwnProperty.call(this, e) && delete this[e]) : (this.map[e] = t, 
            Object.prototype.hasOwnProperty.call(this, e) || createProperty(this, e)), 
            this);
        }
    }, {
        key: "values",
        value: function(e) {
            if (e) {
                for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && this.value(t, e[t]);
                return this;
            }
            return Object.assign({}, this.map);
        }
    } ]), t;
}();

function normalizedProtocol(e) {
    return e ? e.replace(/:$/, "") : "https";
}

function normalizedConfig(e) {
    e = Object.assign({
        host: "data.solarnetwork.net"
    }, e);
    return e.protocol = normalizedProtocol(e.protocol || "https"), e.port = e.port || ("https" === e.protocol ? 443 : 80), 
    e.host = e.port && e.hostname ? e.hostname : e.host, e;
}

var Environment = function() {
    _inherits(r, Configuration);
    var t = _createSuper(r);
    function r(e) {
        return _classCallCheck(this, r), t.call(this, normalizedConfig(e));
    }
    return _createClass(r, [ {
        key: "useTls",
        value: function() {
            return "https" === this.value("protocol");
        }
    } ]), r;
}(), HttpMethod = Object.freeze({
    GET: "GET",
    HEAD: "HEAD",
    POST: "POST",
    PUT: "PUT",
    PATCH: "PATCH",
    DELETE: "DELETE",
    OPTIONS: "OPTIONS",
    TRACE: "TRACE"
}), HttpContentType = Object.freeze({
    APPLICATION_JSON: "application/json",
    APPLICATION_JSON_UTF8: "application/json; charset=UTF-8",
    FORM_URLENCODED: "application/x-www-form-urlencoded",
    FORM_URLENCODED_UTF8: "application/x-www-form-urlencoded; charset=UTF-8"
}), HttpHeaders = function() {
    _inherits(t, MultiMap);
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.call(this);
    }
    return _createClass(t);
}();

function urlQueryParse(e, t) {
    var r, n, a, i, o, s = {};
    if (void 0 !== e && 0 < e.length) for (n = 0, a = (r = (e = e.match(/^\?/) ? e.substring(1) : e).split("&")).length; n < a; n++) 2 === (o = r[n].split("=", 2)).length && (i = decodeURIComponent(o[0]), 
    o = decodeURIComponent(o[1]), s[i] ? (Array.isArray(s[i]) || (s[i] = [ s[i] ]), 
    s[i].push(o)) : t && t.has(i) ? s[i] = [ o ] : s[i] = o);
    return s;
}

function urlQueryEncode(e, t) {
    var r, n, a, i, o = "", s = t || encodeURIComponent;
    function u(e, t) {
        o.length && (o += "&"), o += s(e) + "=" + s(t);
    }
    if (e) for (r in e) if (Object.prototype.hasOwnProperty.call(e, r)) if (n = e[r], 
    Array.isArray(n)) for (a = 0, i = n.length; a < i; a++) u(r, n[a]); else u(r, n);
    return o;
}

Object.defineProperties(HttpHeaders, {
    ACCEPT: {
        value: "Accept"
    },
    AUTHORIZATION: {
        value: "Authorization"
    },
    CONTENT_MD5: {
        value: "Content-MD5"
    },
    CONTENT_TYPE: {
        value: "Content-Type"
    },
    DATE: {
        value: "Date"
    },
    DIGEST: {
        value: "Digest"
    },
    HOST: {
        value: "Host"
    },
    X_SN_DATE: {
        value: "X-SN-Date"
    }
});

var urlQuery = {
    urlQueryParse: urlQueryParse,
    urlQueryEncode: urlQueryEncode
}, SIGNING_KEY_VALIDITY = 6048e5, AuthorizationV2Builder = function() {
    function r(e, t) {
        _classCallCheck(this, r), this.tokenId = e, this.environment = t || new Environment(), 
        this.httpHeaders = new HttpHeaders(), this.parameters = new MultiMap(), 
        this.forceHostPort = !1, this.reset();
    }
    return _createClass(r, [ {
        key: "reset",
        value: function() {
            this.contentDigest = null;
            var e = this.environment.host;
            return this.httpHeaders.clear(), this.parameters.clear(), this.signedHttpHeaders([]).method(HttpMethod.GET).host(e).path("/").date(new Date());
        }
    }, {
        key: "saveSigningKey",
        value: function(e) {
            return this.key(this.computeSigningKey(e), this.requestDate), this;
        }
    }, {
        key: "key",
        value: function(e, t) {
            if (void 0 === e) return this.signingKey;
            this.signingKey = e;
            e = new Date((t || this.requestDate).getTime() + SIGNING_KEY_VALIDITY);
            return e.setUTCHours(0), e.setUTCMinutes(0), e.setUTCSeconds(0), e.setUTCMilliseconds(0), 
            this.signingKeyExpiration = e, this;
        }
    }, {
        key: "signingKeyExpirationDate",
        get: function() {
            return this.signingKeyExpiration;
        }
    }, {
        key: "signingKeyValid",
        get: function() {
            return !!(this.signingKey && this.signingKeyExpiration instanceof Date && Date.now() < this.signingKeyExpiration.getTime());
        }
    }, {
        key: "method",
        value: function(e) {
            return this.httpMethod = e, this;
        }
    }, {
        key: "host",
        value: function(e) {
            return this.forceHostPort && e.indexOf(":") < 0 && 80 != this.environment.port && (e += ":" + this.environment.port), 
            this.httpHeaders.put(HttpHeaders.HOST, e), this;
        }
    }, {
        key: "path",
        value: function(e) {
            return this.requestPath = e, this;
        }
    }, {
        key: "url",
        value: function(e, t) {
            var e = parse(e), r = e.host;
            return !e.port || ("https" !== e.scheme && "wss" !== e.scheme || 443 === e.port) && ("http" !== e.scheme && "ws" !== e.scheme || 80 === e.port) || (r += ":" + e.port), 
            e.query && this.queryParams(urlQueryParse(e.query)), t || this.host(r), 
            this.path(e.path);
        }
    }, {
        key: "contentType",
        value: function(e) {
            return this.httpHeaders.put(HttpHeaders.CONTENT_TYPE, e), this;
        }
    }, {
        key: "date",
        value: function(e) {
            return this.requestDate = e || new Date(), this;
        }
    }, {
        key: "requestDateHeaderValue",
        get: function() {
            return this.requestDate.toUTCString();
        }
    }, {
        key: "useSnDate",
        get: function() {
            var e = this.signedHeaderNames;
            return 0 <= (Array.isArray(e) ? e.findIndex(caseInsensitiveEqualsFn(HttpHeaders.X_SN_DATE)) : -1) || this.httpHeaders.containsKey(HttpHeaders.X_SN_DATE);
        },
        set: function(e) {
            var t = this.signedHeaderNames, r = Array.isArray(t) ? t.findIndex(caseInsensitiveEqualsFn(HttpHeaders.X_SN_DATE)) : -1;
            e && r < 0 ? (t = t ? t.concat(HttpHeaders.X_SN_DATE) : [ HttpHeaders.X_SN_DATE ], 
            this.signedHeaderNames = t) : !e && 0 <= r && (t.splice(r, 1), this.signedHeaderNames = t), 
            this.httpHeaders.remove(HttpHeaders.X_SN_DATE);
        }
    }, {
        key: "snDate",
        value: function(e) {
            return this.useSnDate = e, this;
        }
    }, {
        key: "header",
        value: function(e, t) {
            return this.httpHeaders.put(e, t), this;
        }
    }, {
        key: "headers",
        value: function(e) {
            return this.httpHeaders = e, this;
        }
    }, {
        key: "queryParams",
        value: function(e) {
            return e instanceof MultiMap ? this.parameters = e : this.parameters.putAll(e), 
            this;
        }
    }, {
        key: "signedHttpHeaders",
        value: function(e) {
            return this.signedHeaderNames = e, this;
        }
    }, {
        key: "contentSHA256",
        value: function(e) {
            e = "string" == typeof e ? Hex.parse(e) : e;
            return this.contentDigest = e, this;
        }
    }, {
        key: "computeContentDigest",
        value: function(e) {
            e = SHA256(e);
            return this.contentSHA256(e), this.header("Digest", "sha-256=" + Base64.stringify(e)), 
            this;
        }
    }, {
        key: "canonicalQueryParameters",
        value: function() {
            var e = this.parameters.keySet();
            if (e.length < 1) return "";
            e.sort();
            for (var t = e.length, r = !0, n = "", a = 0; a < t; a += 1) for (var i = e[a], o = this.parameters.value(i), s = o.length, u = 0; u < s; u += 1) r ? r = !1 : n += "&", 
            n += _encodeURIComponent(i) + "=" + _encodeURIComponent(o[u]);
            return n;
        }
    }, {
        key: "canonicalHeaders",
        value: function(e) {
            for (var t, r = "", n = e.length, a = 0; a < n; a += 1) r += (t = e[a]) + ":" + ((t = "date" === t || "x-sn-date" === t ? this.requestDate.toUTCString() : this.httpHeaders.firstValue(t)) ? t.trim() : "") + "\n";
            return r;
        }
    }, {
        key: "canonicalSignedHeaderNames",
        value: function(e) {
            return e.join(";");
        }
    }, {
        key: "canonicalContentSHA256",
        value: function() {
            return this.contentDigest ? Hex.stringify(this.contentDigest) : r.EMPTY_STRING_SHA256_HEX;
        }
    }, {
        key: "canonicalHeaderNames",
        value: function() {
            var e = this.httpHeaders, t = this.signedHeaderNames, r = new MultiMap();
            return r.put(HttpHeaders.HOST, !0), this.useSnDate ? r.put(HttpHeaders.X_SN_DATE, !0) : r.put(HttpHeaders.DATE, !0), 
            e.containsKey(HttpHeaders.CONTENT_MD5) && r.put(HttpHeaders.CONTENT_MD5, !0), 
            e.containsKey(HttpHeaders.CONTENT_TYPE) && r.put(HttpHeaders.CONTENT_TYPE, !0), 
            e.containsKey(HttpHeaders.DIGEST) && r.put(HttpHeaders.DIGEST, !0), 
            t && 0 < t.length && t.forEach(function(e) {
                return r.put(e, !0);
            }), lowercaseSortedArray(r.keySet());
        }
    }, {
        key: "buildCanonicalRequestData",
        value: function() {
            return this.computeCanonicalRequestData(this.canonicalHeaderNames());
        }
    }, {
        key: "computeCanonicalRequestData",
        value: function(e) {
            var t = this.httpMethod + "\n";
            return (t += this.requestPath + "\n") + (this.canonicalQueryParameters() + "\n") + this.canonicalHeaders(e) + (this.canonicalSignedHeaderNames(e) + "\n") + this.canonicalContentSHA256();
        }
    }, {
        key: "computeSigningKey",
        value: function(e) {
            var t = iso8601Date(this.requestDate);
            return HmacSHA256("snws2_request", HmacSHA256(t, "SNWS2" + e));
        }
    }, {
        key: "computeSignatureData",
        value: function(e) {
            return "SNWS2-HMAC-SHA256\n" + iso8601Date(this.requestDate, !0) + "\n" + Hex.stringify(SHA256(e));
        }
    }, {
        key: "buildWithKey",
        value: function(e) {
            var t = this.canonicalHeaderNames(), r = this.computeCanonicalRequestData(t), r = this.computeSignatureData(r), r = Hex.stringify(HmacSHA256(r, e));
            return "SNWS2 Credential=" + this.tokenId + ",SignedHeaders=" + t.join(";") + ",Signature=" + r;
        }
    }, {
        key: "build",
        value: function(e) {
            e = this.computeSigningKey(e);
            return this.buildWithKey(e);
        }
    }, {
        key: "buildWithSavedKey",
        value: function() {
            return this.buildWithKey(this.signingKey);
        }
    } ]), r;
}();

function caseInsensitiveEqualsFn(e) {
    var t = e.toLowerCase();
    return function(e) {
        return t === e.toString().toLowerCase();
    };
}

function lowercaseSortedArray(e) {
    for (var t = [], r = e.length, n = 0; n < r; n += 1) t.push(e[n].toLowerCase());
    return t.sort(), t;
}

function _hexEscapeChar(e) {
    return "%" + e.charCodeAt(0).toString(16).toUpperCase();
}

function _encodeURIComponent(e) {
    return encodeURIComponent(e).replace(/[!'()*]/g, _hexEscapeChar);
}

Object.defineProperties(AuthorizationV2Builder, {
    EMPTY_STRING_SHA256_HEX: {
        value: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    SNWS2_AUTH_SCHEME: {
        value: "SNWS2"
    }
});

var UrlHelper = function() {
    function t(e) {
        _classCallCheck(this, t);
        e = e instanceof Environment ? e : new Environment(e);
        this.environment = e, this._parameters = new Configuration();
    }
    return _createClass(t, [ {
        key: "parameters",
        get: function() {
            return this._parameters;
        }
    }, {
        key: "env",
        value: function() {
            var e;
            return (e = this.environment).value.apply(e, arguments);
        }
    }, {
        key: "parameter",
        value: function() {
            var e;
            return (e = this._parameters).value.apply(e, arguments);
        }
    }, {
        key: "hostUrl",
        value: function() {
            var e = this.environment.useTls(), t = this.environment.value("proxyHost") || this.environment.value("host"), r = +(this.environment.value("proxyPort") || this.environment.value("port")), t = "http" + (e ? "s" : "") + "://" + t;
            return (e && 0 < r && 443 != r || !e && 0 < r && 80 != r) && (t += ":" + r), 
            t;
        }
    }, {
        key: "hostWebSocketUrl",
        value: function() {
            var e = this.environment.useTls(), t = this.environment.value("proxyHost") || this.environment.value("host"), r = +(this.environment.value("proxyPort") || this.environment.value("port")), t = "ws" + (e ? "s" : "") + "://" + t;
            return (e && 0 < r && 443 != r || !e && 0 < r && 80 != r) && (t += ":" + r), 
            t;
        }
    }, {
        key: "baseUrl",
        value: function() {
            return this.hostUrl();
        }
    }, {
        key: "resolveTemplatePath",
        value: function(e) {
            return this.hostUrl() + this.resolveTemplateUrl(e);
        }
    }, {
        key: "resolveTemplateUrl",
        value: function(e) {
            return t.resolveTemplateUrl(e, this._parameters);
        }
    } ], [ {
        key: "resolveTemplateUrl",
        value: function(e, r) {
            return e.replace(/\{([^}]+)\}/g, function(e, t) {
                t = r[t];
                return void 0 !== t ? encodeURIComponent(t) : "";
            });
        }
    } ]), t;
}(), LocationIdsKey = "locationIds", SourceIdsKey$1 = "sourceIds", LocationUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "locationId",
            get: function() {
                var e = this.locationIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.parameter(LocationIdsKey, e ? [ e ] : null);
            }
        }, {
            key: "locationIds",
            get: function() {
                return this.parameter(LocationIdsKey);
            },
            set: function(e) {
                this.parameter(LocationIdsKey, e);
            }
        }, {
            key: "sourceId",
            get: function() {
                var e = this.sourceIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.parameter(SourceIdsKey$1, e && [ e ]);
            }
        }, {
            key: "sourceIds",
            get: function() {
                return this.parameter(SourceIdsKey$1);
            },
            set: function(e) {
                this.parameter(SourceIdsKey$1, e);
            }
        }, {
            key: "findLocationsUrl",
            value: function(e, t, r) {
                return this.baseUrl() + "/location?" + e.toUriEncodingWithSorting(t, r);
            }
        } ]), t;
    }();
}, SolarQueryDefaultPath = "/solarquery", SolarQueryPathKey = "solarQueryPath", SolarQueryApiPathV1 = "/api/v1", SolarQueryPublicPathKey = "publicQuery", QueryUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "publicQuery",
            get: function() {
                return !!this.env(SolarQueryPublicPathKey);
            },
            set: function(e) {
                this.env(SolarQueryPublicPathKey, !!e);
            }
        }, {
            key: "baseUrl",
            value: function() {
                var e = this.env(SolarQueryPathKey) || SolarQueryDefaultPath, t = this.publicQuery;
                return this.hostUrl() + e + SolarQueryApiPathV1 + (t ? "/pub" : "/sec");
            }
        } ]), t;
    }();
}, LocationDatumMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "baseLocationDatumMetadataUrl",
            value: function(e) {
                return this.baseUrl() + "/location/meta/" + (e || this.locationId);
            }
        }, {
            key: "locationDatumMetadataUrlWithSource",
            value: function(e, t) {
                var e = this.baseLocationDatumMetadataUrl(e), r = t || this.sourceId;
                return null !== t && r && (e += "?sourceId=" + encodeURIComponent(r)), 
                e;
            }
        }, {
            key: "viewLocationDatumMetadataUrl",
            value: function(e, t) {
                return this.locationDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "addLocationDatumMetadataUrl",
            value: function(e, t) {
                return this.locationDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "replaceLocationDatumMetadataUrl",
            value: function(e, t) {
                return this.locationDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "deleteLocationDatumMetadataUrl",
            value: function(e, t) {
                return this.locationDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "findLocationDatumMetadataUrl",
            value: function(e, t, r) {
                var n = this.baseUrl() + "/location/meta", e = e.toUriEncodingWithSorting(t, r);
                return 0 < e.length && (n += "?" + e), n;
            }
        } ]), t;
    }();
}, LocationDatumMetadataUrlHelper = function() {
    _inherits(t, LocationDatumMetadataUrlHelperMixin(QueryUrlHelperMixin(LocationUrlHelperMixin(UrlHelper))));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), LocationDatumUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "reportableIntervalUrl",
            value: function(e, t) {
                var e = this.baseUrl() + "/location/datum/interval?locationId=" + (e || this.locationId), r = t || this.sourceId;
                return null !== t && r && (e += "&sourceId=" + encodeURIComponent(r)), 
                e;
            }
        }, {
            key: "availableSourcesUrl",
            value: function(e, t, r) {
                e = this.baseUrl() + "/location/datum/sources?locationId=" + (e || this.locationId);
                return t instanceof Date && (e += "&start=" + encodeURIComponent(dateTimeUrlFormat(t))), 
                r instanceof Date && (e += "&end=" + encodeURIComponent(dateTimeUrlFormat(r))), 
                e;
            }
        }, {
            key: "listDatumUrl",
            value: function(e, t, r) {
                var n = this.baseUrl() + "/location/datum/list", e = e ? e.toUriEncodingWithSorting(t, r) : "";
                return 0 < e.length && (n += "?" + e), n;
            }
        }, {
            key: "mostRecentDatumUrl",
            value: function(e, t, r) {
                var n = this.baseUrl() + "/location/datum/mostRecent", e = e ? e.toUriEncodingWithSorting(t, r) : "";
                return 0 < e.length && (n += "?" + e), n;
            }
        } ]), t;
    }();
}, LocationDatumUrlHelper = function() {
    _inherits(t, LocationDatumUrlHelperMixin(QueryUrlHelperMixin(LocationUrlHelperMixin(UrlHelper))));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), NodeIdsKey = "nodeIds", SourceIdsKey = "sourceIds", NodeUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "nodeId",
            get: function() {
                var e = this.nodeIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.parameter(NodeIdsKey, e ? [ e ] : null);
            }
        }, {
            key: "nodeIds",
            get: function() {
                return this.parameter(NodeIdsKey);
            },
            set: function(e) {
                this.parameter(NodeIdsKey, e);
            }
        }, {
            key: "sourceId",
            get: function() {
                var e = this.sourceIds;
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.parameter(SourceIdsKey, e && [ e ]);
            }
        }, {
            key: "sourceIds",
            get: function() {
                return this.parameter(SourceIdsKey);
            },
            set: function(e) {
                this.parameter(SourceIdsKey, e);
            }
        }, {
            key: "listAllNodeIdsUrl",
            value: function() {
                return this.baseUrl() + "/nodes";
            }
        } ]), t;
    }();
}, NodeDatumMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "baseNodeDatumMetadataUrl",
            value: function(e) {
                return this.baseUrl() + "/datum/meta/" + (e || this.nodeId);
            }
        }, {
            key: "nodeDatumMetadataUrlWithSource",
            value: function(e, t) {
                var e = this.baseNodeDatumMetadataUrl(e), r = t || this.sourceId;
                return null !== t && r && (e += "?sourceId=" + encodeURIComponent(r)), 
                e;
            }
        }, {
            key: "viewNodeDatumMetadataUrl",
            value: function(e, t) {
                return this.nodeDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "addNodeDatumMetadataUrl",
            value: function(e, t) {
                return this.nodeDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "replaceNodeDatumMetadataUrl",
            value: function(e, t) {
                return this.nodeDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "deleteNodeDatumMetadataUrl",
            value: function(e, t) {
                return this.nodeDatumMetadataUrlWithSource(e, t);
            }
        }, {
            key: "findNodeDatumMetadataUrl",
            value: function(e, t, r, n) {
                var e = this.baseNodeDatumMetadataUrl(e), a = "", i = t || this.sourceId;
                return null !== t && i && (a += "sourceId=" + encodeURIComponent(i)), 
                Array.isArray(r) && r.forEach(function(e, t) {
                    e instanceof SortDescriptor && (0 < a.length && (a += "&"), 
                    a += e.toUriEncoding(t));
                }), n instanceof Pagination && (0 < a.length && (a += "&"), a += n.toUriEncoding()), 
                0 < a.length && (e += "?" + a), e;
            }
        }, {
            key: "userMetadataUrl",
            value: function(e) {
                var t = this.baseUrl() + "/users/meta", r = e || this.userId;
                return (r = Array.isArray(r) ? 0 < r.length ? r[0] : null : r) && null !== e && (t += "/" + r), 
                t;
            }
        }, {
            key: "viewUserMetadataUrl",
            value: function(e) {
                return this.userMetadataUrl(e);
            }
        } ]), t;
    }();
}, NodeDatumMetadataUrlHelper = function() {
    _inherits(t, NodeDatumMetadataUrlHelperMixin(QueryUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), NodeDatumUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "reportableIntervalUrl",
            value: function(e, t) {
                e = this.baseUrl() + "/range/interval?nodeId=" + (e || this.nodeId), 
                t = t || this.sourceIds;
                return Array.isArray(t) && 0 < t.length && (e += "&sourceIds=" + t.map(function(e) {
                    return encodeURIComponent(e);
                }).join(",")), e;
            }
        }, {
            key: "availableSourcesUrl",
            value: function(e, t) {
                e = e ? new DatumFilter(e) : this.datumFilter(), void 0 !== t && e.prop("withNodeIds", !!t), 
                t = this.baseUrl() + "/range/sources", e = e.toUriEncoding();
                return 0 < e.length && (t += "?" + e), t;
            }
        }, {
            key: "listDatumUrl",
            value: function(e, t, r) {
                var n = this.baseUrl() + "/datum/list", e = (e || this.datumFilter()).toUriEncodingWithSorting(t, r);
                return 0 < e.length && (n += "?" + e), n;
            }
        }, {
            key: "datumReadingUrl",
            value: function(e, t, r, n, a) {
                var i = this.baseUrl() + "/datum/reading", e = new DatumFilter(e) || this.datumFilter(), t = (e.prop("readingType", t.name), 
                r && e.prop("tolerance", r), e.toUriEncodingWithSorting(n, a));
                return 0 < t.length && (i += "?" + t), i;
            }
        }, {
            key: "streamDatumUrl",
            value: function(e, t, r) {
                var n = this.baseUrl() + "/datum/stream/datum", e = (e || this.datumFilter()).toUriEncodingWithSorting(t, r);
                return 0 < e.length && (n += "?" + e), n;
            }
        }, {
            key: "streamReadingUrl",
            value: function(e, t, r, n, a) {
                var i = this.baseUrl() + "/datum/stream/reading", e = new DatumFilter(e) || this.datumFilter(), t = (e.prop("readingType", t.name), 
                r && e.prop("tolerance", r), e.toUriEncodingWithSorting(n, a));
                return 0 < t.length && (i += "?" + t), i;
            }
        }, {
            key: "datumFilter",
            value: function() {
                var e = new DatumFilter(), t = this.nodeIds;
                return t && (e.nodeIds = t), (t = this.sourceIds) && (e.sourceIds = t), 
                e;
            }
        }, {
            key: "mostRecentDatumUrl",
            value: function(e, t, r) {
                var n = this.baseUrl() + "/datum/mostRecent", e = (e || this.datumFilter()).toUriEncodingWithSorting(t, r);
                return 0 < e.length && (n += "?" + e), n;
            }
        } ]), t;
    }();
}, NodeDatumUrlHelper = function() {
    _inherits(t, NodeDatumUrlHelperMixin(QueryUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), SolarUserDefaultPath = "/solaruser", SolarUserPathKey = "solarUserPath", SolarUserApiPathV1 = "/api/v1/sec", UserIdsKey = "userIds", UserUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "userId",
            get: function() {
                var e = this.parameter(UserIdsKey);
                return Array.isArray(e) && 0 < e.length ? e[0] : null;
            },
            set: function(e) {
                this.parameter(UserIdsKey, [ e ]);
            }
        }, {
            key: "userIds",
            get: function() {
                return this.parameter(UserIdsKey);
            },
            set: function(e) {
                this.parameter(UserIdsKey, e);
            }
        }, {
            key: "baseUrl",
            value: function() {
                var e = this.env(SolarUserPathKey) || SolarUserDefaultPath;
                return _get(_getPrototypeOf(t.prototype), "baseUrl", this).call(this) + e + SolarUserApiPathV1;
            }
        }, {
            key: "whoamiUrl",
            value: function() {
                return this.baseUrl() + "/whoami";
            }
        }, {
            key: "viewNodesUrl",
            value: function() {
                return this.baseUrl() + "/nodes";
            }
        }, {
            key: "viewPendingNodesUrl",
            value: function() {
                return this.baseUrl() + "/nodes/pending";
            }
        }, {
            key: "viewArchivedNodesUrl",
            value: function() {
                return this.baseUrl() + "/nodes/archived";
            }
        }, {
            key: "updateNodeArchivedStatusUrl",
            value: function(e, t) {
                e = Array.isArray(e) ? e : e ? [ e ] : this.nodeIds;
                return this.baseUrl() + "/nodes/archived?nodeIds=" + e.join(",") + "&archived=" + (t ? "true" : "false");
            }
        }, {
            key: "nimAuthorizeUrl",
            value: function() {
                return this.baseUrl() + "/user/nim/authorize";
            }
        } ]), t;
    }();
}, NodeInstructionUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "viewInstructionUrl",
            value: function(e) {
                return this.baseUrl() + "/instr/view?id=" + encodeURIComponent(e);
            }
        }, {
            key: "viewActiveInstructionsUrl",
            value: function(e) {
                return this.baseUrl() + "/instr/viewActive?nodeId=" + (e || this.nodeId);
            }
        }, {
            key: "viewPendingInstructionsUrl",
            value: function(e) {
                return this.baseUrl() + "/instr/viewPending?nodeId=" + (e || this.nodeId);
            }
        }, {
            key: "updateInstructionStateUrl",
            value: function(e, t) {
                return this.baseUrl() + "/instr/updateState?id=" + encodeURIComponent(e) + "&state=" + encodeURIComponent(t.name);
            }
        }, {
            key: "urlEncodeInstructionParameters",
            value: function(e) {
                var t, r, n = "";
                if (Array.isArray(e)) for (t = 0, r = e.length; t < r; t += 1) 0 < n.length && (n += "&"), 
                n += encodeURIComponent("parameters[" + t + "].name") + "=" + encodeURIComponent(e[t].name) + "&" + encodeURIComponent("parameters[" + t + "].value") + "=" + encodeURIComponent(e[t].value);
                return n;
            }
        }, {
            key: "queueInstructionUrl",
            value: function(e, t, r) {
                e = this.baseUrl() + "/instr/add/" + encodeURIComponent(e) + "?nodeId=" + (r || this.nodeId);
                return Array.isArray(t) && 0 < t.length && (e += "&" + this.urlEncodeInstructionParameters(t)), 
                e;
            }
        }, {
            key: "queueInstructionsUrl",
            value: function(e, t, r) {
                e = this.baseUrl() + "/instr/add/" + encodeURIComponent(e) + "?nodeIds=" + (Array.isArray(r) && 0 < r.length ? r.join(",") : Array.isArray(this.nodeIds) ? this.nodeIds.join(",") : "");
                return Array.isArray(t) && 0 < t.length && (e += "&" + this.urlEncodeInstructionParameters(t)), 
                e;
            }
        } ], [ {
            key: "instructionParameter",
            value: function(e, t) {
                return {
                    name: e,
                    value: t
                };
            }
        } ]), t;
    }();
}, NodeInstructionUrlHelper = function() {
    _inherits(t, NodeInstructionUrlHelperMixin(UserUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), instructionParameter = NodeInstructionUrlHelper.instructionParameter, NodeMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "viewNodeMetadataUrl",
            value: function(e) {
                return this.baseUrl() + "/nodes/meta/" + (e || this.nodeId);
            }
        }, {
            key: "addNodeMetadataUrl",
            value: function(e) {
                return this.viewNodeMetadataUrl(e);
            }
        }, {
            key: "replaceNodeMetadataUrl",
            value: function(e) {
                return this.viewNodeMetadataUrl(e);
            }
        }, {
            key: "deleteNodeMetadataUrl",
            value: function(e) {
                return this.viewNodeMetadataUrl(e);
            }
        }, {
            key: "findNodeMetadataUrl",
            value: function(e, t, r) {
                var e = Array.isArray(e) ? e : e ? [ e ] : null !== e ? this.nodeIds : void 0, n = this.baseUrl() + "/nodes/meta", a = "";
                return Array.isArray(e) && (a += "nodeIds=" + e.join(",")), Array.isArray(t) && t.forEach(function(e, t) {
                    e instanceof SortDescriptor && (0 < a.length && (a += "&"), 
                    a += e.toUriEncoding(t));
                }), r instanceof Pagination && (0 < a.length && (a += "&"), a += r.toUriEncoding()), 
                0 < a.length && (n += "?" + a), n;
            }
        } ]), t;
    }();
}, NodeMetadataUrlHelper = function() {
    _inherits(t, NodeMetadataUrlHelperMixin(UserUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), UserAuthTokenUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "listAllAuthTokensUrl",
            value: function() {
                return this.baseUrl() + "/user/auth-tokens";
            }
        }, {
            key: "generateAuthTokenUrl",
            value: function(e) {
                return this.baseUrl() + "/user/auth-tokens/generate/" + e.name;
            }
        }, {
            key: "authTokenUrl",
            value: function(e) {
                return this.baseUrl() + "/user/auth-tokens/" + encodeURIComponent(e);
            }
        }, {
            key: "deleteAuthTokenUrl",
            value: function(e) {
                return this.authTokenUrl(e);
            }
        }, {
            key: "updateAuthTokenSecurityPolicyUrl",
            value: function(e) {
                return this.authTokenUrl(e);
            }
        }, {
            key: "replaceAuthTokenSecurityPolicyUrl",
            value: function(e) {
                return this.authTokenUrl(e);
            }
        }, {
            key: "updateAuthTokenStatusUrl",
            value: function(e, t) {
                return this.authTokenUrl(e) + "?status=" + encodeURIComponent(t.name);
            }
        } ]), t;
    }();
}, UserAuthTokenUrlHelper = function() {
    _inherits(t, UserAuthTokenUrlHelperMixin(UserUrlHelperMixin(UrlHelper)));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), UserDatumAuxiliaryUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "userDatumAuxiliaryBaseUrl",
            value: function() {
                return this.baseUrl() + "/datum/auxiliary";
            }
        }, {
            key: "listUserDatumAuxiliaryUrl",
            value: function(e) {
                var t = this.userDatumAuxiliaryBaseUrl();
                return e && 0 < (e = e.toUriEncoding()).length && (t += "?" + e), 
                t;
            }
        }, {
            key: "userDatumAuxiliaryIdUrl",
            value: function(e, t, r, n) {
                if (n && 0 <= n.indexOf("/")) return this.userDatumAuxiliaryIdQueryUrl(e, t, r, n);
                var a = this.userDatumAuxiliaryBaseUrl();
                return a += "/" + encodeURIComponent(e.name || e) + "/" + encodeURIComponent(t) + "/" + encodeURIComponent(timestampFormat(r)) + "/" + encodeURIComponent(n);
            }
        }, {
            key: "userDatumAuxiliaryIdQueryUrl",
            value: function(e, t, r, n) {
                var a = this.userDatumAuxiliaryBaseUrl(), e = new PropMap({
                    type: e,
                    nodeId: t,
                    date: timestampFormat(r),
                    sourceId: n
                }).toUriEncoding();
                return 0 < e.length && (a += "?" + e), a;
            }
        }, {
            key: "storeUserDatumAuxiliaryUrl",
            value: function(e, t, r, n) {
                return this.userDatumAuxiliaryIdUrl(e, t, r, n);
            }
        }, {
            key: "viewUserDatumAuxiliaryUrl",
            value: function(e, t, r, n) {
                return this.userDatumAuxiliaryIdUrl(e, t, r, n);
            }
        }, {
            key: "deleteUserDatumAuxiliaryUrl",
            value: function(e, t, r, n) {
                return this.userDatumAuxiliaryIdUrl(e, t, r, n);
            }
        } ]), t;
    }();
}, UserDatumAuxiliaryUrlHelper = function() {
    _inherits(t, UserDatumAuxiliaryUrlHelperMixin(UserUrlHelperMixin(UrlHelper)));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), UserMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(t, r);
        var e = _createSuper(t);
        function t() {
            return _classCallCheck(this, t), e.apply(this, arguments);
        }
        return _createClass(t, [ {
            key: "findUserMetadataUrl",
            value: function(e) {
                var t = this.baseUrl() + "/users/meta";
                return e && 0 < (e = e.toUriEncoding()).length && (t += "?" + e), 
                t;
            }
        }, {
            key: "userMetadataUrl",
            value: function(e) {
                var t = this.baseUrl() + "/users/meta", r = e || this.userId;
                return (r = Array.isArray(r) ? 0 < r.length ? r[0] : null : r) && null !== e && (t += "/" + r), 
                t;
            }
        }, {
            key: "viewUserMetadataUrl",
            value: function(e) {
                return this.userMetadataUrl(e);
            }
        }, {
            key: "addUserMetadataUrl",
            value: function(e) {
                return this.userMetadataUrl(e);
            }
        }, {
            key: "replaceUserMetadataUrl",
            value: function(e) {
                return this.userMetadataUrl(e);
            }
        }, {
            key: "deleteUserMetadataUrl",
            value: function(e) {
                return this.userMetadataUrl(e);
            }
        } ]), t;
    }();
}, UserMetadataUrlHelper = function() {
    _inherits(t, UserMetadataUrlHelperMixin(UserUrlHelperMixin(UrlHelper)));
    var e = _createSuper(t);
    function t() {
        return _classCallCheck(this, t), e.apply(this, arguments);
    }
    return _createClass(t);
}(), logLevel = 2;

function consoleLog(e) {
    if (!(logLevel < e) && console) {
        var t;
        switch (e) {
          case 1:
            t = console.error;
            break;

          case 2:
            t = console.warn;
            break;

          case 3:
            t = console.info;
        }
        if (t = t || console.log) {
            for (var r = arguments.length, n = new Array(1 < r ? r - 1 : 0), a = 1; a < r; a++) n[a - 1] = arguments[a];
            t.apply(void 0, n);
        }
    }
}

var logLevels = Object.freeze({
    DEBUG: 4,
    INFO: 3,
    WARN: 2,
    ERROR: 1,
    OFF: 0
}), Logger = function() {
    function e() {
        _classCallCheck(this, e);
    }
    return _createClass(e, null, [ {
        key: "debug",
        value: function() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
            consoleLog.apply(void 0, [ 4 ].concat(t));
        }
    }, {
        key: "info",
        value: function() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
            consoleLog.apply(void 0, [ 3 ].concat(t));
        }
    }, {
        key: "warn",
        value: function() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
            consoleLog.apply(void 0, [ 2 ].concat(t));
        }
    }, {
        key: "error",
        value: function() {
            for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];
            consoleLog.apply(void 0, [ 1 ].concat(t));
        }
    } ]), e;
}();

Object.defineProperties(Logger, {
    level: {
        get: function() {
            return logLevel;
        },
        set: function(e) {
            logLevel = "number" == typeof e ? e : 0;
        }
    }
});

export {
    Aggregation,
    Aggregations,
    AuthTokenStatus,
    AuthTokenStatuses,
    AuthTokenType,
    AuthTokenTypes,
    AuthTokenUrlHelperMixin,
    AuthorizationV2Builder,
    BitmaskEnum,
    CombiningType,
    CombiningTypes,
    ComparableEnum,
    Configuration,
    DatumAuxiliaryType,
    DatumAuxiliaryTypes,
    DatumFilter,
    DatumReadingType,
    DatumReadingTypes,
    DeviceOperatingState,
    DeviceOperatingStates,
    Enum,
    Environment,
    GeneralMetadata,
    HttpContentType,
    HttpHeaders,
    HttpMethod,
    InstructionState,
    InstructionStates,
    Location,
    LocationDatumMetadataUrlHelper,
    LocationDatumMetadataUrlHelperMixin,
    LocationDatumUrlHelper,
    LocationDatumUrlHelperMixin,
    LocationPrecision,
    LocationPrecisions,
    LocationUrlHelperMixin,
    Logger,
    MultiMap,
    NodeDatumMetadataUrlHelper,
    NodeDatumMetadataUrlHelperMixin,
    NodeDatumUrlHelper,
    NodeDatumUrlHelperMixin,
    NodeInstructionUrlHelper,
    NodeInstructionUrlHelperMixin,
    NodeMetadataUrlHelper,
    NodeMetadataUrlHelperMixin,
    NodeUrlHelperMixin,
    Pagination,
    PropMap,
    QueryUrlHelperMixin,
    SecurityPolicy,
    SecurityPolicyBuilder,
    SkyCondition,
    SkyConditions,
    SolarQueryApiPathV1,
    SolarQueryDefaultPath,
    SolarQueryPathKey,
    SolarQueryPublicPathKey,
    SolarUserApiPathV1,
    SolarUserDefaultPath,
    SolarUserPathKey,
    SortDescriptor,
    UrlHelper,
    UserAuthTokenUrlHelper,
    UserAuthTokenUrlHelperMixin,
    UserDatumAuxiliaryUrlHelper,
    UserDatumAuxiliaryUrlHelperMixin,
    UserMetadataUrlHelper,
    UserMetadataUrlHelperMixin,
    UserUrlHelperMixin,
    array as arrayData,
    dateFormat,
    dateParser,
    dateTimeFormat,
    dateTimeParse,
    dateTimeUrlFormat,
    date as dateUtils,
    displayScaleForValue,
    displayUnitsForScale,
    instructionParameter,
    iso8601Date,
    logLevels,
    nest as nestData,
    objectToStringMap,
    seasonForDate,
    stringMapToObject,
    timestampFormat,
    timestampParse,
    urlQuery
};