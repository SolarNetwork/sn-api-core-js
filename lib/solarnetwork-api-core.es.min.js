// https://github.com/SolarNetwork/sn-api-core-js Version 1.1.2. Copyright 2023 SolarNetwork Foundation.
import {
    max,
    ascending,
    sum
} from "d3-array";

import {
    nest as nest$1
} from "d3-collection";

import {
    utcHour,
    utcYear,
    utcMonth,
    utcDay,
    utcMinute
} from "d3-time";

import _classCallCheck from "@babel/runtime/helpers/classCallCheck";

import _createClass from "@babel/runtime/helpers/createClass";

import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";

import _inherits from "@babel/runtime/helpers/inherits";

import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";

import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

import {
    utcFormat,
    timeFormat,
    utcParse,
    isoParse
} from "d3-time-format";

export {
    isoParse as dateParse,
    isoParse as dateTimeUrlParse
} from "d3-time-format";

import _get from "@babel/runtime/helpers/get";

import _typeof from "@babel/runtime/helpers/typeof";

import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

import Base64 from "crypto-js/enc-base64.js";

import Hex from "crypto-js/enc-hex.js";

import HmacSHA256 from "crypto-js/hmac-sha256.js";

import SHA256 from "crypto-js/sha256.js";

import {
    parse
} from "uri-js";

function timeNormalizeDataArray(t, e) {
    var r = 1e3 * e.level;
    if (!Array.isArray(t) || t.length < 2) return t;
    for (var n = 0; n < t.length - 1; ) {
        var a = t[n], o = a.date.getTime(), i = o + r, u = t[n + 1].date.getTime();
        if (i < u) {
            for (var s = [ n + 1, 0 ], c = o + r; c < u; c += r) {
                var l, f = Object.create(Object.getPrototypeOf(a), Object.getOwnPropertyDescriptors(a));
                for (l in f) f[l] = null;
                f.date = new Date(c), s.push(f);
            }
            Array.prototype.splice.apply(t, s), n += s.length;
        }
        n += 1;
    }
}

var array = Object.freeze({
    timeNormalizeDataArray: timeNormalizeDataArray
});

function _createForOfIteratorHelper$8(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$8(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$8(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$8(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$8(t, e) : void 0;
}

function _arrayLikeToArray$8(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

var Enum = function() {
    function e(t) {
        _classCallCheck(this, e), this._name = t, this.constructor === e && Object.freeze(this);
    }
    return _createClass(e, [ {
        key: "name",
        get: function() {
            return this._name;
        }
    }, {
        key: "equals",
        value: function(t) {
            return this.constructor === t.constructor ? t.name === this.name : t === this.name;
        }
    } ], [ {
        key: "enumValues",
        value: function() {
            return [];
        }
    }, {
        key: "enumsValue",
        value: function(t) {
            return Object.freeze(t.reduce(function(t, e) {
                return t[e.name] = e, t;
            }, {}));
        }
    }, {
        key: "valueOf",
        value: function(t) {
            var e = this.enumValues();
            if (Array.isArray(e)) for (var r = 0, n = e.length; r < n; r += 1) if (t === e[r].name) return e[r];
        }
    }, {
        key: "namesFor",
        value: function(t) {
            var e = [];
            if (t) {
                var r, n = _createForOfIteratorHelper$8(t);
                try {
                    for (n.s(); !(r = n.n()).done; ) {
                        var a = r.value;
                        e.push(a.name);
                    }
                } catch (t) {
                    n.e(t);
                } finally {
                    n.f();
                }
            }
            return e;
        }
    } ]), e;
}();

function _createForOfIteratorHelper$7(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$7(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$7(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$7(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$7(t, e) : void 0;
}

function _arrayLikeToArray$7(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

function _createSuper$y(r) {
    var n = _isNativeReflectConstruct$y();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$y() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var ComparableEnum = function() {
    _inherits(n, Enum);
    var r = _createSuper$y(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t))._value = e, t.constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "value",
        get: function() {
            return this._value;
        }
    }, {
        key: "compareTo",
        value: function(t) {
            return this.value < t.value ? -1 : this.value > t.value ? 1 : 0;
        }
    } ], [ {
        key: "minimumEnumSet",
        value: function(t, e) {
            if (!t) return null;
            if (n = e ? e.get(t.name) : void 0) return n;
            var r, n = new Set(), a = _createForOfIteratorHelper$7(t.constructor.enumValues());
            try {
                for (a.s(); !(r = a.n()).done; ) {
                    var o = r.value;
                    -1 < o.compareTo(t) && n.add(o);
                }
            } catch (t) {
                a.e(t);
            } finally {
                a.f();
            }
            return e && e.set(t.name, n), 0 < n.size ? n : null;
        }
    } ]), n;
}();

function _createSuper$x(r) {
    var n = _isNativeReflectConstruct$x();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$x() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var Aggregation = function() {
    _inherits(n, ComparableEnum);
    var r = _createSuper$x(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t, e)).constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "level",
        get: function() {
            return this.value;
        }
    } ], [ {
        key: "enumValues",
        value: function() {
            return AggregationValues;
        }
    } ]), n;
}(), AggregationValues = Object.freeze([ new Aggregation("Minute", 60), new Aggregation("FiveMinute", 300), new Aggregation("TenMinute", 600), new Aggregation("FifteenMinute", 900), new Aggregation("ThirtyMinute", 1800), new Aggregation("Hour", 3600), new Aggregation("HourOfDay", 3600), new Aggregation("SeasonalHourOfDay", 3600), new Aggregation("Day", 86400), new Aggregation("DayOfWeek", 86400), new Aggregation("SeasonalDayOfWeek", 86400), new Aggregation("Week", 604800), new Aggregation("WeekOfYear", 604800), new Aggregation("Month", 2419200), new Aggregation("Year", 31536e3), new Aggregation("RunningTotal", Number.MAX_SAFE_INTEGER) ]), Aggregations = Aggregation.enumsValue(AggregationValues), timestampFormat = utcFormat("%Y-%m-%d %H:%M:%S.%LZ"), dateTimeFormat = utcFormat("%Y-%m-%d %H:%M"), dateTimeUrlFormat = utcFormat("%Y-%m-%dT%H:%M"), localDateTimeUrlFormat = timeFormat("%Y-%m-%dT%H:%M"), dateFormat = utcFormat("%Y-%m-%d"), timestampParse = utcParse("%Y-%m-%d %H:%M:%S.%LZ"), dateTimeParse = utcParse("%Y-%m-%d %H:%M");

function dateParser(t) {
    return isoParse(t) || timestampParse(t) || dateTimeParse(t);
}

function iso8601Date(t, e) {
    return "" + t.getUTCFullYear() + (t.getUTCMonth() < 9 ? "0" : "") + (t.getUTCMonth() + 1) + (t.getUTCDate() < 10 ? "0" : "") + t.getUTCDate() + (e ? "T" + (t.getUTCHours() < 10 ? "0" : "") + t.getUTCHours() + (t.getUTCMinutes() < 10 ? "0" : "") + t.getUTCMinutes() + (t.getUTCSeconds() < 10 ? "0" : "") + t.getUTCSeconds() + "Z" : "");
}

function seasonForDate(t) {
    t = t.getUTCMonth ? t.getUTCMonth() : Number(t);
    return t < 2 || 11 === t ? 3 : t < 5 ? 0 : t < 8 ? 1 : 2;
}

function rollingQueryDateRange(t, e, r) {
    function n(t, e) {
        var r = t.ceil(e);
        return r = r.getTime() === e.getTime() ? t.offset(r, 1) : r;
    }
    function a(t) {
        t = isNaN(Number(e)) ? void 0 !== e[t] ? Number(e[t]) : 1 : e;
        return t = "number" != typeof t ? 1 : t;
    }
    var o, i, u, s;
    return r = r || new Date(), {
        start: t.compareTo(Aggregations.Hour) < 0 ? (o = a("numHours"), i = Aggregations.Hour, 
        u = n(utcMinute, r), s = Math.min(30, t.level / 60), u.setUTCMinutes(u.getUTCMinutes() + s - u.getUTCMinutes() % s, 0, 0), 
        utcHour.offset(u, -o)) : Aggregations.Month.equals(t) ? (o = a("numYears"), 
        i = Aggregations.Year, u = n(utcMonth, r), utcYear.offset(utcMonth.floor(r), -o)) : Aggregations.Day.equals(t) ? (o = a("numMonths"), 
        i = Aggregations.Month, u = n(utcDay, r), utcMonth.offset(utcDay.floor(r), -o)) : (o = a("numDays"), 
        i = Aggregations.Day, u = n(utcHour, r), utcDay.offset(utcHour.floor(u), -o)),
        end: u,
        timeUnit: i,
        timeCount: o,
        aggregate: t
    };
}

function datumDate(t) {
    return t ? t.date || (t.localDate ? dateTimeParse(t.localDate + (t.localTime ? " " + t.localTime : " 00:00")) : t.created ? timestampParse(t.created) || isoParse(t.created) : void 0) : null;
}

var date = Object.freeze({
    datumDate: datumDate,
    rollingQueryDateRange: rollingQueryDateRange
});

function normalizeNestedStackDataByDate(t, e, r) {
    var n, a, o, i, u, s = 0, c = t.length - 1;
    if (0 < c) for (;s < max(t.map(function(t) {
        return t.values.length;
    })); ) {
        for (o = void 0, n = 0; n <= c; n++) if (!(t[n].values.length <= s) && (t[a = n < c ? n + 1 : 0].values.length <= s || t[n].values[s].date.getTime() < t[a].values[s].date.getTime())) {
            if (o = {
                date: t[n].values[s].date,
                sourceId: t[a].key
            }, e) for (i in e) Object.prototype.hasOwnProperty.call(e, i) && (o[i] = e[i]);
            r && (u = t[a].values.length > s ? s : 0 < s ? s - 1 : null, r(o, t[a].key, null !== u ? t[a].values[u] : void 0)), 
            t[a].values.splice(s, 0, o);
        }
        void 0 === o && s++;
    }
}

function aggregateNestedDataLayers(t, e, r, n, a) {
    var o, i, u, s, c, l, f, y = t.length, p = r ? r.length : 0, h = n ? n.length : 0, d = t[0].values.length;
    if (0 < d) {
        for (f = [], o = 0; o < d; o += 1) {
            if (s = t[0].values[o], l = {}, void 0 !== a) for (c in a) Object.prototype.hasOwnProperty.call(a, c) && (l[c] = a[c]);
            for (u = 0; u < p; u += 1) l[r[u]] = s[r[u]];
            for (u = 0; u < h; u += 1) l[n[u]] = 0;
            for (i = 0; i < y; i += 1) for (u = 0; u < h; u += 1) void 0 !== (c = t[i].values[o][n[u]]) && (l[n[u]] += c);
            f.push(l);
        }
        t = [ {
            key: e,
            values: f
        } ];
    }
    return t;
}

function groupedBySourceMetricDataArray(t, e, n, r) {
    function a(t) {
        return t[e];
    }
    var o = "function" == typeof r ? r : sum, r = nest$1().key(function(t) {
        return n && n.has(t.sourceId) ? n.get(t.sourceId) : t.sourceId;
    }).sortKeys(ascending).key(function(t) {
        return t.localDate + " " + t.localTime;
    }).rollup(function(t) {
        var e = {
            date: datumDate(t[0])
        }, r = t[0].sourceId;
        return e[r = n && n.has(r) ? n.get(r) : r] = o(t, a), e;
    }).entries(t).map(function(t) {
        return {
            key: t.key,
            values: t.values.map(function(t) {
                return t.value;
            })
        };
    });
    return normalizeNestedStackDataByDate(r, null, function(t, e) {
        t[e] = null;
    }), r.reduce(function(t, r) {
        return t ? (t.forEach(function(t, e) {
            e = r.values[e][r.key];
            t[r.key] = e;
        }), t) : r.values;
    }, null);
}

var nest = Object.freeze({
    aggregateNestedDataLayers: aggregateNestedDataLayers,
    groupedBySourceMetricDataArray: groupedBySourceMetricDataArray,
    normalizeNestedStackDataByDate: normalizeNestedStackDataByDate
});

function _createSuper$w(r) {
    var n = _isNativeReflectConstruct$w();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$w() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var AuthTokenStatus = function() {
    _inherits(r, Enum);
    var e = _createSuper$w(r);
    function r(t) {
        return _classCallCheck(this, r), (t = e.call(this, t)).constructor === r && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return AuthTokenStatusValues;
        }
    } ]), r;
}(), AuthTokenStatusValues = Object.freeze([ new AuthTokenStatus("Active"), new AuthTokenStatus("Disabled") ]), AuthTokenStatuses = AuthTokenStatus.enumsValue(AuthTokenStatusValues);

function _createSuper$v(r) {
    var n = _isNativeReflectConstruct$v();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$v() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var AuthTokenType = function() {
    _inherits(r, Enum);
    var e = _createSuper$v(r);
    function r(t) {
        return _classCallCheck(this, r), (t = e.call(this, t)).constructor === r && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return AuthTokenTypeValues;
        }
    } ]), r;
}(), AuthTokenTypeValues = Object.freeze([ new AuthTokenType("ReadNodeData"), new AuthTokenType("User") ]), AuthTokenTypes = AuthTokenType.enumsValue(AuthTokenTypeValues);

function _createSuper$u(r) {
    var n = _isNativeReflectConstruct$u();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$u() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var CombiningType = function() {
    _inherits(r, Enum);
    var e = _createSuper$u(r);
    function r(t) {
        return _classCallCheck(this, r), (t = e.call(this, t)).constructor === r && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return CombiningTypeValues;
        }
    } ]), r;
}(), CombiningTypeValues = Object.freeze([ new CombiningType("Average"), new CombiningType("Sum"), new CombiningType("Difference") ]), CombiningTypes = CombiningType.enumsValue(CombiningTypeValues);

function _createSuper$t(r) {
    var n = _isNativeReflectConstruct$t();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$t() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var DatumAuxiliaryType = function() {
    _inherits(r, Enum);
    var e = _createSuper$t(r);
    function r(t) {
        return _classCallCheck(this, r), (t = e.call(this, t)).constructor === r && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return DatumAuxiliaryTypeValues;
        }
    } ]), r;
}(), DatumAuxiliaryTypeValues = Object.freeze([ new DatumAuxiliaryType("Reset") ]), DatumAuxiliaryTypes = DatumAuxiliaryType.enumsValue(DatumAuxiliaryTypeValues), Pagination = function() {
    function r(t, e) {
        _classCallCheck(this, r), this._max = 0 < t ? +t : 0, this._offset = 0 < e ? +e : 0;
    }
    return _createClass(r, [ {
        key: "max",
        get: function() {
            return this._max;
        }
    }, {
        key: "offset",
        get: function() {
            return this._offset;
        }
    }, {
        key: "withOffset",
        value: function(t) {
            return new r(this.max, t);
        }
    }, {
        key: "toUriEncoding",
        value: function() {
            var t = "";
            return 0 < this.max && (t += "max=" + this.max), 0 < this.offset && (0 < t.length && (t += "&"), 
            t += "offset=" + this.offset), t;
        }
    } ]), r;
}(), SortDescriptor = function() {
    function r(t, e) {
        _classCallCheck(this, r), this._key = t, this._descending = !!e;
    }
    return _createClass(r, [ {
        key: "key",
        get: function() {
            return this._key;
        }
    }, {
        key: "descending",
        get: function() {
            return this._descending;
        }
    }, {
        key: "toUriEncoding",
        value: function(t, e) {
            var e = e || "sorts", r = void 0 !== t && 0 <= t ? encodeURIComponent(e + "[" + t + "].key") + "=" : "key=";
            return r += encodeURIComponent(this.key), this.descending && (r += void 0 !== t && 0 <= t ? "&" + encodeURIComponent(e + "[" + t + "].descending") + "=true" : "&descending=true"), 
            r;
        }
    } ]), r;
}(), PropMap = function() {
    function e(t) {
        _classCallCheck(this, e), this.props = t instanceof e ? t.properties() : "object" === _typeof(t) ? t : {};
    }
    return _createClass(e, [ {
        key: "prop",
        value: function(t, e) {
            return 1 === arguments.length ? this.props[t] : (null === e ? delete this.props[t] : this.props[t] = e, 
            this);
        }
    }, {
        key: "properties",
        value: function(t) {
            if (t) {
                for (var e = 0, r = Object.keys(t); e < r.length; e++) {
                    var n = r[e];
                    this.prop(n, t[n]);
                }
                return this;
            }
            return Object.assign({}, this.props);
        }
    }, {
        key: "toUriEncoding",
        value: function(a, o) {
            for (var i = this, u = "", s = 0, c = Object.keys(this.props); s < c.length; s++) (function() {
                var r = c[s], t = (0 < u.length && (u += "&"), i.props[r]), n = !1;
                if (o) {
                    var e = o(r, t);
                    if (null === e) return;
                    Array.isArray(e) && 1 < e.length && (r = e[0], t = e[1], 2 < e.length) && (n = !!e[2]);
                }
                if ("function" == typeof t.toUriEncoding) return u += t.toUriEncoding(a ? encodeURIComponent(a) + "." + r : r);
                a && (u += encodeURIComponent(a) + "."), u += encodeURIComponent(r) + "=", 
                Array.isArray(t) ? t.forEach(function(t, e) {
                    0 < e && (u += n ? "&" + encodeURIComponent(r) + "=" : ","), 
                    t instanceof Enum && (t = t.name), u += encodeURIComponent(t);
                }) : (t instanceof Enum && (t = t.name), u += encodeURIComponent(t));
            })();
            return u;
        }
    }, {
        key: "toUriEncodingWithSorting",
        value: function(t, e, r, n) {
            var a = this.toUriEncoding(r, n);
            return Array.isArray(t) && t.forEach(function(t, e) {
                t instanceof SortDescriptor && (0 < a.length && (a += "&"), a += t.toUriEncoding(e));
            }), e instanceof Pagination && (r = e.toUriEncoding()) && (0 < a.length && (a += "&"), 
            a += r), a;
        }
    } ]), e;
}();

function _createSuper$s(r) {
    var n = _isNativeReflectConstruct$s();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$s() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var CountryKey = "country", ElevationKey = "elevation", LatitudeKey = "latitude", IdKey = "id", LocalityKey = "locality", LongitudeKey = "longitude", NameKey = "name", PostalCodeKey = "postalCode", RegionKey = "region", StateOrProvinceKey = "stateOrProvince", StreetKey = "street", TimeZoneIdKey = "timeZoneId", Location = function() {
    _inherits(r, PropMap);
    var e = _createSuper$s(r);
    function r(t) {
        return _classCallCheck(this, r), e.call(this, t);
    }
    return _createClass(r, [ {
        key: "id",
        get: function() {
            return this.prop(IdKey);
        },
        set: function(t) {
            this.prop(IdKey, t);
        }
    }, {
        key: "name",
        get: function() {
            return this.prop(NameKey);
        },
        set: function(t) {
            this.prop(NameKey, t);
        }
    }, {
        key: "country",
        get: function() {
            return this.prop(CountryKey);
        },
        set: function(t) {
            this.prop(CountryKey, t);
        }
    }, {
        key: "region",
        get: function() {
            return this.prop(RegionKey);
        },
        set: function(t) {
            this.prop(RegionKey, t);
        }
    }, {
        key: "stateOrProvince",
        get: function() {
            return this.prop(StateOrProvinceKey);
        },
        set: function(t) {
            this.prop(StateOrProvinceKey, t);
        }
    }, {
        key: "locality",
        get: function() {
            return this.prop(LocalityKey);
        },
        set: function(t) {
            this.prop(LocalityKey, t);
        }
    }, {
        key: "postalCode",
        get: function() {
            return this.prop(PostalCodeKey);
        },
        set: function(t) {
            this.prop(PostalCodeKey, t);
        }
    }, {
        key: "street",
        get: function() {
            return this.prop(StreetKey);
        },
        set: function(t) {
            this.prop(StreetKey, t);
        }
    }, {
        key: "latitude",
        get: function() {
            return this.prop(LatitudeKey);
        },
        set: function(t) {
            this.prop(LatitudeKey, t);
        }
    }, {
        key: "longitude",
        get: function() {
            return this.prop(LongitudeKey);
        },
        set: function(t) {
            this.prop(LongitudeKey, t);
        }
    }, {
        key: "elevation",
        get: function() {
            return this.prop(ElevationKey);
        },
        set: function(t) {
            this.prop(ElevationKey, t);
        }
    }, {
        key: "timeZoneId",
        get: function() {
            return this.prop(TimeZoneIdKey);
        },
        set: function(t) {
            this.prop(TimeZoneIdKey, t);
        }
    } ]), r;
}();

function _createSuper$r(r) {
    var n = _isNativeReflectConstruct$r();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$r() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

function _createForOfIteratorHelper$6(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$6(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$6(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$6(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$6(t, e) : void 0;
}

function _arrayLikeToArray$6(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

var AccumulatingPropertyNamesKey = "accumulatingPropertyNames", AggregationKey = "aggregation", CombiningTypeKey = "combiningType", DataPathKey = "dataPath", EndDateKey = "endDate", InstantaneousPropertyNamesKey = "instantaneousPropertyNames", LocalEndDateKey = "localEndDate", LocalStartDateKey = "localStartDate", LocationIdsKey$1 = "locationIds", LocationKey = "location", MetadataFilterKey = "metadataFilter", MostRecentKey = "mostRecent", NodeIdMapsKey = "nodeIdMaps", NodeIdsKey$1 = "nodeIds", PartialAggregationKey = "partialAggregation", PropertyNamesKey = "propertyNames", QueryKey = "query", SourceIdMapsKey = "sourceIdMaps", SourceIdsKey$2 = "sourceIds", StartDateKey = "startDate", StatusPropertyNamesKey = "statusPropertyNames", StreamIdsKey = "streamIds", TagsKey$1 = "tags", UserIdsKey$2 = "userIds", WithoutTotalResultsCountKey = "withoutTotalResultsCount";

function idMapQueryParameterValue(t) {
    if (!(t instanceof Map && 0 < t.size)) return null;
    var e, r = [], n = _createForOfIteratorHelper$6(t);
    try {
        for (n.s(); !(e = n.n()).done; ) {
            var a = e.value;
            a[1] instanceof Set && r.push("".concat(a[0], ":").concat(Array.from(a[1]).join(",")));
        }
    } catch (t) {
        n.e(t);
    } finally {
        n.f();
    }
    return r;
}

var DatumFilter = function() {
    _inherits(r, PropMap);
    var e = _createSuper$r(r);
    function r(t) {
        return _classCallCheck(this, r), e.call(this, t);
    }
    return _createClass(r, [ {
        key: "nodeId",
        get: function() {
            var t = this.nodeIds;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.nodeIds = t ? [ t ] : null;
        }
    }, {
        key: "nodeIds",
        get: function() {
            return this.prop(NodeIdsKey$1);
        },
        set: function(t) {
            this.prop(NodeIdsKey$1, Array.isArray(t) ? t : null);
        }
    }, {
        key: "locationId",
        get: function() {
            var t = this.locationIds;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.locationIds = t ? [ t ] : null;
        }
    }, {
        key: "locationIds",
        get: function() {
            return this.prop(LocationIdsKey$1);
        },
        set: function(t) {
            this.prop(LocationIdsKey$1, Array.isArray(t) ? t : null);
        }
    }, {
        key: "sourceId",
        get: function() {
            var t = this.sourceIds;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.sourceIds = t ? [ t ] : null;
        }
    }, {
        key: "sourceIds",
        get: function() {
            return this.prop(SourceIdsKey$2);
        },
        set: function(t) {
            this.prop(SourceIdsKey$2, Array.isArray(t) ? t : null);
        }
    }, {
        key: "streamId",
        get: function() {
            var t = this.streamIds;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.streamIds = t ? [ t ] : null;
        }
    }, {
        key: "streamIds",
        get: function() {
            return this.prop(StreamIdsKey);
        },
        set: function(t) {
            this.prop(StreamIdsKey, Array.isArray(t) ? t : null);
        }
    }, {
        key: "userId",
        get: function() {
            var t = this.userIds;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.userIds = t ? [ t ] : null;
        }
    }, {
        key: "userIds",
        get: function() {
            return this.prop(UserIdsKey$2);
        },
        set: function(t) {
            this.prop(UserIdsKey$2, Array.isArray(t) ? t : null);
        }
    }, {
        key: "mostRecent",
        get: function() {
            return !!this.prop(MostRecentKey);
        },
        set: function(t) {
            this.prop(MostRecentKey, !!t);
        }
    }, {
        key: "startDate",
        get: function() {
            return this.prop(StartDateKey);
        },
        set: function(t) {
            this.prop(StartDateKey, t);
        }
    }, {
        key: "endDate",
        get: function() {
            return this.prop(EndDateKey);
        },
        set: function(t) {
            this.prop(EndDateKey, t);
        }
    }, {
        key: "localStartDate",
        get: function() {
            return this.prop(LocalStartDateKey);
        },
        set: function(t) {
            this.prop(LocalStartDateKey, t);
        }
    }, {
        key: "localEndDate",
        get: function() {
            return this.prop(LocalEndDateKey);
        },
        set: function(t) {
            this.prop(LocalEndDateKey, t);
        }
    }, {
        key: "dataPath",
        get: function() {
            return this.prop(DataPathKey);
        },
        set: function(t) {
            this.prop(DataPathKey, t);
        }
    }, {
        key: "aggregation",
        get: function() {
            return this.prop(AggregationKey);
        },
        set: function(t) {
            this.prop(AggregationKey, t instanceof Aggregation ? t : null);
        }
    }, {
        key: "partialAggregation",
        get: function() {
            return this.prop(PartialAggregationKey);
        },
        set: function(t) {
            this.prop(PartialAggregationKey, t instanceof Aggregation ? t : null);
        }
    }, {
        key: "tags",
        get: function() {
            return this.prop(TagsKey$1);
        },
        set: function(t) {
            this.prop(TagsKey$1, Array.isArray(t) ? t : null);
        }
    }, {
        key: "location",
        get: function() {
            return this.prop(LocationKey);
        },
        set: function(t) {
            this.prop(LocationKey, t instanceof Location ? t : null);
        }
    }, {
        key: "query",
        get: function() {
            return this.prop(QueryKey);
        },
        set: function(t) {
            this.prop(QueryKey, t);
        }
    }, {
        key: "metadataFilter",
        get: function() {
            return this.prop(MetadataFilterKey);
        },
        set: function(t) {
            this.prop(MetadataFilterKey, t);
        }
    }, {
        key: "withoutTotalResultsCount",
        get: function() {
            return this.prop(WithoutTotalResultsCountKey);
        },
        set: function(t) {
            this.prop(WithoutTotalResultsCountKey, !!t);
        }
    }, {
        key: "combiningType",
        get: function() {
            return this.prop(CombiningTypeKey);
        },
        set: function(t) {
            this.prop(CombiningTypeKey, t instanceof CombiningType ? t : null);
        }
    }, {
        key: "nodeIdMaps",
        get: function() {
            return this.prop(NodeIdMapsKey);
        },
        set: function(t) {
            this.prop(NodeIdMapsKey, t instanceof Map ? t : null);
        }
    }, {
        key: "sourceIdMaps",
        get: function() {
            return this.prop(SourceIdMapsKey);
        },
        set: function(t) {
            this.prop(SourceIdMapsKey, t instanceof Map ? t : null);
        }
    }, {
        key: "propertyName",
        get: function() {
            var t = this.propertyNames;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.propertyNames = t ? [ t ] : null;
        }
    }, {
        key: "propertyNames",
        get: function() {
            return this.prop(PropertyNamesKey);
        },
        set: function(t) {
            this.prop(PropertyNamesKey, Array.isArray(t) ? t : null);
        }
    }, {
        key: "instantaneousPropertyName",
        get: function() {
            var t = this.instantaneousPropertyNames;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.instantaneousPropertyNames = t ? [ t ] : null;
        }
    }, {
        key: "instantaneousPropertyNames",
        get: function() {
            return this.prop(InstantaneousPropertyNamesKey);
        },
        set: function(t) {
            this.prop(InstantaneousPropertyNamesKey, Array.isArray(t) ? t : null);
        }
    }, {
        key: "accumulatingPropertyName",
        get: function() {
            var t = this.accumulatingPropertyNames;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.accumulatingPropertyNames = t ? [ t ] : null;
        }
    }, {
        key: "accumulatingPropertyNames",
        get: function() {
            return this.prop(AccumulatingPropertyNamesKey);
        },
        set: function(t) {
            this.prop(AccumulatingPropertyNamesKey, Array.isArray(t) ? t : null);
        }
    }, {
        key: "statusPropertyName",
        get: function() {
            var t = this.statusPropertyNames;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.statusPropertyNames = t ? [ t ] : null;
        }
    }, {
        key: "statusPropertyNames",
        get: function() {
            return this.prop(StatusPropertyNamesKey);
        },
        set: function(t) {
            this.prop(StatusPropertyNamesKey, Array.isArray(t) ? t : null);
        }
    }, {
        key: "toUriEncoding",
        value: function(t, e) {
            return _get(_getPrototypeOf(r.prototype), "toUriEncoding", this).call(this, t, e || datumFilterUriEncodingPropertyMapper);
        }
    } ]), r;
}();

function datumFilterUriEncodingPropertyMapper(t, e) {
    if (t === NodeIdsKey$1 || t === LocationIdsKey$1 || t === SourceIdsKey$2 || t === UserIdsKey$2 || t === PropertyNamesKey || t === InstantaneousPropertyNamesKey || t === AccumulatingPropertyNamesKey || t === StatusPropertyNamesKey) {
        if (Array.isArray(e) && 1 === e.length) return [ t.substring(0, t.length - 1), e[0] ];
    } else {
        if (t === StartDateKey || t === EndDateKey) return [ t, dateTimeUrlFormat(e) ];
        if (t === LocalStartDateKey || t === LocalEndDateKey) return [ t, localDateTimeUrlFormat(e) ];
        if (t === MostRecentKey && !e) return null;
        if (t === NodeIdMapsKey || t === SourceIdMapsKey) return (e = idMapQueryParameterValue(e)) ? [ t, e, !0 ] : null;
    }
    return t;
}

var datumFilter = Object.freeze({
    __proto__: null,
    AccumulatingPropertyNamesKey: AccumulatingPropertyNamesKey,
    AggregationKey: AggregationKey,
    CombiningTypeKey: CombiningTypeKey,
    DataPathKey: DataPathKey,
    EndDateKey: EndDateKey,
    InstantaneousPropertyNamesKey: InstantaneousPropertyNamesKey,
    LocalEndDateKey: LocalEndDateKey,
    LocalStartDateKey: LocalStartDateKey,
    LocationIdsKey: LocationIdsKey$1,
    LocationKey: LocationKey,
    MetadataFilterKey: MetadataFilterKey,
    MostRecentKey: MostRecentKey,
    NodeIdMapsKey: NodeIdMapsKey,
    NodeIdsKey: NodeIdsKey$1,
    PartialAggregationKey: PartialAggregationKey,
    PropertyNamesKey: PropertyNamesKey,
    QueryKey: QueryKey,
    SourceIdMapsKey: SourceIdMapsKey,
    SourceIdsKey: SourceIdsKey$2,
    StartDateKey: StartDateKey,
    StatusPropertyNamesKey: StatusPropertyNamesKey,
    StreamIdsKey: StreamIdsKey,
    TagsKey: TagsKey$1,
    UserIdsKey: UserIdsKey$2,
    WithoutTotalResultsCountKey: WithoutTotalResultsCountKey,
    default: DatumFilter
});

function _createSuper$q(r) {
    var n = _isNativeReflectConstruct$q();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$q() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var KeyedEnum = function() {
    _inherits(n, Enum);
    var r = _createSuper$q(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t))._key = e, t.constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "key",
        get: function() {
            return this._key;
        }
    } ], [ {
        key: "valueOf",
        value: function(t) {
            var e = this.enumValues();
            if (Array.isArray(e)) for (var r = 0, n = e.length; r < n; r += 1) {
                if (t === e[r].key) return e[r];
                if (t === e[r].name) return e[r];
            }
        }
    } ]), n;
}();

function _createSuper$p(r) {
    var n = _isNativeReflectConstruct$p();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$p() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var DatumReadingType = function() {
    _inherits(n, KeyedEnum);
    var r = _createSuper$p(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t, e)).constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, null, [ {
        key: "enumValues",
        value: function() {
            return DatumReadingTypeValues;
        }
    } ]), n;
}(), DatumReadingTypeValues = Object.freeze([ new DatumReadingType("CalculatedAt", "at"), new DatumReadingType("CalculatedAtDifference", "atd"), new DatumReadingType("NearestDifference", "diff"), new DatumReadingType("Difference", "delta"), new DatumReadingType("DifferenceWithin", "change") ]), DatumReadingTypes = DatumReadingType.enumsValue(DatumReadingTypeValues);

function _createSuper$o(r) {
    var n = _isNativeReflectConstruct$o();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$o() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var DatumSamplesType = function() {
    _inherits(n, KeyedEnum);
    var r = _createSuper$o(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t, e)).constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, null, [ {
        key: "enumValues",
        value: function() {
            return DatumSamplesTypeValues;
        }
    } ]), n;
}(), DatumSamplesTypeValues = Object.freeze([ new DatumSamplesType("Instantaneous", "i"), new DatumSamplesType("Accumulating", "a"), new DatumSamplesType("Status", "s"), new DatumSamplesType("Tag", "t") ]), DatumSamplesTypes = DatumSamplesType.enumsValue(DatumSamplesTypeValues);

function _createSuper$n(r) {
    var n = _isNativeReflectConstruct$n();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$n() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var DatumStreamType = function() {
    _inherits(n, KeyedEnum);
    var r = _createSuper$n(n);
    function n(t, e) {
        return _classCallCheck(this, n), r.call(this, t, e);
    }
    return _createClass(n, null, [ {
        key: "enumValues",
        value: function() {
            return DatumStreamTypeValues;
        }
    } ]), n;
}(), DatumStreamTypeValues = Object.freeze([ new DatumStreamType("Node", "n"), new DatumStreamType("Location", "l") ]), DatumStreamTypes = DatumStreamType.enumsValue(DatumStreamTypeValues), DatumStreamMetadata = function() {
    function s(t, e, r, n, a, o, i, u) {
        _classCallCheck(this, s), this._streamId = t, this._zone = e, this._kind = r instanceof DatumStreamType ? r : DatumStreamTypes.Node, 
        this._objectId = n, this._sourceId = a, this._iNames = Array.isArray(o) ? o : void 0, 
        this._aNames = Array.isArray(i) ? i : void 0, this._sNames = Array.isArray(u) ? u : void 0, 
        this.constructor === s && Object.freeze(this);
    }
    return _createClass(s, [ {
        key: "streamId",
        get: function() {
            return this._streamId;
        }
    }, {
        key: "timeZoneId",
        get: function() {
            return this._zone;
        }
    }, {
        key: "kind",
        get: function() {
            return this._kind;
        }
    }, {
        key: "objectId",
        get: function() {
            return this._objectId;
        }
    }, {
        key: "nodeId",
        get: function() {
            return DatumStreamTypes.Node.equals(this._kind) ? this._objectId : void 0;
        }
    }, {
        key: "locationId",
        get: function() {
            return DatumStreamTypes.Location.equals(this._kind) ? this._objectId : void 0;
        }
    }, {
        key: "sourceId",
        get: function() {
            return this._sourceId;
        }
    }, {
        key: "instantaneousLength",
        get: function() {
            return Array.isArray(this._iNames) ? this._iNames.length : 0;
        }
    }, {
        key: "instantaneousNames",
        get: function() {
            return this._iNames;
        }
    }, {
        key: "accumulatingLength",
        get: function() {
            return Array.isArray(this._aNames) ? this._aNames.length : 0;
        }
    }, {
        key: "accumulatingNames",
        get: function() {
            return this._aNames;
        }
    }, {
        key: "statusLength",
        get: function() {
            return Array.isArray(this._sNames) ? this._sNames.length : 0;
        }
    }, {
        key: "statusNames",
        get: function() {
            return this._sNames;
        }
    }, {
        key: "propertyNamesLength",
        get: function() {
            return this.instantaneousLength + this.accumulatingLength + this.statusLength;
        }
    }, {
        key: "propertyNames",
        get: function() {
            var t;
            return this.propertyNamesLength < 1 ? null : (t = [], 0 < this.instantaneousLength && (t = t.concat(this._iNames)), 
            0 < this.accumulatingLength && (t = t.concat(this._aNames)), 0 < this.statusLength ? t.concat(this._sNames) : t);
        }
    }, {
        key: "propertyNamesForType",
        value: function(t) {
            return DatumSamplesTypes.Instantaneous.equals(t) ? this._iNames : DatumSamplesTypes.Accumulating.equals(t) ? this._aNames : DatumSamplesTypes.Status.equals(t) ? this._sNames : null;
        }
    }, {
        key: "toJsonEncoding",
        value: function() {
            var t = {
                streamId: this._streamId,
                zone: this._zone,
                kind: (this._kind || DatumSamplesTypes.Node).key,
                objectId: this._objectId,
                sourceId: this._sourceId
            };
            return 0 < this.instantaneousLength && (t.i = this._iNames), 0 < this.accumulatingLength && (t.a = this._aNames), 
            0 < this.statusLength && (t.s = this._sNames), JSON.stringify(t);
        }
    } ], [ {
        key: "nodeMetadata",
        value: function(t, e, r, n, a, o, i) {
            return new s(t, e, DatumStreamTypes.Node, r, n, a, o, i);
        }
    }, {
        key: "locationMetadata",
        value: function(t, e, r, n, a, o, i) {
            return new s(t, e, DatumStreamTypes.Location, r, n, a, o, i);
        }
    }, {
        key: "fromJsonEncoding",
        value: function(t) {
            return this.fromJsonObject(JSON.parse(t));
        }
    }, {
        key: "fromJsonObject",
        value: function(t) {
            var e, r, n, a;
            return t ? (e = DatumStreamType.valueOf(t.kind), r = Array.isArray(t.i) ? t.i : void 0, 
            n = Array.isArray(t.a) ? t.a : void 0, a = Array.isArray(t.s) ? t.s : void 0, 
            new s(t.streamId, t.zone, e, t.objectId, t.sourceId, r, n, a)) : null;
        }
    } ]), s;
}();

function _createForOfIteratorHelper$5(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$5(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$5(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$5(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$5(t, e) : void 0;
}

function _arrayLikeToArray$5(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

function _createSuper$m(r) {
    var n = _isNativeReflectConstruct$m();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$m() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var BitmaskEnum = function() {
    _inherits(n, Enum);
    var r = _createSuper$m(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t))._bitNumber = e, t.constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "bitmaskBitNumber",
        get: function() {
            return this._bitNumber;
        }
    }, {
        key: "bitmaskBitOffset",
        get: function() {
            return this._bitNumber - 1;
        }
    } ], [ {
        key: "enumForBitNumber",
        value: function(t, e) {
            var r, n = _createForOfIteratorHelper$5(e);
            try {
                for (n.s(); !(r = n.n()).done; ) {
                    var a = r.value;
                    if (a.bitmaskBitNumber == t) return a;
                }
            } catch (t) {
                n.e(t);
            } finally {
                n.f();
            }
            return null;
        }
    }, {
        key: "bitmaskValue",
        value: function(t) {
            var e = 0;
            if (null != t) {
                var r, n = _createForOfIteratorHelper$5(t);
                try {
                    for (n.s(); !(r = n.n()).done; ) {
                        var a = r.value;
                        0 <= a.bitmaskBitOffset && (e |= 1 << a.bitmaskBitOffset);
                    }
                } catch (t) {
                    n.e(t);
                } finally {
                    n.f();
                }
            }
            return e;
        }
    }, {
        key: "setForBitmaskEnum",
        value: function(t, e) {
            return n.setForBitmask(t, e.enumValues());
        }
    }, {
        key: "setForBitmask",
        value: function(t, e) {
            if (t < 1) return new Set();
            var r, n = new Set(), a = _createForOfIteratorHelper$5(e);
            try {
                for (a.s(); !(r = a.n()).done; ) {
                    var o = r.value, i = o.bitmaskBitOffset;
                    0 <= i && 1 == (t >> i & 1) && n.add(o);
                }
            } catch (t) {
                a.e(t);
            } finally {
                a.f();
            }
            return n;
        }
    } ]), n;
}();

function _createSuper$l(r) {
    var n = _isNativeReflectConstruct$l();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$l() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var DeviceOperatingState = function() {
    _inherits(n, BitmaskEnum);
    var r = _createSuper$l(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t, e)).constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "code",
        get: function() {
            return this.bitmaskBitNumber;
        }
    } ], [ {
        key: "forCode",
        value: function(t) {
            return BitmaskEnum.enumForBitNumber(t, DeviceOperatingStateValues);
        }
    }, {
        key: "enumValues",
        value: function() {
            return DeviceOperatingStateValues;
        }
    } ]), n;
}(), DeviceOperatingStateValues = Object.freeze([ new DeviceOperatingState("Unknown", 0), new DeviceOperatingState("Normal", 1), new DeviceOperatingState("Starting", 2), new DeviceOperatingState("Standby", 3), new DeviceOperatingState("Shutdown", 4), new DeviceOperatingState("Fault", 5), new DeviceOperatingState("Disabled", 6), new DeviceOperatingState("Recovery", 7), new DeviceOperatingState("Override", 8) ]), DeviceOperatingStates = DeviceOperatingState.enumsValue(DeviceOperatingStateValues);

function _createForOfIteratorHelper$4(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$4(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$4(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$4(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$4(t, e) : void 0;
}

function _arrayLikeToArray$4(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

var GeneralMetadata = function() {
    function a(t, e, r) {
        _classCallCheck(this, a), this.info = t || null, this.propertyInfo = e || null, 
        this.tags = r instanceof Set ? r : Array.isArray(r) ? new Set(r) : null;
    }
    return _createClass(a, [ {
        key: "toJsonEncoding",
        value: function() {
            var t = {}, e = this.info, e = (e && (t.m = stringMapToObject(e)), this.propertyInfo), e = (e && (t.pm = stringMapToObject(e)), 
            this.tags);
            return e && (t.t = Array.from(e)), JSON.stringify(t);
        }
    } ], [ {
        key: "fromJsonEncoding",
        value: function(t) {
            var e, r, n;
            return t && (e = (t = JSON.parse(t)).m ? objectToStringMap(t.m) : null, 
            r = t.pm ? objectToStringMap(t.pm) : null, n = Array.isArray(t.t) ? new Set(t.t) : null), 
            new a(e, r, n);
        }
    } ]), a;
}();

function stringMapToObject(t) {
    var e = Object.create(null);
    if (t) {
        var r, n = _createForOfIteratorHelper$4(t);
        try {
            for (n.s(); !(r = n.n()).done; ) {
                var a = _slicedToArray(r.value, 2), o = a[0], i = a[1];
                e[o] = i instanceof Map ? stringMapToObject(i) : i;
            }
        } catch (t) {
            n.e(t);
        } finally {
            n.f();
        }
    }
    return e;
}

function objectToStringMap(t) {
    var e = new Map();
    if (t) for (var r = 0, n = Object.keys(t); r < n.length; r++) {
        var a = n[r], o = t[a];
        e.set(a, "object" === _typeof(o) ? objectToStringMap(o) : o);
    }
    return e;
}

function _createSuper$k(r) {
    var n = _isNativeReflectConstruct$k();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$k() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var InstructionState = function() {
    _inherits(r, Enum);
    var e = _createSuper$k(r);
    function r(t) {
        return _classCallCheck(this, r), (t = e.call(this, t)).constructor === r && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(r, null, [ {
        key: "enumValues",
        value: function() {
            return InstructionStateValues;
        }
    } ]), r;
}(), InstructionStateValues = Object.freeze([ new InstructionState("Unknown"), new InstructionState("Queued"), new InstructionState("Received"), new InstructionState("Executing"), new InstructionState("Declined"), new InstructionState("Completed") ]), InstructionStates = InstructionState.enumsValue(InstructionStateValues);

function _createSuper$j(r) {
    var n = _isNativeReflectConstruct$j();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$j() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var LocationPrecision = function() {
    _inherits(n, ComparableEnum);
    var r = _createSuper$j(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t, e)).constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "precision",
        get: function() {
            return this.value;
        }
    } ], [ {
        key: "enumValues",
        value: function() {
            return LocationPrecisionValues;
        }
    } ]), n;
}(), LocationPrecisionValues = Object.freeze([ new LocationPrecision("LatLong", 1), new LocationPrecision("Block", 5), new LocationPrecision("Street", 10), new LocationPrecision("PostalCode", 20), new LocationPrecision("Locality", 30), new LocationPrecision("StateOrProvince", 40), new LocationPrecision("Region", 50), new LocationPrecision("TimeZone", 60), new LocationPrecision("Country", 70) ]), LocationPrecisions = LocationPrecision.enumsValue(LocationPrecisionValues);

function _createForOfIteratorHelper$3(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$3(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$3(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$3(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$3(t, e) : void 0;
}

function _arrayLikeToArray$3(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

function setOrNull(t) {
    var e = null;
    return t instanceof Set ? e = 0 < t.size ? t : null : Array.isArray(t) ? e = 0 < t.length ? new Set(t) : null : t && (e = new Set([ t ])), 
    e;
}

function mergedSets(t, e) {
    var r = setOrNull(t), t = setOrNull(e);
    if (null === r && null === t) return null;
    if (null !== t) {
        if (null === r) return t;
        var n, a = _createForOfIteratorHelper$3(t.values());
        try {
            for (a.s(); !(n = a.n()).done; ) {
                var o = n.value;
                r.add(o);
            }
        } catch (t) {
            a.e(t);
        } finally {
            a.f();
        }
    }
    return r;
}

var SecurityPolicy = function() {
    function s(t, e, r, n, a, o, i, u) {
        _classCallCheck(this, s), this._nodeIds = setOrNull(t), this._sourceIds = setOrNull(e), 
        this._aggregations = setOrNull(r), this._minAggregation = n instanceof Aggregation ? n : null, 
        this._locationPrecisions = setOrNull(a), this._minLocationPrecision = o instanceof LocationPrecision ? o : null, 
        this._nodeMetadataPaths = setOrNull(i), this._userMetadataPaths = setOrNull(u), 
        this.constructor === s && Object.freeze(this);
    }
    return _createClass(s, [ {
        key: "nodeIds",
        get: function() {
            return this._nodeIds;
        }
    }, {
        key: "sourceIds",
        get: function() {
            return this._sourceIds;
        }
    }, {
        key: "aggregations",
        get: function() {
            return this._aggregations;
        }
    }, {
        key: "locationPrecisions",
        get: function() {
            return this._locationPrecisions;
        }
    }, {
        key: "minAggregation",
        get: function() {
            return this._minAggregation;
        }
    }, {
        key: "minLocationPrecision",
        get: function() {
            return this._minLocationPrecision;
        }
    }, {
        key: "nodeMetadataPaths",
        get: function() {
            return this._nodeMetadataPaths;
        }
    }, {
        key: "userMetadataPaths",
        get: function() {
            return this._userMetadataPaths;
        }
    }, {
        key: "toJsonEncoding",
        value: function() {
            var t = {}, e = this.nodeIds;
            return e && (t.nodeIds = Array.from(e)), (e = this.sourceIds) && (t.sourceIds = Array.from(e)), 
            (e = this.aggregations) && (t.aggregations = Array.from(e).map(function(t) {
                return t.name;
            })), (e = this.locationPrecisions) && (t.locationPrecisions = Array.from(e).map(function(t) {
                return t.name;
            })), (e = this.minAggregation) && (0 < t.length && (t += "&"), t.minAggregation = e.name), 
            (e = this.minLocationPrecision) && (t.minLocationPrecision = e.name), 
            (e = this.nodeMetadataPaths) && (t.nodeMetadataPaths = Array.from(e)), 
            (e = this.userMetadataPaths) && (t.userMetadataPaths = Array.from(e)), 
            JSON.stringify(t);
        }
    } ]), s;
}(), MIN_AGGREGATION_CACHE = new Map(), MIN_LOCATION_PRECISION_CACHE = new Map(), SecurityPolicyBuilder = function() {
    function t() {
        _classCallCheck(this, t);
    }
    return _createClass(t, [ {
        key: "withPolicy",
        value: function(t) {
            return t && this.withAggregations(t.aggregations).withMinAggregation(t.minAggregation).withLocationPrecisions(t.locationPrecisions).withMinLocationPrecision(t.minLocationPrecision).withNodeIds(t.nodeIds).withSourceIds(t.sourceIds).withNodeMetadataPaths(t.nodeMetadataPaths).withUserMetadataPaths(t.userMetadataPaths), 
            this;
        }
    }, {
        key: "addPolicy",
        value: function(t) {
            return t && (this.addAggregations(t.aggregations).addLocationPrecisions(t.locationPrecisions).addNodeIds(t.nodeIds).addSourceIds(t.sourceIds).addNodeMetadataPaths(t.nodeMetadataPaths).addUserMetadataPaths(t.userMetadataPaths), 
            t.minAggregation && this.withMinAggregation(t.minAggregation), t.minLocationPrecision) && this.withMinLocationPrecision(t.minLocationPrecision), 
            this;
        }
    }, {
        key: "withNodeIds",
        value: function(t) {
            return this.nodeIds = setOrNull(t), this;
        }
    }, {
        key: "addNodeIds",
        value: function(t) {
            return this.withNodeIds(mergedSets(this.nodeIds, t));
        }
    }, {
        key: "withNodeMetadataPaths",
        value: function(t) {
            return this.nodeMetadataPaths = setOrNull(t), this;
        }
    }, {
        key: "addNodeMetadataPaths",
        value: function(t) {
            return this.withNodeMetadataPaths(mergedSets(this.nodeMetadataPaths, t));
        }
    }, {
        key: "withUserMetadataPaths",
        value: function(t) {
            return this.userMetadataPaths = setOrNull(t), this;
        }
    }, {
        key: "addUserMetadataPaths",
        value: function(t) {
            return this.withUserMetadataPaths(mergedSets(this.userMetadataPaths, t));
        }
    }, {
        key: "withSourceIds",
        value: function(t) {
            return this.sourceIds = setOrNull(t), this;
        }
    }, {
        key: "addSourceIds",
        value: function(t) {
            return this.withSourceIds(mergedSets(this.sourceIds, t));
        }
    }, {
        key: "withAggregations",
        value: function(t) {
            return this.aggregations = setOrNull(t), this;
        }
    }, {
        key: "addAggregations",
        value: function(t) {
            return this.withAggregations(mergedSets(this.aggregations, t));
        }
    }, {
        key: "withLocationPrecisions",
        value: function(t) {
            return this.locationPrecisions = setOrNull(t), this;
        }
    }, {
        key: "addLocationPrecisions",
        value: function(t) {
            return this.withLocationPrecisions(mergedSets(this.locationPrecisions, t));
        }
    }, {
        key: "withMinAggregation",
        value: function(t) {
            return this.minAggregation = t, this;
        }
    }, {
        key: "buildAggregations",
        value: function() {
            var t = this.minAggregation, e = this.aggregations;
            return !t && e && 0 < e.size ? e : t ? Aggregation.minimumEnumSet(t, MIN_AGGREGATION_CACHE) : null;
        }
    }, {
        key: "withMinLocationPrecision",
        value: function(t) {
            return this.minLocationPrecision = t, this;
        }
    }, {
        key: "buildLocationPrecisions",
        value: function() {
            var t = this.minLocationPrecision, e = this.locationPrecisions;
            return !t && e && 0 < e.size ? e : t ? LocationPrecision.minimumEnumSet(t, MIN_LOCATION_PRECISION_CACHE) : null;
        }
    }, {
        key: "build",
        value: function() {
            return new SecurityPolicy(this.nodeIds, this.sourceIds, this.buildAggregations(), this.minAggregation, this.buildLocationPrecisions(), this.minLocationPrecision, this.nodeMetadataPaths, this.userMetadataPaths);
        }
    } ]), t;
}();

function _createSuper$i(r) {
    var n = _isNativeReflectConstruct$i();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$i() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var SkyCondition = function() {
    _inherits(n, BitmaskEnum);
    var r = _createSuper$i(n);
    function n(t, e) {
        return _classCallCheck(this, n), (t = r.call(this, t, e)).constructor === n && Object.freeze(_assertThisInitialized(t)), 
        t;
    }
    return _createClass(n, [ {
        key: "code",
        get: function() {
            return this.bitmaskBitNumber;
        }
    } ], [ {
        key: "forCode",
        value: function(t) {
            return BitmaskEnum.enumForBitNumber(t, SkyConditionValues);
        }
    }, {
        key: "enumValues",
        value: function() {
            return SkyConditionValues;
        }
    } ]), n;
}(), SkyConditionValues = Object.freeze([ new SkyCondition("Clear", 1), new SkyCondition("ScatteredClouds", 2), new SkyCondition("Cloudy", 3), new SkyCondition("Fog", 4), new SkyCondition("Drizzle", 5), new SkyCondition("ScatteredShowers", 6), new SkyCondition("Showers", 7), new SkyCondition("Rain", 8), new SkyCondition("Hail", 9), new SkyCondition("ScatteredSnow", 10), new SkyCondition("Snow", 11), new SkyCondition("Storm", 12), new SkyCondition("SevereStorm", 13), new SkyCondition("Thunder", 14), new SkyCondition("Windy", 15), new SkyCondition("Hazy", 16), new SkyCondition("Tornado", 17), new SkyCondition("Hurricane", 18), new SkyCondition("Dusty", 19) ]), SkyConditions = SkyCondition.enumsValue(SkyConditionValues);

function _createForOfIteratorHelper$2(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$2(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$2(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$2(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$2(t, e) : void 0;
}

function _arrayLikeToArray$2(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

var DatumStreamMetadataRegistry = function() {
    function i(t) {
        _classCallCheck(this, i), this._metaList = Array.isArray(t) ? t : [], this._metaMap = new Map();
        var e, r = _createForOfIteratorHelper$2(this._metaList);
        try {
            for (r.s(); !(e = r.n()).done; ) {
                var n = e.value;
                n instanceof DatumStreamMetadata && this._metaMap.set(n.streamId, n);
            }
        } catch (t) {
            r.e(t);
        } finally {
            r.f();
        }
    }
    return _createClass(i, [ {
        key: "addMetadata",
        value: function(t) {
            return t instanceof DatumStreamMetadata && t.streamId && (this._metaList.push(t), 
            this._metaMap.set(t.streamId, t)), this;
        }
    }, {
        key: "metadataStreamIds",
        value: function() {
            return new Set(this._metaMap.keys());
        }
    }, {
        key: "metadataAt",
        value: function(t) {
            return t < this._metaList.length ? this._metaList[t] : void 0;
        }
    }, {
        key: "indexOfMetadataStreamId",
        value: function(t) {
            var e, r = 0, n = _createForOfIteratorHelper$2(this._metaList);
            try {
                for (n.s(); !(e = n.n()).done; ) {
                    if (e.value.streamId === t) return r;
                    r += 1;
                }
            } catch (t) {
                n.e(t);
            } finally {
                n.f();
            }
            return -1;
        }
    }, {
        key: "metadataStreamIdsList",
        value: function() {
            return this._metaList.map(function(t) {
                return t.streamId;
            });
        }
    }, {
        key: "metadataForStreamId",
        value: function(t) {
            return this._metaMap.get(t);
        }
    }, {
        key: "metadataForObjectSource",
        value: function(t, e) {
            var r, n = _createForOfIteratorHelper$2(this._metaMap.values());
            try {
                for (n.s(); !(r = n.n()).done; ) {
                    var a = r.value;
                    if (a.objectId === t && a.sourceId == e) return a;
                }
            } catch (t) {
                n.e(t);
            } finally {
                n.f();
            }
        }
    }, {
        key: "toJsonEncoding",
        value: function() {
            var t, e = "[", r = _createForOfIteratorHelper$2(this._metaList);
            try {
                for (r.s(); !(t = r.n()).done; ) {
                    var n = t.value;
                    1 < e.length && (e += ","), e += n.toJsonEncoding();
                }
            } catch (t) {
                r.e(t);
            } finally {
                r.f();
            }
            return e += "]";
        }
    } ], [ {
        key: "fromJsonEncoding",
        value: function(t) {
            if (t) return this.fromJsonObject(JSON.parse(t));
        }
    }, {
        key: "fromJsonObject",
        value: function(t) {
            if (Array.isArray(t)) {
                var e, r = new i(), n = _createForOfIteratorHelper$2(t);
                try {
                    for (n.s(); !(e = n.n()).done; ) {
                        var a = e.value, o = DatumStreamMetadata.fromJsonObject(a);
                        o && r.addMetadata(o);
                    }
                } catch (t) {
                    n.e(t);
                } finally {
                    n.f();
                }
                return r;
            }
        }
    } ]), i;
}();

function _createForOfIteratorHelper$1(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray$1(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray$1(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray$1(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray$1(t, e) : void 0;
}

function _arrayLikeToArray$1(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

function pushProperties$1(t, e) {
    if (e) {
        var r, n = _createForOfIteratorHelper$1(e);
        try {
            for (n.s(); !(r = n.n()).done; ) {
                var a = r.value;
                t.push(a);
            }
        } catch (t) {
            n.e(t);
        } finally {
            n.f();
        }
    }
}

function populateProperties$1(t, e, r, n, a) {
    if (Array.isArray(e) && Array.isArray(r)) for (var o, i, u, s = 0, c = Math.min(e.length, r.length); s < c; s += 1) o = r[s], 
    DatumSamplesTypes.Instantaneous === n ? Array.isArray(o) && (i = e[s], 0 < (u = o.length)) && null !== o[0] && !Object.prototype.hasOwnProperty.call(t, i) && (t[i] = o[0], 
    a || (1 < u && null !== o[1] && (t[i + "_count"] = o[1]), 2 < u && null !== o[2] && (t[i + "_min"] = o[2]), 
    3 < u && null !== o[3] && (t[i + "_max"] = o[3]))) : DatumSamplesTypes.Accumulating === n ? Array.isArray(o) && (i = e[s], 
    0 < (u = o.length)) && null !== o[0] && !Object.prototype.hasOwnProperty.call(t, i) && (t[i] = o[0], 
    a || (1 < u && null !== o[1] && (t[i + "_start"] = o[1]), 2 < u && null !== o[2] && (t[i + "_end"] = o[2]))) : null != o && (i = e[s], 
    Object.prototype.hasOwnProperty.call(t, i) || (t[i] = o));
}

var StreamAggregateDatum = function() {
    function i(t, e, r, n, a, o) {
        _classCallCheck(this, i), this.streamId = t, this.ts = Array.isArray(e) ? e.map(function(t) {
            return t instanceof Date ? t : new Date(t);
        }) : [], this.iProps = r, this.aProps = n, this.sProps = a, this.tags = o ? o instanceof Set ? o : new Set(o) : void 0, 
        this.constructor === i && Object.freeze(this);
    }
    return _createClass(i, [ {
        key: "toObject",
        value: function(t, e) {
            var r = {
                streamId: this.streamId,
                sourceId: t.sourceId
            };
            return 0 < this.ts.length && (r.date = this.ts[0], 1 < this.ts.length) && (r.date_end = this.ts[1]), 
            void 0 !== t.nodeId ? r.nodeId = t.nodeId : void 0 !== t.locationId && (r.locationId = t.locationId), 
            this.tags && (r.tags = Array.from(this.tags)), populateProperties$1(r, t.instantaneousNames, this.iProps, DatumSamplesTypes.Instantaneous, e), 
            populateProperties$1(r, t.accumulatingNames, this.aProps, DatumSamplesTypes.Accumulating, e), 
            populateProperties$1(r, t.statusNames, this.sProps, DatumSamplesTypes.Status), 
            r;
        }
    }, {
        key: "toJsonEncoding",
        value: function(t) {
            return JSON.stringify(this.toJsonObject(t));
        }
    }, {
        key: "toJsonObject",
        value: function(t) {
            t = [ t instanceof DatumStreamMetadataRegistry ? t.indexOfMetadataStreamId(this.streamId) : this.streamId, this.ts.map(function(t) {
                return t ? t.getTime() : null;
            }) ];
            return pushProperties$1(t, this.iProps), pushProperties$1(t, this.aProps), 
            pushProperties$1(t, this.sProps), pushProperties$1(t, this.tags), t;
        }
    } ], [ {
        key: "fromJsonEncoding",
        value: function(t, e) {
            return this.fromJsonObject(JSON.parse(t), e);
        }
    }, {
        key: "fromJsonObject",
        value: function(t, e) {
            var r, n, a, o, i, u, s;
            return Array.isArray(t) && 1 < t.length ? (r = 2, 0 < (n = (a = "string" == typeof t[0] ? e instanceof DatumStreamMetadata ? e : e.metadataForStreamId(t[0]) : e instanceof DatumStreamMetadata ? e : e.metadataAt(t[0])).instantaneousLength) && (o = t.slice(r, r + n), 
            r += n), 0 < (n = a.accumulatingLength) && (i = t.slice(r, r + n), r += n), 
            0 < (n = a.statusLength) && (u = t.slice(r, r + n), r += n), r < t.length && (s = new Set(t.slice(r))), 
            new this(a.streamId, t[1], o, i, u, s, e)) : null;
        }
    } ]), i;
}();

function _createForOfIteratorHelper(t, e) {
    var r, n, a, o, i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (i) return n = !(r = !0), {
        s: function() {
            i = i.call(t);
        },
        n: function() {
            var t = i.next();
            return r = t.done, t;
        },
        e: function(t) {
            n = !0, a = t;
        },
        f: function() {
            try {
                r || null == i.return || i.return();
            } finally {
                if (n) throw a;
            }
        }
    };
    if (Array.isArray(t) || (i = _unsupportedIterableToArray(t)) || e && t && "number" == typeof t.length) return i && (t = i), 
    o = 0, {
        s: e = function() {},
        n: function() {
            return o >= t.length ? {
                done: !0
            } : {
                done: !1,
                value: t[o++]
            };
        },
        e: function(t) {
            throw t;
        },
        f: e
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(t, e) {
    var r;
    if (t) return "string" == typeof t ? _arrayLikeToArray(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(t, e) : void 0;
}

function _arrayLikeToArray(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
    return n;
}

function pushProperties(t, e) {
    if (e) {
        var r, n = _createForOfIteratorHelper(e);
        try {
            for (n.s(); !(r = n.n()).done; ) {
                var a = r.value;
                t.push(a);
            }
        } catch (t) {
            n.e(t);
        } finally {
            n.f();
        }
    }
}

function populateProperties(t, e, r) {
    if (Array.isArray(e) && Array.isArray(r)) for (var n, a, o = 0, i = Math.min(e.length, r.length); o < i; o += 1) null != (n = r[o]) && (a = e[o], 
    Object.prototype.hasOwnProperty.call(t, a) || (t[a] = n));
}

var StreamDatum = function() {
    function i(t, e, r, n, a, o) {
        _classCallCheck(this, i), this.streamId = t, this.ts = e instanceof Date ? e : new Date(e), 
        this.iProps = r, this.aProps = n, this.sProps = a, this.tags = o ? o instanceof Set ? o : new Set(o) : void 0, 
        this.constructor === i && Object.freeze(this);
    }
    return _createClass(i, [ {
        key: "propertyValuesForType",
        value: function(t) {
            return DatumSamplesTypes.Instantaneous.equals(t) ? this.iProps : DatumSamplesTypes.Accumulating.equals(t) ? this.aProps : DatumSamplesTypes.Status.equals(t) ? this.sProps : DatumSamplesTypes.Tags.equals(t) ? this.tags : void 0;
        }
    }, {
        key: "toObject",
        value: function(t) {
            var e = {
                streamId: this.streamId,
                date: this.ts,
                sourceId: t.sourceId
            };
            return void 0 !== t.nodeId ? e.nodeId = t.nodeId : void 0 !== t.locationId && (e.locationId = t.locationId), 
            this.tags && (e.tags = Array.from(this.tags)), populateProperties(e, t.instantaneousNames, this.iProps), 
            populateProperties(e, t.accumulatingNames, this.aProps), populateProperties(e, t.statusNames, this.sProps), 
            e;
        }
    }, {
        key: "toJsonEncoding",
        value: function(t) {
            return JSON.stringify(this.toJsonObject(t));
        }
    }, {
        key: "toJsonObject",
        value: function(t) {
            t = [ t instanceof DatumStreamMetadataRegistry ? t.indexOfMetadataStreamId(this.streamId) : this.streamId, this.ts.getTime() ];
            return pushProperties(t, this.iProps), pushProperties(t, this.aProps), 
            pushProperties(t, this.sProps), pushProperties(t, this.tags), t;
        }
    } ], [ {
        key: "fromJsonEncoding",
        value: function(t, e) {
            return this.fromJsonObject(JSON.parse(t), e);
        }
    }, {
        key: "fromJsonObject",
        value: function(t, e) {
            var r, n, a, o, i, u, s, c;
            return Array.isArray(t) && 1 < t.length ? (a = "string" == typeof t[0] ? e instanceof DatumStreamMetadata ? e : e.metadataForStreamId(t[0]) : e instanceof DatumStreamMetadata ? e : e.metadataAt(t[0]), 
            o = new Date(t[1]), r = 2, 0 < (n = a.instantaneousLength) && (i = t.slice(r, r + n), 
            r += n), 0 < (n = a.accumulatingLength) && (u = t.slice(r, r + n), r += n), 
            0 < (n = a.statusLength) && (s = t.slice(r, r + n), r += n), r < t.length && (c = new Set(t.slice(r))), 
            new this(a.streamId, o, i, u, s, c, e)) : null;
        }
    } ]), i;
}();

function _createSuper$h(r) {
    var n = _isNativeReflectConstruct$h();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$h() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var StreamDatumMetadataMixin = function(t) {
    return function() {
        _inherits(o, t);
        var a = _createSuper$h(o);
        function o() {
            var t;
            _classCallCheck(this, o);
            for (var e = arguments.length, r = new Array(e), n = 0; n < e; n++) r[n] = arguments[n];
            return t = a.call.apply(a, [ this ].concat(r)), 0 < r.length && r[r.length - 1] instanceof DatumStreamMetadata && (t._meta = r[r.length - 1]), 
            Object.freeze(_assertThisInitialized(t)), t;
        }
        return _createClass(o, [ {
            key: "metadata",
            get: function() {
                return this._meta;
            }
        }, {
            key: "toObject",
            value: function(t) {
                return _get(_getPrototypeOf(o.prototype), "toObject", this).call(this, this._meta, t);
            }
        } ]), o;
    }();
}, AggregateDatum = function(t) {
    _inherits(r, t);
    var e = _createSuper$h(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(StreamDatumMetadataMixin(StreamAggregateDatum)), Datum = function(t) {
    _inherits(r, t);
    var e = _createSuper$h(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(StreamDatumMetadataMixin(StreamDatum));

function _createSuper$g(r) {
    var n = _isNativeReflectConstruct$g();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$g() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var TagsKey = "tags", UserIdsKey$1 = "userIds", UserMetadataFilter = function() {
    _inherits(r, PropMap);
    var e = _createSuper$g(r);
    function r(t) {
        return _classCallCheck(this, r), e.call(this, t);
    }
    return _createClass(r, [ {
        key: "userId",
        get: function() {
            var t = this.userIds;
            return Array.isArray(t) && 0 < t.length ? t[0] : null;
        },
        set: function(t) {
            this.userIds = t ? [ t ] : null;
        }
    }, {
        key: "userIds",
        get: function() {
            return this.prop(UserIdsKey$1);
        },
        set: function(t) {
            this.prop(UserIdsKey$1, Array.isArray(t) ? t : null);
        }
    }, {
        key: "tags",
        get: function() {
            return this.prop(TagsKey);
        },
        set: function(t) {
            this.prop(TagsKey, Array.isArray(t) ? t : null);
        }
    }, {
        key: "toUriEncoding",
        value: function(t, e) {
            return _get(_getPrototypeOf(r.prototype), "toUriEncoding", this).call(this, t, e || userMetadataFilterUriEncodingPropertyMapper);
        }
    } ]), r;
}();

function userMetadataFilterUriEncodingPropertyMapper(t, e) {
    return t === UserIdsKey$1 && Array.isArray(e) && 1 === e.length ? [ t.substring(0, t.length - 1), e[0] ] : t;
}

var userMetadataFilter = Object.freeze({
    __proto__: null,
    TagsKey: TagsKey,
    UserIdsKey: UserIdsKey$1,
    default: UserMetadataFilter
});

function displayScaleForValue(t) {
    var e = 1, t = Math.abs(Number(t));
    return !1 === isNaN(t) && (1e9 <= t ? e = 1e9 : 1e6 <= t ? e = 1e6 : 1e3 <= t && (e = 1e3)), 
    e;
}

function displayUnitsForScale(t, e) {
    return (1e9 === e ? "G" : 1e6 === e ? "M" : 1e3 === e ? "k" : "") + t;
}

function _createSuper$f(r) {
    var n = _isNativeReflectConstruct$f();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$f() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var AuthTokenUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$f(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "refreshTokenV2Url",
            value: function(t) {
                return this.baseUrl() + "/auth-tokens/refresh/v2?date=" + encodeURIComponent(dateFormat(t || new Date()));
            }
        } ]), e;
    }();
}, MultiMap = function() {
    function e(t) {
        _classCallCheck(this, e), this.mappings = {}, this.mappingNames = [], t && this.putAll(t);
    }
    return _createClass(e, [ {
        key: "add",
        value: function(t, e) {
            return addValue(this, t, e);
        }
    }, {
        key: "put",
        value: function(t, e) {
            return addValue(this, t, e, !0);
        }
    }, {
        key: "putAll",
        value: function(t) {
            for (var e in t) Object.prototype.hasOwnProperty.call(t, e) && addValue(this, e, t[e], !0);
            return this;
        }
    }, {
        key: "value",
        value: function(t) {
            t = t.toLowerCase(), t = this.mappings[t];
            return t ? t.val : void 0;
        }
    }, {
        key: "firstValue",
        value: function(t) {
            t = this.value(t);
            return t && 0 < t.length ? t[0] : void 0;
        }
    }, {
        key: "clear",
        value: function() {
            return this.mappingNames.length = 0, this.mappings = {}, this;
        }
    }, {
        key: "remove",
        value: function(t) {
            var t = t.toLowerCase(), e = this.mappingNames.indexOf(t), r = this.mappings[t];
            return r && (delete this.mappings[t], this.mappingNames.splice(e, 1)), 
            r ? r.val : void 0;
        }
    }, {
        key: "size",
        value: function() {
            return this.mappingNames.length;
        }
    }, {
        key: "isEmpty",
        value: function() {
            return this.size() < 1;
        }
    }, {
        key: "containsKey",
        value: function(t) {
            return void 0 !== this.value(t);
        }
    }, {
        key: "keySet",
        value: function() {
            for (var t = [], e = this.size(), r = 0; r < e; r += 1) t.push(this.mappings[this.mappingNames[r]].key);
            return t;
        }
    } ]), e;
}();

function addValue(t, e, r, n) {
    if (void 0 !== r) {
        var a = e.toLowerCase(), o = t.mappings[a];
        if (o || (t.mappings[a] = o = {
            key: e,
            val: []
        }, t.mappingNames.push(a)), n && (o.val.length = 0), Array.isArray(r)) for (var i = r.length, u = 0; u < i; u += 1) o.val.push(r[u]); else o.val.push(r);
    }
    return t;
}

function createGetter(t, e) {
    return function() {
        return t.map[e];
    };
}

function createSetter(e, r) {
    return function(t) {
        e.map[r] = t;
    };
}

function createProperty(t, e) {
    Object.defineProperty(t, e, {
        enumerable: !0,
        configurable: !0,
        get: createGetter(t, e),
        set: createSetter(t, e)
    });
}

var Configuration = function() {
    function e(t) {
        _classCallCheck(this, e), this.map = {}, void 0 !== t && this.values(t);
    }
    return _createClass(e, [ {
        key: "enabled",
        value: function(t) {
            return void 0 !== t && !!this.map[t];
        }
    }, {
        key: "toggle",
        value: function(t, e) {
            var r = e;
            return void 0 === t ? this : (void 0 === e && (r = void 0 === this.map[t]), 
            this.value(t, !0 === r || null));
        }
    }, {
        key: "value",
        value: function(t, e) {
            return 1 === arguments.length ? this.map[t] : (null === e ? (delete this.map[t], 
            Object.prototype.hasOwnProperty.call(this, t) && delete this[t]) : (this.map[t] = e, 
            Object.prototype.hasOwnProperty.call(this, t) || createProperty(this, t)), 
            this);
        }
    }, {
        key: "values",
        value: function(t) {
            if (t) {
                for (var e in t) Object.prototype.hasOwnProperty.call(t, e) && this.value(e, t[e]);
                return this;
            }
            return Object.assign({}, this.map);
        }
    } ]), e;
}();

function _createSuper$e(r) {
    var n = _isNativeReflectConstruct$e();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$e() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

function normalizedProtocol(t) {
    return t ? t.replace(/:$/, "") : "https";
}

function normalizedConfig(t) {
    t = Object.assign({
        host: "data.solarnetwork.net"
    }, t);
    return t.protocol = normalizedProtocol(t.protocol || "https"), t.port = t.port || ("https" === t.protocol ? 443 : 80), 
    t.host = t.port && t.hostname ? t.hostname : t.host, t;
}

var Environment = function() {
    _inherits(r, Configuration);
    var e = _createSuper$e(r);
    function r(t) {
        return _classCallCheck(this, r), e.call(this, normalizedConfig(t));
    }
    return _createClass(r, [ {
        key: "useTls",
        value: function() {
            return "https" === this.value("protocol");
        }
    } ]), r;
}();

function _createSuper$d(r) {
    var n = _isNativeReflectConstruct$d();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$d() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var HttpMethod = Object.freeze({
    GET: "GET",
    HEAD: "HEAD",
    POST: "POST",
    PUT: "PUT",
    PATCH: "PATCH",
    DELETE: "DELETE",
    OPTIONS: "OPTIONS",
    TRACE: "TRACE"
}), HttpContentType = Object.freeze({
    APPLICATION_JSON: "application/json",
    APPLICATION_JSON_UTF8: "application/json; charset=UTF-8",
    FORM_URLENCODED: "application/x-www-form-urlencoded",
    FORM_URLENCODED_UTF8: "application/x-www-form-urlencoded; charset=UTF-8"
}), HttpHeaders = function() {
    _inherits(e, MultiMap);
    var t = _createSuper$d(e);
    function e() {
        return _classCallCheck(this, e), t.call(this);
    }
    return _createClass(e);
}();

function urlQueryParse(t, e) {
    var r, n, a, o, i, u = {};
    if (void 0 !== t && 0 < t.length) for (n = 0, a = (r = (t = t.match(/^\?/) ? t.substring(1) : t).split("&")).length; n < a; n++) 2 === (i = r[n].split("=", 2)).length && (o = decodeURIComponent(i[0]), 
    i = decodeURIComponent(i[1]), u[o] ? (Array.isArray(u[o]) || (u[o] = [ u[o] ]), 
    u[o].push(i)) : e && e.has(o) ? u[o] = [ i ] : u[o] = i);
    return u;
}

function urlQueryEncode(t, e) {
    var r, n, a, o, i = "", u = e || encodeURIComponent;
    function s(t, e) {
        i.length && (i += "&"), i += u(t) + "=" + u(e);
    }
    if (t) for (r in t) if (Object.prototype.hasOwnProperty.call(t, r)) if (n = t[r], 
    Array.isArray(n)) for (a = 0, o = n.length; a < o; a++) s(r, n[a]); else s(r, n);
    return i;
}

Object.defineProperties(HttpHeaders, {
    ACCEPT: {
        value: "Accept"
    },
    AUTHORIZATION: {
        value: "Authorization"
    },
    CONTENT_MD5: {
        value: "Content-MD5"
    },
    CONTENT_TYPE: {
        value: "Content-Type"
    },
    DATE: {
        value: "Date"
    },
    DIGEST: {
        value: "Digest"
    },
    HOST: {
        value: "Host"
    },
    X_SN_DATE: {
        value: "X-SN-Date"
    }
});

var urlQuery = {
    urlQueryParse: urlQueryParse,
    urlQueryEncode: urlQueryEncode
}, SIGNING_KEY_VALIDITY = 6048e5, AuthorizationV2Builder = function() {
    function r(t, e) {
        _classCallCheck(this, r), this.tokenId = t, this.environment = e || new Environment(), 
        this.httpHeaders = new HttpHeaders(), this.parameters = new MultiMap(), 
        this.forceHostPort = !1, this.reset();
    }
    return _createClass(r, [ {
        key: "reset",
        value: function() {
            this.contentDigest = null;
            var t = this.environment.host;
            return this.httpHeaders.clear(), this.parameters.clear(), this.signedHttpHeaders([]).method(HttpMethod.GET).host(t).path("/").date(new Date());
        }
    }, {
        key: "saveSigningKey",
        value: function(t) {
            return this.key(this.computeSigningKey(t), this.requestDate), this;
        }
    }, {
        key: "key",
        value: function(t, e) {
            if (void 0 === t) return this.signingKey;
            this.signingKey = t;
            t = new Date((e || this.requestDate).getTime() + SIGNING_KEY_VALIDITY);
            return t.setUTCHours(0), t.setUTCMinutes(0), t.setUTCSeconds(0), t.setUTCMilliseconds(0), 
            this.signingKeyExpiration = t, this;
        }
    }, {
        key: "signingKeyExpirationDate",
        get: function() {
            return this.signingKeyExpiration;
        }
    }, {
        key: "signingKeyValid",
        get: function() {
            return !!(this.signingKey && this.signingKeyExpiration instanceof Date && Date.now() < this.signingKeyExpiration.getTime());
        }
    }, {
        key: "method",
        value: function(t) {
            return this.httpMethod = t, this;
        }
    }, {
        key: "host",
        value: function(t) {
            return this.forceHostPort && t.indexOf(":") < 0 && 80 != this.environment.port && (t += ":" + this.environment.port), 
            this.httpHeaders.put(HttpHeaders.HOST, t), this;
        }
    }, {
        key: "path",
        value: function(t) {
            return this.requestPath = t, this;
        }
    }, {
        key: "url",
        value: function(t, e) {
            var t = parse(t), r = t.host;
            return !t.port || ("https" !== t.scheme && "wss" !== t.scheme || 443 === t.port) && ("http" !== t.scheme && "ws" !== t.scheme || 80 === t.port) || (r += ":" + t.port), 
            t.query && this.queryParams(urlQueryParse(t.query)), e || this.host(r), 
            this.path("wss" === t.scheme || "ws" === t.scheme ? t.resourceName : t.path);
        }
    }, {
        key: "contentType",
        value: function(t) {
            return this.httpHeaders.put(HttpHeaders.CONTENT_TYPE, t), this;
        }
    }, {
        key: "date",
        value: function(t) {
            return this.requestDate = t || new Date(), this;
        }
    }, {
        key: "requestDateHeaderValue",
        get: function() {
            return this.requestDate.toUTCString();
        }
    }, {
        key: "useSnDate",
        get: function() {
            var t = this.signedHeaderNames;
            return 0 <= (Array.isArray(t) ? t.findIndex(caseInsensitiveEqualsFn(HttpHeaders.X_SN_DATE)) : -1) || this.httpHeaders.containsKey(HttpHeaders.X_SN_DATE);
        },
        set: function(t) {
            var e = this.signedHeaderNames, r = Array.isArray(e) ? e.findIndex(caseInsensitiveEqualsFn(HttpHeaders.X_SN_DATE)) : -1;
            t && r < 0 ? (e = e ? e.concat(HttpHeaders.X_SN_DATE) : [ HttpHeaders.X_SN_DATE ], 
            this.signedHeaderNames = e) : !t && 0 <= r && (e.splice(r, 1), this.signedHeaderNames = e), 
            this.httpHeaders.remove(HttpHeaders.X_SN_DATE);
        }
    }, {
        key: "snDate",
        value: function(t) {
            return this.useSnDate = t, this;
        }
    }, {
        key: "header",
        value: function(t, e) {
            return this.httpHeaders.put(t, e), this;
        }
    }, {
        key: "headers",
        value: function(t) {
            return this.httpHeaders = t, this;
        }
    }, {
        key: "queryParams",
        value: function(t) {
            return t instanceof MultiMap ? this.parameters = t : this.parameters.putAll(t), 
            this;
        }
    }, {
        key: "signedHttpHeaders",
        value: function(t) {
            return this.signedHeaderNames = t, this;
        }
    }, {
        key: "contentSHA256",
        value: function(t) {
            t = "string" == typeof t ? Hex.parse(t) : t;
            return this.contentDigest = t, this;
        }
    }, {
        key: "computeContentDigest",
        value: function(t) {
            t = SHA256(t);
            return this.contentSHA256(t), this.header("Digest", "sha-256=" + Base64.stringify(t)), 
            this;
        }
    }, {
        key: "canonicalQueryParameters",
        value: function() {
            var t = this.parameters.keySet();
            if (t.length < 1) return "";
            t.sort();
            for (var e = t.length, r = !0, n = "", a = 0; a < e; a += 1) for (var o = t[a], i = this.parameters.value(o), u = i.length, s = 0; s < u; s += 1) r ? r = !1 : n += "&", 
            n += _encodeURIComponent(o) + "=" + _encodeURIComponent(i[s]);
            return n;
        }
    }, {
        key: "canonicalHeaders",
        value: function(t) {
            for (var e, r = "", n = t.length, a = 0; a < n; a += 1) r += (e = t[a]) + ":" + ((e = "date" === e || "x-sn-date" === e ? this.requestDate.toUTCString() : this.httpHeaders.firstValue(e)) ? e.trim() : "") + "\n";
            return r;
        }
    }, {
        key: "canonicalSignedHeaderNames",
        value: function(t) {
            return t.join(";");
        }
    }, {
        key: "canonicalContentSHA256",
        value: function() {
            return this.contentDigest ? Hex.stringify(this.contentDigest) : r.EMPTY_STRING_SHA256_HEX;
        }
    }, {
        key: "canonicalHeaderNames",
        value: function() {
            var t = this.httpHeaders, e = this.signedHeaderNames, r = new MultiMap();
            return r.put(HttpHeaders.HOST, !0), this.useSnDate ? r.put(HttpHeaders.X_SN_DATE, !0) : r.put(HttpHeaders.DATE, !0), 
            t.containsKey(HttpHeaders.CONTENT_MD5) && r.put(HttpHeaders.CONTENT_MD5, !0), 
            t.containsKey(HttpHeaders.CONTENT_TYPE) && r.put(HttpHeaders.CONTENT_TYPE, !0), 
            t.containsKey(HttpHeaders.DIGEST) && r.put(HttpHeaders.DIGEST, !0), 
            e && 0 < e.length && e.forEach(function(t) {
                return r.put(t, !0);
            }), lowercaseSortedArray(r.keySet());
        }
    }, {
        key: "buildCanonicalRequestData",
        value: function() {
            return this.computeCanonicalRequestData(this.canonicalHeaderNames());
        }
    }, {
        key: "computeCanonicalRequestData",
        value: function(t) {
            var e = this.httpMethod + "\n";
            return (e += this.requestPath + "\n") + (this.canonicalQueryParameters() + "\n") + this.canonicalHeaders(t) + (this.canonicalSignedHeaderNames(t) + "\n") + this.canonicalContentSHA256();
        }
    }, {
        key: "computeSigningKey",
        value: function(t) {
            var e = iso8601Date(this.requestDate);
            return HmacSHA256("snws2_request", HmacSHA256(e, "SNWS2" + t));
        }
    }, {
        key: "computeSignatureData",
        value: function(t) {
            return "SNWS2-HMAC-SHA256\n" + iso8601Date(this.requestDate, !0) + "\n" + Hex.stringify(SHA256(t));
        }
    }, {
        key: "buildWithKey",
        value: function(t) {
            var e = this.canonicalHeaderNames(), r = this.computeCanonicalRequestData(e), r = this.computeSignatureData(r), r = Hex.stringify(HmacSHA256(r, t));
            return "SNWS2 Credential=" + this.tokenId + ",SignedHeaders=" + e.join(";") + ",Signature=" + r;
        }
    }, {
        key: "build",
        value: function(t) {
            t = this.computeSigningKey(t);
            return this.buildWithKey(t);
        }
    }, {
        key: "buildWithSavedKey",
        value: function() {
            return this.buildWithKey(this.signingKey);
        }
    } ]), r;
}();

function caseInsensitiveEqualsFn(t) {
    var e = t.toLowerCase();
    return function(t) {
        return e === t.toString().toLowerCase();
    };
}

function lowercaseSortedArray(t) {
    for (var e = [], r = t.length, n = 0; n < r; n += 1) e.push(t[n].toLowerCase());
    return e.sort(), e;
}

function _hexEscapeChar(t) {
    return "%" + t.charCodeAt(0).toString(16).toUpperCase();
}

function _encodeURIComponent(t) {
    return encodeURIComponent(t).replace(/[!'()*]/g, _hexEscapeChar);
}

Object.defineProperties(AuthorizationV2Builder, {
    EMPTY_STRING_SHA256_HEX: {
        value: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    SNWS2_AUTH_SCHEME: {
        value: "SNWS2"
    }
});

var UrlHelper = function() {
    function e(t) {
        _classCallCheck(this, e);
        t = t instanceof Environment ? t : new Environment(t);
        this.environment = t, this._parameters = new Configuration();
    }
    return _createClass(e, [ {
        key: "parameters",
        get: function() {
            return this._parameters;
        }
    }, {
        key: "env",
        value: function() {
            var t;
            return (t = this.environment).value.apply(t, arguments);
        }
    }, {
        key: "parameter",
        value: function() {
            var t;
            return (t = this._parameters).value.apply(t, arguments);
        }
    }, {
        key: "hostUrl",
        value: function() {
            var t = this.environment.useTls(), e = this.environment.value("proxyHost") || this.environment.value("host"), r = +(this.environment.value("proxyPort") || this.environment.value("port")), e = "http" + (t ? "s" : "") + "://" + e;
            return (t && 0 < r && 443 != r || !t && 0 < r && 80 != r) && (e += ":" + r), 
            e;
        }
    }, {
        key: "hostWebSocketUrl",
        value: function() {
            var t = this.environment.useTls(), e = this.environment.value("proxyHost") || this.environment.value("host"), r = +(this.environment.value("proxyPort") || this.environment.value("port")), e = "ws" + (t ? "s" : "") + "://" + e;
            return (t && 0 < r && 443 != r || !t && 0 < r && 80 != r) && (e += ":" + r), 
            e;
        }
    }, {
        key: "baseUrl",
        value: function() {
            return this.hostUrl();
        }
    }, {
        key: "resolveTemplatePath",
        value: function(t) {
            return this.hostUrl() + this.resolveTemplateUrl(t);
        }
    }, {
        key: "resolveTemplateUrl",
        value: function(t) {
            return e.resolveTemplateUrl(t, this._parameters);
        }
    } ], [ {
        key: "resolveTemplateUrl",
        value: function(t, r) {
            return t.replace(/\{([^}]+)\}/g, function(t, e) {
                e = r[e];
                return void 0 !== e ? encodeURIComponent(e) : "";
            });
        }
    } ]), e;
}();

function _createSuper$c(r) {
    var n = _isNativeReflectConstruct$c();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$c() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var LocationIdsKey = "locationIds", SourceIdsKey$1 = "sourceIds", LocationUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$c(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "locationId",
            get: function() {
                var t = this.locationIds;
                return Array.isArray(t) && 0 < t.length ? t[0] : null;
            },
            set: function(t) {
                this.parameter(LocationIdsKey, t ? [ t ] : null);
            }
        }, {
            key: "locationIds",
            get: function() {
                return this.parameter(LocationIdsKey);
            },
            set: function(t) {
                this.parameter(LocationIdsKey, t);
            }
        }, {
            key: "sourceId",
            get: function() {
                var t = this.sourceIds;
                return Array.isArray(t) && 0 < t.length ? t[0] : null;
            },
            set: function(t) {
                this.parameter(SourceIdsKey$1, t && [ t ]);
            }
        }, {
            key: "sourceIds",
            get: function() {
                return this.parameter(SourceIdsKey$1);
            },
            set: function(t) {
                this.parameter(SourceIdsKey$1, t);
            }
        }, {
            key: "findLocationsUrl",
            value: function(t, e, r) {
                return this.baseUrl() + "/location?" + t.toUriEncodingWithSorting(e, r);
            }
        } ]), e;
    }();
};

function _createSuper$b(r) {
    var n = _isNativeReflectConstruct$b();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$b() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var SolarQueryDefaultPath = "/solarquery", SolarQueryPathKey = "solarQueryPath", SolarQueryApiPathV1 = "/api/v1", SolarQueryPublicPathKey = "publicQuery", QueryUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$b(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "publicQuery",
            get: function() {
                return !!this.env(SolarQueryPublicPathKey);
            },
            set: function(t) {
                this.env(SolarQueryPublicPathKey, !!t);
            }
        }, {
            key: "baseUrl",
            value: function() {
                var t = this.env(SolarQueryPathKey) || SolarQueryDefaultPath, e = this.publicQuery;
                return this.hostUrl() + t + SolarQueryApiPathV1 + (e ? "/pub" : "/sec");
            }
        } ]), e;
    }();
};

function _createSuper$a(r) {
    var n = _isNativeReflectConstruct$a();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$a() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var LocationDatumMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$a(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "baseLocationDatumMetadataUrl",
            value: function(t) {
                return this.baseUrl() + "/location/meta/" + (t || this.locationId);
            }
        }, {
            key: "locationDatumMetadataUrlWithSource",
            value: function(t, e) {
                var t = this.baseLocationDatumMetadataUrl(t), r = e || this.sourceId;
                return null !== e && r && (t += "?sourceId=" + encodeURIComponent(r)), 
                t;
            }
        }, {
            key: "viewLocationDatumMetadataUrl",
            value: function(t, e) {
                return this.locationDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "addLocationDatumMetadataUrl",
            value: function(t, e) {
                return this.locationDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "replaceLocationDatumMetadataUrl",
            value: function(t, e) {
                return this.locationDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "deleteLocationDatumMetadataUrl",
            value: function(t, e) {
                return this.locationDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "findLocationDatumMetadataUrl",
            value: function(t, e, r) {
                var n = this.baseUrl() + "/location/meta", t = t.toUriEncodingWithSorting(e, r);
                return 0 < t.length && (n += "?" + t), n;
            }
        } ]), e;
    }();
}, LocationDatumMetadataUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$a(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(LocationDatumMetadataUrlHelperMixin(QueryUrlHelperMixin(LocationUrlHelperMixin(UrlHelper))));

function _createSuper$9(r) {
    var n = _isNativeReflectConstruct$9();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$9() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var LocationDatumUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$9(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "reportableIntervalUrl",
            value: function(t, e) {
                var t = this.baseUrl() + "/location/datum/interval?locationId=" + (t || this.locationId), r = e || this.sourceId;
                return null !== e && r && (t += "&sourceId=" + encodeURIComponent(r)), 
                t;
            }
        }, {
            key: "availableSourcesUrl",
            value: function(t, e, r) {
                t = this.baseUrl() + "/location/datum/sources?locationId=" + (t || this.locationId);
                return e instanceof Date && (t += "&start=" + encodeURIComponent(dateTimeUrlFormat(e))), 
                r instanceof Date && (t += "&end=" + encodeURIComponent(dateTimeUrlFormat(r))), 
                t;
            }
        }, {
            key: "listDatumUrl",
            value: function(t, e, r) {
                var n = this.baseUrl() + "/location/datum/list", t = t ? t.toUriEncodingWithSorting(e, r) : "";
                return 0 < t.length && (n += "?" + t), n;
            }
        }, {
            key: "mostRecentDatumUrl",
            value: function(t, e, r) {
                var n = this.baseUrl() + "/location/datum/mostRecent", t = t ? t.toUriEncodingWithSorting(e, r) : "";
                return 0 < t.length && (n += "?" + t), n;
            }
        } ]), e;
    }();
}, LocationDatumUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$9(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(LocationDatumUrlHelperMixin(QueryUrlHelperMixin(LocationUrlHelperMixin(UrlHelper))));

function _createSuper$8(r) {
    var n = _isNativeReflectConstruct$8();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$8() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var NodeIdsKey = "nodeIds", SourceIdsKey = "sourceIds", NodeUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$8(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "nodeId",
            get: function() {
                var t = this.nodeIds;
                return Array.isArray(t) && 0 < t.length ? t[0] : null;
            },
            set: function(t) {
                this.parameter(NodeIdsKey, t ? [ t ] : null);
            }
        }, {
            key: "nodeIds",
            get: function() {
                return this.parameter(NodeIdsKey);
            },
            set: function(t) {
                this.parameter(NodeIdsKey, t);
            }
        }, {
            key: "sourceId",
            get: function() {
                var t = this.sourceIds;
                return Array.isArray(t) && 0 < t.length ? t[0] : null;
            },
            set: function(t) {
                this.parameter(SourceIdsKey, t && [ t ]);
            }
        }, {
            key: "sourceIds",
            get: function() {
                return this.parameter(SourceIdsKey);
            },
            set: function(t) {
                this.parameter(SourceIdsKey, t);
            }
        }, {
            key: "listAllNodeIdsUrl",
            value: function() {
                return this.baseUrl() + "/nodes";
            }
        }, {
            key: "findSourcesUrl",
            value: function(t) {
                var t = t ? new DatumFilter(t) : this.datumFilter(), e = this.baseUrl() + "/nodes/sources", t = t.toUriEncoding();
                return 0 < t.length && (e += "?" + t), e;
            }
        } ]), e;
    }();
};

function _createSuper$7(r) {
    var n = _isNativeReflectConstruct$7();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$7() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var NodeDatumMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$7(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "baseNodeDatumMetadataUrl",
            value: function(t) {
                return this.baseUrl() + "/datum/meta/" + (t || this.nodeId);
            }
        }, {
            key: "nodeDatumMetadataUrlWithSource",
            value: function(t, e) {
                var t = this.baseNodeDatumMetadataUrl(t), r = e || this.sourceId;
                return null !== e && r && (t += "?sourceId=" + encodeURIComponent(r)), 
                t;
            }
        }, {
            key: "viewNodeDatumMetadataUrl",
            value: function(t, e) {
                return this.nodeDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "addNodeDatumMetadataUrl",
            value: function(t, e) {
                return this.nodeDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "replaceNodeDatumMetadataUrl",
            value: function(t, e) {
                return this.nodeDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "deleteNodeDatumMetadataUrl",
            value: function(t, e) {
                return this.nodeDatumMetadataUrlWithSource(t, e);
            }
        }, {
            key: "findNodeDatumMetadataUrl",
            value: function(t, e, r, n) {
                var t = this.baseNodeDatumMetadataUrl(t), a = "", o = e || this.sourceId;
                return null !== e && o && (a += "sourceId=" + encodeURIComponent(o)), 
                Array.isArray(r) && r.forEach(function(t, e) {
                    t instanceof SortDescriptor && (0 < a.length && (a += "&"), 
                    a += t.toUriEncoding(e));
                }), n instanceof Pagination && (0 < a.length && (a += "&"), a += n.toUriEncoding()), 
                0 < a.length && (t += "?" + a), t;
            }
        }, {
            key: "userMetadataUrl",
            value: function(t) {
                var e = this.baseUrl() + "/users/meta", r = t || this.userId;
                return (r = Array.isArray(r) ? 0 < r.length ? r[0] : null : r) && null !== t && (e += "/" + r), 
                e;
            }
        }, {
            key: "viewUserMetadataUrl",
            value: function(t) {
                return this.userMetadataUrl(t);
            }
        } ]), e;
    }();
}, NodeDatumMetadataUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$7(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(NodeDatumMetadataUrlHelperMixin(QueryUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));

function _createSuper$6(r) {
    var n = _isNativeReflectConstruct$6();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$6() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var NodeDatumUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$6(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "reportableIntervalUrl",
            value: function(t, e) {
                t = this.baseUrl() + "/range/interval?nodeId=" + (t || this.nodeId), 
                e = e || this.sourceIds;
                return Array.isArray(e) && 0 < e.length && (t += "&sourceIds=" + e.map(function(t) {
                    return encodeURIComponent(t);
                }).join(",")), t;
            }
        }, {
            key: "availableSourcesUrl",
            value: function(t, e) {
                t = t ? new DatumFilter(t) : this.datumFilter(), void 0 !== e && t.prop("withNodeIds", !!e), 
                e = this.baseUrl() + "/range/sources", t = t.toUriEncoding();
                return 0 < t.length && (e += "?" + t), e;
            }
        }, {
            key: "listDatumUrl",
            value: function(t, e, r) {
                var n = this.baseUrl() + "/datum/list", t = (t || this.datumFilter()).toUriEncodingWithSorting(e, r);
                return 0 < t.length && (n += "?" + t), n;
            }
        }, {
            key: "datumReadingUrl",
            value: function(t, e, r, n, a) {
                var o = this.baseUrl() + "/datum/reading", t = new DatumFilter(t) || this.datumFilter(), e = (t.prop("readingType", e.name), 
                r && t.prop("tolerance", r), t.toUriEncodingWithSorting(n, a));
                return 0 < e.length && (o += "?" + e), o;
            }
        }, {
            key: "streamDatumUrl",
            value: function(t, e, r) {
                var n = this.baseUrl() + "/datum/stream/datum", t = (t || this.datumFilter()).toUriEncodingWithSorting(e, r);
                return 0 < t.length && (n += "?" + t), n;
            }
        }, {
            key: "streamReadingUrl",
            value: function(t, e, r, n, a) {
                var o = this.baseUrl() + "/datum/stream/reading", t = new DatumFilter(t) || this.datumFilter(), e = (t.prop("readingType", e.name), 
                r && t.prop("tolerance", r), t.toUriEncodingWithSorting(n, a));
                return 0 < e.length && (o += "?" + e), o;
            }
        }, {
            key: "datumFilter",
            value: function() {
                var t = new DatumFilter(), e = this.nodeIds;
                return e && (t.nodeIds = e), (e = this.sourceIds) && (t.sourceIds = e), 
                t;
            }
        }, {
            key: "mostRecentDatumUrl",
            value: function(t, e, r) {
                var n = this.baseUrl() + "/datum/mostRecent", t = (t || this.datumFilter()).toUriEncodingWithSorting(e, r);
                return 0 < t.length && (n += "?" + t), n;
            }
        } ]), e;
    }();
}, NodeDatumUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$6(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(NodeDatumUrlHelperMixin(QueryUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));

function _createSuper$5(r) {
    var n = _isNativeReflectConstruct$5();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$5() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var SolarUserDefaultPath = "/solaruser", SolarUserPathKey = "solarUserPath", SolarUserApiPathV1 = "/api/v1/sec", UserIdsKey = "userIds", UserUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$5(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "userId",
            get: function() {
                var t = this.parameter(UserIdsKey);
                return Array.isArray(t) && 0 < t.length ? t[0] : null;
            },
            set: function(t) {
                this.parameter(UserIdsKey, [ t ]);
            }
        }, {
            key: "userIds",
            get: function() {
                return this.parameter(UserIdsKey);
            },
            set: function(t) {
                this.parameter(UserIdsKey, t);
            }
        }, {
            key: "baseUrl",
            value: function() {
                var t = this.env(SolarUserPathKey) || SolarUserDefaultPath;
                return _get(_getPrototypeOf(e.prototype), "baseUrl", this).call(this) + t + SolarUserApiPathV1;
            }
        }, {
            key: "whoamiUrl",
            value: function() {
                return this.baseUrl() + "/whoami";
            }
        }, {
            key: "viewNodesUrl",
            value: function() {
                return this.baseUrl() + "/nodes";
            }
        }, {
            key: "viewPendingNodesUrl",
            value: function() {
                return this.baseUrl() + "/nodes/pending";
            }
        }, {
            key: "viewArchivedNodesUrl",
            value: function() {
                return this.baseUrl() + "/nodes/archived";
            }
        }, {
            key: "updateNodeArchivedStatusUrl",
            value: function(t, e) {
                t = Array.isArray(t) ? t : t ? [ t ] : this.nodeIds;
                return this.baseUrl() + "/nodes/archived?nodeIds=" + t.join(",") + "&archived=" + (e ? "true" : "false");
            }
        }, {
            key: "nimAuthorizeUrl",
            value: function() {
                return this.baseUrl() + "/user/nim/authorize";
            }
        } ]), e;
    }();
};

function _createSuper$4(r) {
    var n = _isNativeReflectConstruct$4();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$4() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var NodeInstructionUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$4(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "viewInstructionUrl",
            value: function(t) {
                return this.baseUrl() + "/instr/view?id=" + encodeURIComponent(t);
            }
        }, {
            key: "viewActiveInstructionsUrl",
            value: function(t) {
                return this.baseUrl() + "/instr/viewActive?nodeId=" + (t || this.nodeId);
            }
        }, {
            key: "viewPendingInstructionsUrl",
            value: function(t) {
                return this.baseUrl() + "/instr/viewPending?nodeId=" + (t || this.nodeId);
            }
        }, {
            key: "updateInstructionStateUrl",
            value: function(t, e) {
                return this.baseUrl() + "/instr/updateState?id=" + encodeURIComponent(t) + "&state=" + encodeURIComponent(e.name);
            }
        }, {
            key: "urlEncodeInstructionParameters",
            value: function(t) {
                var e, r, n = "";
                if (Array.isArray(t)) for (e = 0, r = t.length; e < r; e += 1) 0 < n.length && (n += "&"), 
                n += encodeURIComponent("parameters[" + e + "].name") + "=" + encodeURIComponent(t[e].name) + "&" + encodeURIComponent("parameters[" + e + "].value") + "=" + encodeURIComponent(t[e].value);
                return n;
            }
        }, {
            key: "queueInstructionUrl",
            value: function(t, e, r) {
                t = this.baseUrl() + "/instr/add/" + encodeURIComponent(t) + "?nodeId=" + (r || this.nodeId);
                return Array.isArray(e) && 0 < e.length && (t += "&" + this.urlEncodeInstructionParameters(e)), 
                t;
            }
        }, {
            key: "queueInstructionsUrl",
            value: function(t, e, r) {
                t = this.baseUrl() + "/instr/add/" + encodeURIComponent(t) + "?nodeIds=" + (Array.isArray(r) && 0 < r.length ? r.join(",") : Array.isArray(this.nodeIds) ? this.nodeIds.join(",") : "");
                return Array.isArray(e) && 0 < e.length && (t += "&" + this.urlEncodeInstructionParameters(e)), 
                t;
            }
        } ], [ {
            key: "instructionParameter",
            value: function(t, e) {
                return {
                    name: t,
                    value: e
                };
            }
        } ]), e;
    }();
}, NodeInstructionUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$4(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(NodeInstructionUrlHelperMixin(UserUrlHelperMixin(NodeUrlHelperMixin(UrlHelper)))), instructionParameter = NodeInstructionUrlHelper.instructionParameter;

function _createSuper$3(r) {
    var n = _isNativeReflectConstruct$3();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$3() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var NodeMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$3(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "viewNodeMetadataUrl",
            value: function(t) {
                return this.baseUrl() + "/nodes/meta/" + (t || this.nodeId);
            }
        }, {
            key: "addNodeMetadataUrl",
            value: function(t) {
                return this.viewNodeMetadataUrl(t);
            }
        }, {
            key: "replaceNodeMetadataUrl",
            value: function(t) {
                return this.viewNodeMetadataUrl(t);
            }
        }, {
            key: "deleteNodeMetadataUrl",
            value: function(t) {
                return this.viewNodeMetadataUrl(t);
            }
        }, {
            key: "findNodeMetadataUrl",
            value: function(t, e, r) {
                var t = Array.isArray(t) ? t : t ? [ t ] : null !== t ? this.nodeIds : void 0, n = this.baseUrl() + "/nodes/meta", a = "";
                return Array.isArray(t) && (a += "nodeIds=" + t.join(",")), Array.isArray(e) && e.forEach(function(t, e) {
                    t instanceof SortDescriptor && (0 < a.length && (a += "&"), 
                    a += t.toUriEncoding(e));
                }), r instanceof Pagination && (0 < a.length && (a += "&"), a += r.toUriEncoding()), 
                0 < a.length && (n += "?" + a), n;
            }
        } ]), e;
    }();
}, NodeMetadataUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$3(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(NodeMetadataUrlHelperMixin(UserUrlHelperMixin(NodeUrlHelperMixin(UrlHelper))));

function _createSuper$2(r) {
    var n = _isNativeReflectConstruct$2();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$2() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var UserAuthTokenUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$2(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "listAllAuthTokensUrl",
            value: function() {
                return this.baseUrl() + "/user/auth-tokens";
            }
        }, {
            key: "generateAuthTokenUrl",
            value: function(t) {
                return this.baseUrl() + "/user/auth-tokens/generate/" + t.name;
            }
        }, {
            key: "authTokenUrl",
            value: function(t) {
                return this.baseUrl() + "/user/auth-tokens/" + encodeURIComponent(t);
            }
        }, {
            key: "deleteAuthTokenUrl",
            value: function(t) {
                return this.authTokenUrl(t);
            }
        }, {
            key: "updateAuthTokenSecurityPolicyUrl",
            value: function(t) {
                return this.authTokenUrl(t);
            }
        }, {
            key: "replaceAuthTokenSecurityPolicyUrl",
            value: function(t) {
                return this.authTokenUrl(t);
            }
        }, {
            key: "updateAuthTokenStatusUrl",
            value: function(t, e) {
                return this.authTokenUrl(t) + "?status=" + encodeURIComponent(e.name);
            }
        } ]), e;
    }();
}, UserAuthTokenUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$2(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(UserAuthTokenUrlHelperMixin(UserUrlHelperMixin(UrlHelper)));

function _createSuper$1(r) {
    var n = _isNativeReflectConstruct$1();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct$1() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var UserDatumAuxiliaryUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper$1(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "userDatumAuxiliaryBaseUrl",
            value: function() {
                return this.baseUrl() + "/datum/auxiliary";
            }
        }, {
            key: "listUserDatumAuxiliaryUrl",
            value: function(t) {
                var e = this.userDatumAuxiliaryBaseUrl();
                return t && 0 < (t = t.toUriEncoding()).length && (e += "?" + t), 
                e;
            }
        }, {
            key: "userDatumAuxiliaryIdUrl",
            value: function(t, e, r, n) {
                return n && 0 <= n.indexOf("/") ? this.userDatumAuxiliaryIdQueryUrl(t, e, r, n) : this.userDatumAuxiliaryBaseUrl() + ("/" + encodeURIComponent(t.name || t) + "/" + encodeURIComponent(e) + "/" + encodeURIComponent(timestampFormat(r)) + "/" + encodeURIComponent(n));
            }
        }, {
            key: "userDatumAuxiliaryIdQueryUrl",
            value: function(t, e, r, n) {
                var a = this.userDatumAuxiliaryBaseUrl(), t = new PropMap({
                    type: t,
                    nodeId: e,
                    date: timestampFormat(r),
                    sourceId: n
                }).toUriEncoding();
                return 0 < t.length && (a += "?" + t), a;
            }
        }, {
            key: "storeUserDatumAuxiliaryUrl",
            value: function(t, e, r, n) {
                return this.userDatumAuxiliaryIdUrl(t, e, r, n);
            }
        }, {
            key: "viewUserDatumAuxiliaryUrl",
            value: function(t, e, r, n) {
                return this.userDatumAuxiliaryIdUrl(t, e, r, n);
            }
        }, {
            key: "deleteUserDatumAuxiliaryUrl",
            value: function(t, e, r, n) {
                return this.userDatumAuxiliaryIdUrl(t, e, r, n);
            }
        } ]), e;
    }();
}, UserDatumAuxiliaryUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper$1(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(UserDatumAuxiliaryUrlHelperMixin(UserUrlHelperMixin(UrlHelper)));

function _createSuper(r) {
    var n = _isNativeReflectConstruct();
    return function() {
        var t, e = _getPrototypeOf(r);
        return t = n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), 
        _possibleConstructorReturn(this, t);
    };
}

function _isNativeReflectConstruct() {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
        !0;
    } catch (t) {
        return !1;
    }
}

var UserMetadataUrlHelperMixin = function(r) {
    return function() {
        _inherits(e, r);
        var t = _createSuper(e);
        function e() {
            return _classCallCheck(this, e), t.apply(this, arguments);
        }
        return _createClass(e, [ {
            key: "findUserMetadataUrl",
            value: function(t) {
                var e = this.baseUrl() + "/users/meta";
                return t && 0 < (t = t.toUriEncoding()).length && (e += "?" + t), 
                e;
            }
        }, {
            key: "userMetadataUrl",
            value: function(t) {
                var e = this.baseUrl() + "/users/meta", r = t || this.userId;
                return (r = Array.isArray(r) ? 0 < r.length ? r[0] : null : r) && null !== t && (e += "/" + r), 
                e;
            }
        }, {
            key: "viewUserMetadataUrl",
            value: function(t) {
                return this.userMetadataUrl(t);
            }
        }, {
            key: "addUserMetadataUrl",
            value: function(t) {
                return this.userMetadataUrl(t);
            }
        }, {
            key: "replaceUserMetadataUrl",
            value: function(t) {
                return this.userMetadataUrl(t);
            }
        }, {
            key: "deleteUserMetadataUrl",
            value: function(t) {
                return this.userMetadataUrl(t);
            }
        } ]), e;
    }();
}, UserMetadataUrlHelper = function(t) {
    _inherits(r, t);
    var e = _createSuper(r);
    function r() {
        return _classCallCheck(this, r), e.apply(this, arguments);
    }
    return _createClass(r);
}(UserMetadataUrlHelperMixin(UserUrlHelperMixin(UrlHelper))), logLevel = 2;

function consoleLog(t) {
    if (!(logLevel < t) && console) {
        var e;
        switch (t) {
          case 1:
            e = console.error;
            break;

          case 2:
            e = console.warn;
            break;

          case 3:
            e = console.info;
        }
        if (e = e || console.log) {
            for (var r = arguments.length, n = new Array(1 < r ? r - 1 : 0), a = 1; a < r; a++) n[a - 1] = arguments[a];
            e.apply(void 0, n);
        }
    }
}

var logLevels = Object.freeze({
    DEBUG: 4,
    INFO: 3,
    WARN: 2,
    ERROR: 1,
    OFF: 0
}), Logger = function() {
    function t() {
        _classCallCheck(this, t);
    }
    return _createClass(t, null, [ {
        key: "debug",
        value: function() {
            for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
            consoleLog.apply(void 0, [ 4 ].concat(e));
        }
    }, {
        key: "info",
        value: function() {
            for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
            consoleLog.apply(void 0, [ 3 ].concat(e));
        }
    }, {
        key: "warn",
        value: function() {
            for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
            consoleLog.apply(void 0, [ 2 ].concat(e));
        }
    }, {
        key: "error",
        value: function() {
            for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
            consoleLog.apply(void 0, [ 1 ].concat(e));
        }
    } ]), t;
}();

function datumForStreamData(t, e) {
    return "string" == typeof t && (t = JSON.parse(t)), !Array.isArray(t) || t.length < 2 ? null : (Array.isArray(t[1]) ? AggregateDatum : Datum).fromJsonObject(t, e);
}

function streamDatumForData(t, e) {
    return "string" == typeof t && (t = JSON.parse(t)), !Array.isArray(t) || t.length < 2 ? null : (Array.isArray(t[1]) ? StreamAggregateDatum : StreamDatum).fromJsonObject(t, e);
}

Object.defineProperties(Logger, {
    level: {
        get: function() {
            return logLevel;
        },
        set: function(t) {
            logLevel = "number" == typeof t ? t : 0;
        }
    }
});

var streamDatumUtils = Object.freeze({
    datumForStreamData: datumForStreamData,
    streamDatumForData: streamDatumForData
});

export {
    AggregateDatum,
    Aggregation,
    Aggregations,
    AuthTokenStatus,
    AuthTokenStatuses,
    AuthTokenType,
    AuthTokenTypes,
    AuthTokenUrlHelperMixin,
    AuthorizationV2Builder,
    BitmaskEnum,
    CombiningType,
    CombiningTypes,
    ComparableEnum,
    Configuration,
    Datum,
    DatumAuxiliaryType,
    DatumAuxiliaryTypes,
    DatumFilter,
    datumFilter as DatumFilterKeys,
    DatumReadingType,
    DatumReadingTypes,
    DatumSamplesType,
    DatumSamplesTypes,
    DatumStreamMetadata,
    DatumStreamMetadataRegistry,
    DatumStreamType,
    DatumStreamTypes,
    DeviceOperatingState,
    DeviceOperatingStates,
    Enum,
    Environment,
    GeneralMetadata,
    HttpContentType,
    HttpHeaders,
    HttpMethod,
    InstructionState,
    InstructionStates,
    KeyedEnum,
    Location,
    LocationDatumMetadataUrlHelper,
    LocationDatumMetadataUrlHelperMixin,
    LocationDatumUrlHelper,
    LocationDatumUrlHelperMixin,
    datumFilter as LocationKeys,
    LocationPrecision,
    LocationPrecisions,
    LocationUrlHelperMixin,
    Logger,
    MultiMap,
    NodeDatumMetadataUrlHelper,
    NodeDatumMetadataUrlHelperMixin,
    NodeDatumUrlHelper,
    NodeDatumUrlHelperMixin,
    NodeInstructionUrlHelper,
    NodeInstructionUrlHelperMixin,
    NodeMetadataUrlHelper,
    NodeMetadataUrlHelperMixin,
    NodeUrlHelperMixin,
    Pagination,
    PropMap,
    QueryUrlHelperMixin,
    SecurityPolicy,
    SecurityPolicyBuilder,
    SkyCondition,
    SkyConditions,
    SolarQueryApiPathV1,
    SolarQueryDefaultPath,
    SolarQueryPathKey,
    SolarQueryPublicPathKey,
    SolarUserApiPathV1,
    SolarUserDefaultPath,
    SolarUserPathKey,
    SortDescriptor,
    StreamAggregateDatum,
    StreamDatum,
    StreamDatumMetadataMixin,
    UrlHelper,
    UserAuthTokenUrlHelper,
    UserAuthTokenUrlHelperMixin,
    UserDatumAuxiliaryUrlHelper,
    UserDatumAuxiliaryUrlHelperMixin,
    UserMetadataFilter,
    userMetadataFilter as UserMetadataFilterKeys,
    UserMetadataUrlHelper,
    UserMetadataUrlHelperMixin,
    UserUrlHelperMixin,
    array as arrayData,
    dateFormat,
    dateParser,
    dateTimeFormat,
    dateTimeParse,
    dateTimeUrlFormat,
    date as dateUtils,
    datumForStreamData,
    displayScaleForValue,
    displayUnitsForScale,
    instructionParameter,
    iso8601Date,
    localDateTimeUrlFormat,
    logLevels,
    nest as nestData,
    objectToStringMap,
    seasonForDate,
    streamDatumForData,
    streamDatumUtils,
    stringMapToObject,
    timestampFormat,
    timestampParse,
    urlQuery
};