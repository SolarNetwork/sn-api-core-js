{"version":3,"file":"solarnetwork-api-core.es.js","sources":["../src/data/array.js","../src/util/enum.js","../src/util/comparableEnum.js","../src/domain/aggregation.js","../src/format/date.js","../src/util/date.js","../src/data/nest.js","../src/domain/authTokenStatus.js","../src/domain/authTokenType.js","../src/domain/combiningType.js","../src/domain/datumAuxiliaryType.js","../src/domain/pagination.js","../src/domain/sortDescriptor.js","../src/util/propMap.js","../src/domain/location.js","../src/domain/datumFilter.js","../src/util/keyedEnum.js","../src/domain/datumReadingType.js","../src/domain/datumSamplesType.js","../src/domain/datumStreamType.js","../src/domain/datumStreamMetadata.js","../src/util/bitmaskEnum.js","../src/domain/deviceOperatingState.js","../src/domain/generalMetadata.js","../src/domain/instructionState.js","../src/domain/locationPrecision.js","../src/domain/securityPolicy.js","../src/domain/skyCondition.js","../src/util/datumStreamMetadataRegistry.js","../src/domain/streamAggregateDatum.js","../src/domain/streamDatum.js","../src/domain/streamDatumMetadataMixin.js","../src/domain/userMetadataFilter.js","../src/format/scale.js","../src/net/authTokenUrlHelperMixin.js","../src/util/multiMap.js","../src/util/configuration.js","../src/net/environment.js","../src/net/httpHeaders.js","../src/net/urlQuery.js","../src/net/authV2.js","../src/net/urlHelper.js","../src/net/locationUrlHelperMixin.js","../src/net/queryUrlHelperMixin.js","../src/net/locationDatumMetadataUrlHelperMixin.js","../src/net/locationDatumUrlHelperMixin.js","../src/net/nodeUrlHelperMixin.js","../src/net/nodeDatumMetadataUrlHelperMixin.js","../src/net/nodeDatumUrlHelperMixin.js","../src/net/userUrlHelperMixin.js","../src/net/nodeInstructionUrlHelperMixin.js","../src/net/nodeMetadataUrlHelperMixin.js","../src/net/userAuthTokenUrlHelperMixin.js","../src/net/userDatumAuxiliaryUrlHelperMixin.js","../src/net/userMetadataUrlHelperMixin.js","../src/util/logger.js","../src/util/streamDatumUtils.js"],"sourcesContent":["/**\n * Normalize a data array of time series data based on an aggregate time step.\n *\n * This method is useful for \"filling in\" gaps of data in situations where something expects\n * the data include placeholders for the gaps. Charting applications often expect this, for\n * example.\n *\n * Each element in the `data` array is expected to provide a `date` property that is a `Date`\n * object. When gaps are discovered in the array, \"filler\" objects will be inserted with\n * an approprate `date` value and all other properties copied from the previous element but\n * set to `null`.\n *\n * Here's an example where a new element is added to an array to fill in a missing time slot:\n *\n * ```\n * const queryData = [\n *     {date : new Date('2018-05-05T11:00Z'), Generation : 357, Consumption: 345},\n *     {date : new Date('2018-05-05T12:00Z'), Generation : 1023, Consumption: 678}\n * ]\n *\n * timeNormalizeDataArray(queryData, Aggregations.ThirtyMinute);\n * ```\n *\n * Then `queryData` would look like this:\n *\n * ```\n * [\n *     {date : new Date('2018-05-05T11:00Z'), Generation : 357, Consumption: 345},\n *     {date : new Date('2018-05-05T11:30Z'), Generation : null, Consumption: null},\n *     {date : new Date('2018-05-05T12:00Z'), Generation : 1023, Consumption: 678}\n * ]\n * ```\n *\n * @param {object[]} data the raw data returned from SolarNetwork; this array is modified in-place\n * @param {module:domain~Aggregation} aggregate the expected aggregate level of the data\n * @returns {void}\n * @alias module:data~timeNormalizeDataArray\n */\nexport function timeNormalizeDataArray(data, aggregate) {\n\tconst aggMillseconds = aggregate.level * 1000;\n\tif (!Array.isArray(data) || data.length < 2) {\n\t\treturn data;\n\t}\n\tvar i = 0;\n\twhile (i < data.length - 1) {\n\t\tconst d = data[i];\n\t\tconst currTime = d.date.getTime();\n\t\tconst expectedNextTime = currTime + aggMillseconds;\n\t\tlet nextTime = data[i + 1].date.getTime();\n\t\tif (nextTime > expectedNextTime) {\n\t\t\tlet fill = [i + 1, 0];\n\t\t\tfor (\n\t\t\t\tlet fillTime = currTime + aggMillseconds;\n\t\t\t\tfillTime < nextTime;\n\t\t\t\tfillTime += aggMillseconds\n\t\t\t) {\n\t\t\t\tlet f = Object.create(\n\t\t\t\t\tObject.getPrototypeOf(d),\n\t\t\t\t\tObject.getOwnPropertyDescriptors(d)\n\t\t\t\t);\n\t\t\t\tfor (let p in f) {\n\t\t\t\t\tf[p] = null;\n\t\t\t\t}\n\t\t\t\tf.date = new Date(fillTime);\n\t\t\t\tfill.push(f);\n\t\t\t}\n\t\t\tArray.prototype.splice.apply(data, fill);\n\t\t\ti += fill.length;\n\t\t}\n\t\ti += 1;\n\t}\n}\n\nexport default Object.freeze({\n\ttimeNormalizeDataArray: timeNormalizeDataArray,\n});\n","/**\n * An enumerated object base class.\n *\n * This class is essentially abstract, and must be extended by another\n * class that overrides the {@link module:util~Enum.enumValues} method.\n *\n * @abstract\n * @alias module:util~Enum\n */\nclass Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t */\n\tconstructor(name) {\n\t\tthis._name = name;\n\t\tif (this.constructor === Enum) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the enum name.\n\t *\n\t * @returns {string} the  name\n\t */\n\tget name() {\n\t\treturn this._name;\n\t}\n\n\t/**\n\t * Test if a string is equal to this enum's name.\n\t *\n\t * As long as enum values are consistently obtained from the {@link module:util~Enum.enumValues}\n\t * array then enum instances can be compared with `===`. If unsure, this method can be used\n\t * to compare string values instead.\n\t *\n\t * If `value` is passed as an actual Enum instance, then if that enum is the same class\n\t * as this enum it's `name` is compared to this instance's `name`.\n\t *\n\t * @param {string|Enum} value the value to test\n\t * @returns {boolean} `true` if `value` is the same as this instance's `name` value\n\t */\n\tequals(value) {\n\t\tif (this.constructor === value.constructor) {\n\t\t\treturn value.name === this.name;\n\t\t}\n\t\treturn value === this.name;\n\t}\n\n\t/**\n\t * Get all enum values.\n\t *\n\t * This method must be overridden by subclasses to return something meaningful.\n\t * This implementation returns an empty array.\n\t *\n\t * @abstract\n\t * @returns {module:util~Enum[]} get all enum values\n\t */\n\tstatic enumValues() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * This method takes an array of enums and turns them into a mapped object, using the enum\n\t * `name` as object property names.\n\t *\n\t * @param {module:util~Enum[]} enums the enum list to turn into a value object\n\t * @returns {object} an object with enum `name` properties with associated enum values\n\t */\n\tstatic enumsValue(enums) {\n\t\treturn Object.freeze(\n\t\t\tenums.reduce((obj, e) => {\n\t\t\t\tobj[e.name] = e;\n\t\t\t\treturn obj;\n\t\t\t}, {})\n\t\t);\n\t}\n\n\t/**\n\t * Get an enum instance from its name.\n\t *\n\t * This method searches the {@link module:util~Enum#enumVvalues} array for a matching value.\n\t *\n\t * @param {string} name the enum name to get an instnace for\n\t * @returns {module:util~Enum} the instance, or `undefined` if no instance exists for the given `name`\n\t */\n\tstatic valueOf(name) {\n\t\tconst enums = this.enumValues();\n\t\tif (!Array.isArray(enums)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (let i = 0, len = enums.length; i < len; i += 1) {\n\t\t\tif (name === enums[i].name) {\n\t\t\t\treturn enums[i];\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Get the names of a set of `Enum` instances.\n\t * @param {Enum[]} set the set of `Enum` instances to get the names of\n\t * @returns {string[]} array of `Enum` name values\n\t */\n\tstatic namesFor(set) {\n\t\tconst result = [];\n\t\tif (set) {\n\t\t\tfor (const e of set) {\n\t\t\t\tresult.push(e.name);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport default Enum;\n","import Enum from \"./enum.js\";\n\n/**\n * An immutable enum-like object with an associated comparable value.\n *\n * This class is essentially abstract, and must be extended by another\n * class that overrides the inerited {@link module:util~Enum.enumValues} method.\n *\n * @abstract\n * @extends module:util~Enum\n * @alias module:util~ComparableEnum\n */\nclass ComparableEnum extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t * @param {number} value the comparable value\n\t */\n\tconstructor(name, value) {\n\t\tsuper(name);\n\t\tthis._value = value;\n\t\tif (this.constructor === ComparableEnum) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the comparable value.\n\t *\n\t * @returns {number} the value\n\t */\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * Compare two ComparableEnum objects based on their `value` values.\n\t *\n\t * @param {ComparableEnum} other the object to compare to\n\t * @returns {number} `-1` if `this.value` is less than `other.value`,\n\t *                   `1` if `this.value` is greater than `other.value`,\n\t *                   `0` otherwise (when the values are equal)\n\t */\n\tcompareTo(other) {\n\t\treturn this.value < other.value ? -1 : this.value > other.value ? 1 : 0;\n\t}\n\n\t/**\n\t * Compute a complete set of enum values based on a minimum enum and/or set of enums.\n\t *\n\t * If `cache` is provided, then results computed via `minAggregation`\n\t * will be cached there, and subsequent calls will returned the cached result when appropriate.\n\t *\n\t * @param {ComparableEnum} [minEnum] a minimum enum value\n\t * @param {Map<string, Set<ComparableEnum>>} [cache] a cache of computed values\n\t * @returns {Set<ComparableEnum>|null} the computed set, or `null` if no values match\n\t */\n\tstatic minimumEnumSet(minEnum, cache) {\n\t\tif (!minEnum) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result = cache ? cache.get(minEnum.name) : undefined;\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tresult = new Set();\n\t\tfor (const agg of minEnum.constructor.enumValues()) {\n\t\t\tif (agg.compareTo(minEnum) > -1) {\n\t\t\t\tresult.add(agg);\n\t\t\t}\n\t\t}\n\t\tif (cache) {\n\t\t\tcache.set(minEnum.name, result);\n\t\t}\n\t\treturn result.size > 0 ? result : null;\n\t}\n}\n\nexport default ComparableEnum;\n","import ComparableEnum from \"../util/comparableEnum.js\";\n\n/**\n * A named aggregation.\n *\n * @extends module:util~ComparableEnum\n * @alias module:domain~Aggregation\n */\nclass Aggregation extends ComparableEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this precision\n\t * @param {number} level a relative aggregation level value\n\t */\n\tconstructor(name, level) {\n\t\tsuper(name, level);\n\t\tif (this.constructor === Aggregation) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the aggregate level value.\n\t *\n\t * This is an alias for {@link module:util~ComparableEnum#value}.\n\t */\n\tget level() {\n\t\treturn this.value;\n\t}\n\n\t/**\n\t * Get the {@link module:domain~Aggregations} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn AggregationValues;\n\t}\n}\n\nconst AggregationValues = Object.freeze([\n\tnew Aggregation(\"Minute\", 60),\n\tnew Aggregation(\"FiveMinute\", 60 * 5),\n\tnew Aggregation(\"TenMinute\", 60 * 10),\n\tnew Aggregation(\"FifteenMinute\", 60 * 15),\n\tnew Aggregation(\"ThirtyMinute\", 60 * 30),\n\tnew Aggregation(\"Hour\", 3600),\n\tnew Aggregation(\"HourOfDay\", 3600),\n\tnew Aggregation(\"SeasonalHourOfDay\", 3600),\n\tnew Aggregation(\"Day\", 86400),\n\tnew Aggregation(\"DayOfWeek\", 86400),\n\tnew Aggregation(\"SeasonalDayOfWeek\", 86400),\n\tnew Aggregation(\"Week\", 604800),\n\tnew Aggregation(\"WeekOfYear\", 604800),\n\tnew Aggregation(\"Month\", 2419200),\n\tnew Aggregation(\"Year\", 31536000),\n\tnew Aggregation(\"RunningTotal\", Number.MAX_SAFE_INTEGER),\n]);\n\n/**\n * The enumeration of supported Aggregation values.\n *\n * @readonly\n * @enum {module:domain~Aggregation}\n * @property {module:domain~Aggregation} Minute minute\n * @property {module:domain~Aggregation} FiveMinute 5 minutes\n * @property {module:domain~Aggregation} TenMinute 10 minutes\n * @property {module:domain~Aggregation} FifeteenMinute 15 minutes\n * @property {module:domain~Aggregation} ThirtyMinute 30 minutes\n * @property {module:domain~Aggregation} Hour an hour\n * @property {module:domain~Aggregation} HourOfDay an hour of a day, e.g. 1-24\n * @property {module:domain~Aggregation} SeasonalHourOfDay an hour of a day, further grouped into 4 seasons\n * @property {module:domain~Aggregation} Day a day\n * @property {module:domain~Aggregation} DayOfWeek a day of the week, e.g. Monday - Sunday\n * @property {module:domain~Aggregation} SeasonalDayOfWeek a day of the week, further grouped into 4 seasons\n * @property {module:domain~Aggregation} Week a week\n * @property {module:domain~Aggregation} WeekOfYear the week within a year, e.g. 1 - 52\n * @property {module:domain~Aggregation} Month a month\n * @property {module:domain~Aggregation} Year a year\n * @property {module:domain~Aggregation} RunningTotal a complete running total over a time span\n * @alias module:domain~Aggregations\n */\nconst Aggregations = Aggregation.enumsValue(AggregationValues);\n\nexport default Aggregations;\nexport { Aggregation };\n","import { timeFormat as format, utcFormat, utcParse, isoParse } from \"d3-time-format\";\n\n/**\n * Format a date into a SolarNet UTC timestamp format.\n * @function\n * @param {Date} date the date to format\n * @returns {string} the formatted date value - `yyyy-MM-dd HH:mm:ss.SSS'Z'`\n * @alias module:format~timestampFormat\n */\nexport const timestampFormat = utcFormat(\"%Y-%m-%d %H:%M:%S.%LZ\");\n\n/**\n * Format a date into a SolarNet UTC date/time format.\n * @function\n * @param {Date} date the date to format\n * @returns {string} the formatted date value - `yyyy-MM-dd HH:mm`\n * @alias module:format~dateTimeFormat\n */\nexport const dateTimeFormat = utcFormat(\"%Y-%m-%d %H:%M\");\n\n/**\n * Format a date into a SolarNet URL UTC date/time format.\n * @function\n * @param {Date} date the date to format\n * @returns {string} the formatted date value - `yyyy-MM-dd'T'HH:mm`\n * @alias module:format~dateTimeUrlFormat\n */\nexport const dateTimeUrlFormat = utcFormat(\"%Y-%m-%dT%H:%M\");\n\n/**\n * Format a date into a SolarNet URL local date/time format.\n * @function\n * @param {Date} date the date to format\n * @returns {string} the formatted date value - `yyyy-MM-dd'T'HH:mm`\n * @alias module:format~localDateTimeUrlFormat\n */\nexport const localDateTimeUrlFormat = format(\"%Y-%m-%dT%H:%M\");\n\n/**\n * Format a date into a SolarNet UTC date format.\n * @function\n * @param {Date} date the date to format\n * @returns {string} the formatted date value - `yyyy-MM-dd`\n * @alias module:format~dateFormat\n */\nexport const dateFormat = utcFormat(\"%Y-%m-%d\");\n\n/**\n * Parse a SolarNet UTC timestamp value.\n * @function\n * @param {string} str the string to parse - `yyyy-MM-dd HH:mm:ss.SSS'Z'\n * @returns {Date} the parsed date, or `null`\n * @alias module:format~timestampParse\n */\nexport const timestampParse = utcParse(\"%Y-%m-%d %H:%M:%S.%LZ\");\n\n/**\n * Parse a SolarNet UTC date/time.\n * @function\n * @param {string} str the string to parse - `yyyy-MM-dd HH:mm\n * @returns {Date} the parsed date, or `null`\n * @alias module:format~dateTimeParse\n */\nexport const dateTimeParse = utcParse(\"%Y-%m-%d %H:%M\");\n\nexport {\n\t/**\n\t * Parse a SolarNet URL UTC date/time value.\n\t * @function\n\t * @param {string} str the string to parse - `yyyy-MM-dd'T'HH:mm`\n\t * @returns {Date} the parsed date, or `null`\n\t * @alias module:format~dateTimeUrlParse\n\t */\n\tisoParse as dateTimeUrlParse,\n\t/**\n\t * Parse a SolarNet UTC date value.\n\t * @function\n\t * @param {string} str the string to parse - `yyyy-MM-dd`\n\t * @returns {Date} the parsed date, or `null`\n\t * @alias module:format~dateParse\n\t */\n\tisoParse as dateParse,\n} from \"d3-time-format\";\n\n/**\n * Parse a UTC date string, from a variety of supported formats.\n *\n * @param {String} str the string to parse into a date\n * @returns {Date} the parsed `Date`, or `null` if the date can't be parsed\n * @alias module:format~dateParser\n */\nexport function dateParser(str) {\n\tvar date = isoParse(str) || timestampParse(str) || dateTimeParse(str);\n\treturn date;\n}\n\n/**\n * Format a date into an ISO 8601 timestamp or date string, in the UTC time zone.\n *\n * @param {Date} date the date to format\n * @param {boolean} [includeTime=false] `true` to format as a timestamp, `false` as just a date\n * @returns {string} the formatted date string\n * @alias module:format~iso8601Date\n */\nexport function iso8601Date(date, includeTime) {\n\treturn (\n\t\t\"\" +\n\t\tdate.getUTCFullYear() +\n\t\t(date.getUTCMonth() < 9 ? \"0\" : \"\") +\n\t\t(date.getUTCMonth() + 1) +\n\t\t(date.getUTCDate() < 10 ? \"0\" : \"\") +\n\t\tdate.getUTCDate() +\n\t\t(includeTime\n\t\t\t? \"T\" +\n\t\t\t  (date.getUTCHours() < 10 ? \"0\" : \"\") +\n\t\t\t  date.getUTCHours() +\n\t\t\t  (date.getUTCMinutes() < 10 ? \"0\" : \"\") +\n\t\t\t  date.getUTCMinutes() +\n\t\t\t  (date.getUTCSeconds() < 10 ? \"0\" : \"\") +\n\t\t\t  date.getUTCSeconds() +\n\t\t\t  \"Z\"\n\t\t\t: \"\")\n\t);\n}\n\n/**\n * Get a UTC season constant for a date. Seasons are groups of 3 months, e.g.\n * Spring, Summer, Autumn, Winter.\n *\n * The returned value will be a number between 0 and 3, where:\n *\n *  * (Mar, Apr, May) = `0`\n *  * (Jun, Jul, Aug) = `1`\n *  * (Sep, Oct, Nov) = `2`\n *  * (Dec, Jan, Feb) = `3`\n *\n * @param {Date|number} date either a date to get the season for, or a number representing the UTC month of a date\n * @returns {number} a season constant number, from 0 - 3\n * @alias module:format~seasonForDate\n */\nexport function seasonForDate(date) {\n\tconst m = date.getUTCMonth ? date.getUTCMonth() : Number(date);\n\tif (m < 2 || m === 11) {\n\t\treturn 3;\n\t} else if (m < 5) {\n\t\treturn 0;\n\t} else if (m < 8) {\n\t\treturn 1;\n\t} else {\n\t\treturn 2;\n\t}\n}\n","import { utcMinute, utcHour, utcDay, utcMonth, utcYear } from \"d3-time\";\nimport Aggregations from \"../domain/aggregation.js\";\nimport { dateTimeParse, dateTimeUrlParse, timestampParse } from \"../format/date.js\";\n\n/**\n * An object that defines levels of date range configuration.\n *\n * @typedef {Object} module:util~DateRangeConfiguration\n * @property {number} [numHours] the number of hours to use\n * @property {number} [numDays] the number of days to use\n * @property {number} [numMonths] the number of months to use\n * @property {number} [numYears] the number of years to use\n */\n\n/**\n * An object that defines a date range.\n *\n * @typedef {Object} module:util~DateRange\n * @property {Date} start the starting date\n * @property {Date} end the ending date\n * @property {module:domain~Aggregation} timeUnit the time unit used by the date range\n * @property {number} timeCount the number of time units in the date range\n * @property {module:domain~Aggregation} aggregate the aggregate to query with\n */\n\n/**\n * Get a query range appropriate for a given aggregate level.\n *\n * Returns an object with `start` and `end` Date properties, using the given `endDate`\n * parameter as the basis for calculating the start as an offset backwards in time\n * based on the given `aggregate` level.\n *\n * When `aggregateTimeCount` will be treated as a \"next higher\" aggregate level from\n * `aggregate`, like this:\n *\n *  * < `Hour`: `numHours`\n *  * `Hour` : `numDays`\n *  * `Day` : `numMonths`\n *  * `Month` : `numYears`\n *\n * For example, you might like to render a chart using `TenMinute` aggregate data for the\n * last 24 hours. You'd call this function like this:\n *\n * ```\n * const range = rollingQueryDateRange(Aggregates.TenMinute, 24);\n *\n * // or, passing a DateRangeConfiguration\n * const range = rollingQueryDateRange(Aggregates.TenMinute, {numHours:24});\n * ```\n *\n * @param {module:domain~Aggregation} aggregate the aggregate level to get a query range for\n * @param {number|module:util~DateRangeConfiguration} aggregateTimeCount the number of aggregate time units to use\n * @param {Date} [endDate] the ending date; if not provided the current date will be used\n * @returns {module:util~DateRange} the calculated date range\n * @alias module:util~rollingQueryDateRange\n */\nexport function rollingQueryDateRange(aggregate, aggregateTimeCount, endDate) {\n\tendDate = endDate || new Date();\n\n\tfunction exclusiveEndDate(interval, date) {\n\t\tvar result = interval.ceil(date);\n\t\tif (result.getTime() === date.getTime()) {\n\t\t\t// already on exact aggregate, so round up to next\n\t\t\tresult = interval.offset(result, 1);\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction timeCountValue(propName) {\n\t\tvar result;\n\t\tif (isNaN(Number(aggregateTimeCount))) {\n\t\t\tif (aggregateTimeCount[propName] !== undefined) {\n\t\t\t\tresult = Number(aggregateTimeCount[propName]);\n\t\t\t} else {\n\t\t\t\tresult = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tresult = aggregateTimeCount;\n\t\t}\n\t\tif (typeof result !== \"number\") {\n\t\t\tresult = 1;\n\t\t}\n\t\treturn result;\n\t}\n\n\tvar end, start, timeUnit, timeCount;\n\n\tif (aggregate.compareTo(Aggregations.Hour) < 0) {\n\t\ttimeCount = timeCountValue(\"numHours\");\n\t\ttimeUnit = Aggregations.Hour;\n\t\tend = exclusiveEndDate(utcMinute, endDate);\n\t\tlet precision = Math.min(30, aggregate.level / 60);\n\t\tend.setUTCMinutes(\n\t\t\tend.getUTCMinutes() + precision - (end.getUTCMinutes() % precision),\n\t\t\t0,\n\t\t\t0\n\t\t);\n\t\tstart = utcHour.offset(end, -timeCount);\n\t} else if (Aggregations.Month.equals(aggregate)) {\n\t\ttimeCount = timeCountValue(\"numYears\");\n\t\ttimeUnit = Aggregations.Year;\n\t\tend = exclusiveEndDate(utcMonth, endDate);\n\t\tstart = utcYear.offset(utcMonth.floor(endDate), -timeCount);\n\t} else if (Aggregations.Day.equals(aggregate)) {\n\t\ttimeCount = timeCountValue(\"numMonths\");\n\t\ttimeUnit = Aggregations.Month;\n\t\tend = exclusiveEndDate(utcDay, endDate);\n\t\tstart = utcMonth.offset(utcDay.floor(endDate), -timeCount);\n\t} else {\n\t\t// assume Hour\n\t\ttimeCount = timeCountValue(\"numDays\");\n\t\ttimeUnit = Aggregations.Day;\n\t\tend = exclusiveEndDate(utcHour, endDate);\n\t\tstart = utcDay.offset(utcHour.floor(end), -timeCount);\n\t}\n\treturn {\n\t\tstart: start,\n\t\tend: end,\n\t\ttimeUnit: timeUnit,\n\t\ttimeCount: timeCount,\n\t\taggregate: aggregate,\n\t};\n}\n\n/**\n * Get a date associated with a \"datum\" style object.\n *\n * This function will return a `Date` instance found via a property on `d` according to these rules:\n *\n *  1. `date` - assumed to be a `Date` object already and returned directly\n *  2. `localDate` - a string in `yyyy-MM-dd` form, optionally with a string\n *     `localTime` property for an associated time in `HH:mm` form, treated as UTC\n *  3. `created` - a string in `yyyy-MM-dd HH:mm:ss.SSS'Z'` or `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'` form\n *\n * These properties are commonly returned in results from the SolarNetwork API, and thus\n * this method is a handy way to get the dates for those objects.\n *\n * **Note** that the `localDate` and `localTime` values are parsed as UTC. When formatted the\n * date for display they should be formatted in UTC as well to preserve the expected value.\n *\n * @param {Object} d the datum object to extract a date from\n * @returns {Date} the extracted date, or `null` if no date could be extracted\n * @alias module:util~datumDate\n */\nexport function datumDate(d) {\n\tif (!d) {\n\t\treturn null;\n\t}\n\tif (d.date) {\n\t\treturn d.date;\n\t} else if (d.localDate) {\n\t\treturn dateTimeParse(d.localDate + (d.localTime ? \" \" + d.localTime : \" 00:00\"));\n\t} else if (d.created) {\n\t\treturn timestampParse(d.created) || dateTimeUrlParse(d.created);\n\t}\n}\n\nexport default Object.freeze({\n\tdatumDate: datumDate,\n\trollingQueryDateRange: rollingQueryDateRange,\n});\n","import { ascending, max, sum } from \"d3-array\";\nimport { nest } from \"d3-collection\";\n\nimport { datumDate } from \"../util/date.js\";\n\n/**\n * A callback function that operates on a nested data layer datum object.\n *\n * @callback module:data~NestedDataOperatorFunction\n * @param {object} datum the datum object being operated on\n * @param {string} key the layer key the datum object is a member of\n * @param {object} [prevDatum] the previous datum object in the layer, if available\n * @returns {void}\n */\n\n/**\n * Normalize the data arrays resulting from a `d3.nest` operation so that all group\n * value arrays have the same number of elements, based on a Date property named\n * `date`.\n *\n * The data values are assumed to be sorted by `date` already, and are modified in-place.\n * This makes the data suitable to passing to `d3.stack`, which expects all stack data\n * arrays to have the same number of values, for the same keys. When querying for data\n * in SolarNetwork there might be gaps in the results, so this function can be used to\n * \"fill in\" those gaps with \"dummy\" values so that there are no more gaps.\n *\n * Filled-in data objects are automatically populated with an appropriate `date` property\n * and a `sourceId` property taken from the `key` of the layer the gap if found in. You\n * can pass a `fillTemplate` object with static properties to also include on all filled-in\n * data objects. You can also pass a `fillFn` function to populate the filled-in objects\n * with dynamic data.\n *\n * For example, given:\n *\n * ```\n * const layerData = [\n *   { key : 'A', values : [{date : new Date('2011-12-02 12:00')}, {date : new Date('2011-12-02 12:10')}] },\n *   { key : 'B', values : [{date : new Date('2011-12-02 12:00')}] }\n * ];\n *\n * normalizeNestedStackDataByDate(layerData);\n * ```\n *\n * The `layerData` would be modified in-place and look like this (notice the filled in second data value in the **B** group):\n *\n * ```\n * [\n *   { key : 'A', values : [{date : new Date('2011-12-02 12:00')}, {date : new Date('2011-12-02 12:10')}] },\n *   { key : 'B', values : [{date : new Date('2011-12-02 12:00')}, {date : new Date('2011-12-02 12:10'), sourceId : 'B'}] }\n * ]\n * ```\n *\n * @param {object[]} layerData - An array of objects with `key` and `values` properties, as returned from `d3.nest().entries()`\n * @param {string} layerData.key - The layer's key value.\n * @param {object[]} layerData.values - The layer's value array.\n * @param {object} [fillTemplate] - An object to use as a template for any filled-in data objects.\n *                                  The `date` property will be populated automatically, and a `sourceId`\n *                                  property will be populated by the layer's `key`.\n * @param {module:data~NestedDataOperatorFunction} [fillFn] - An optional function to populate filled-in data objects with.\n *                                                            This function is invoked **after** populating any `fillTemplate` values.\n * @returns {void}\n * @alias module:data~normalizeNestedStackDataByDate\n */\nexport function normalizeNestedStackDataByDate(layerData, fillTemplate, fillFn) {\n\tvar i = 0,\n\t\tj,\n\t\tk,\n\t\tjMax = layerData.length - 1,\n\t\tdummy,\n\t\tprop,\n\t\tcopyIndex;\n\t// fill in \"holes\" for each stack, if more than one stack. we assume data already sorted by date\n\tif (jMax > 0) {\n\t\twhile (\n\t\t\ti <\n\t\t\tmax(\n\t\t\t\tlayerData.map(function (e) {\n\t\t\t\t\treturn e.values.length;\n\t\t\t\t}),\n\t\t\t)\n\t\t) {\n\t\t\tdummy = undefined;\n\t\t\tfor (j = 0; j <= jMax; j++) {\n\t\t\t\tif (layerData[j].values.length <= i) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (j < jMax) {\n\t\t\t\t\tk = j + 1;\n\t\t\t\t} else {\n\t\t\t\t\tk = 0;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tlayerData[k].values.length <= i ||\n\t\t\t\t\tlayerData[j].values[i].date.getTime() < layerData[k].values[i].date.getTime()\n\t\t\t\t) {\n\t\t\t\t\tdummy = { date: layerData[j].values[i].date, sourceId: layerData[k].key };\n\t\t\t\t\tif (fillTemplate) {\n\t\t\t\t\t\tfor (prop in fillTemplate) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(fillTemplate, prop)) {\n\t\t\t\t\t\t\t\tdummy[prop] = fillTemplate[prop];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillFn) {\n\t\t\t\t\t\tcopyIndex = layerData[k].values.length > i ? i : i > 0 ? i - 1 : null;\n\t\t\t\t\t\tfillFn(\n\t\t\t\t\t\t\tdummy,\n\t\t\t\t\t\t\tlayerData[k].key,\n\t\t\t\t\t\t\tcopyIndex !== null ? layerData[k].values[copyIndex] : undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tlayerData[k].values.splice(i, 0, dummy);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dummy === undefined) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Combine the layers resulting from a `d3.nest` operation into a single, aggregated\n * layer.\n *\n * This can be used to combine all sources of a single data type, for example\n * to show all \"power\" sources as a single layer of chart data. The resulting object\n * has the same structure as the input `layerData` parameter, with just a\n * single layer of data.\n *\n * For example:\n *\n * ```\n * const layerData = [\n *   { key : 'A', values : [{watts : 123, foo : 1}, {watts : 234, foo : 2}] },\n *   { key : 'B', values : [{watts : 345, foo : 3}, {watts : 456, foo : 4}] }\n * ];\n *\n * const result = aggregateNestedDataLayers(layerData,\n *     'A and B', ['foo'], ['watts'], {'combined' : true});\n * ```\n *\n * Then `result` would look like this:\n *\n * ```\n * [\n *   { key : 'A and B', values : [{watts : 468, foo : 1, combined : true},\n *                                {watts : 690, foo : 2, combined : true}] }\n * ]\n * ```\n *\n * @param {object[]} layerData - An array of objects with `key` and `values` properties, as returned from `d3.nest().entries()`\n * @param {string} layerData.key - The layer's key value.\n * @param {object[]} layerData.values - The layer's value array.\n * @param {string} resultKey - The `key` property to assign to the returned layer.\n * @param {string[]} copyProperties - An array of string property names to copy as-is from the **first** layer's data values.\n * @param {string[]} sumProperties - An array of string property names to add together from **all** layer data.\n * @param {object} staticProperties - Static properties to copy as-is to **all** output data values.\n * @return {object[]} An array of objects with `key` and `value` properties, the same structure as the provided `layerData` argument\n * @alias module:data~aggregateNestedDataLayers\n */\nexport function aggregateNestedDataLayers(\n\tlayerData,\n\tresultKey,\n\tcopyProperties,\n\tsumProperties,\n\tstaticProperties,\n) {\n\t// combine all layers into a single source\n\tvar layerCount = layerData.length,\n\t\tdataLength,\n\t\ti,\n\t\tj,\n\t\tk,\n\t\tcopyPropLength = copyProperties ? copyProperties.length : 0,\n\t\tsumPropLength = sumProperties ? sumProperties.length : 0,\n\t\td,\n\t\tval,\n\t\tclone,\n\t\tarray;\n\n\tdataLength = layerData[0].values.length;\n\tif (dataLength > 0) {\n\t\tarray = [];\n\t\tfor (i = 0; i < dataLength; i += 1) {\n\t\t\td = layerData[0].values[i];\n\t\t\tclone = {};\n\t\t\tif (staticProperties !== undefined) {\n\t\t\t\tfor (val in staticProperties) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(staticProperties, val)) {\n\t\t\t\t\t\tclone[val] = staticProperties[val];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (k = 0; k < copyPropLength; k += 1) {\n\t\t\t\tclone[copyProperties[k]] = d[copyProperties[k]];\n\t\t\t}\n\t\t\tfor (k = 0; k < sumPropLength; k += 1) {\n\t\t\t\tclone[sumProperties[k]] = 0;\n\t\t\t}\n\t\t\tfor (j = 0; j < layerCount; j += 1) {\n\t\t\t\tfor (k = 0; k < sumPropLength; k += 1) {\n\t\t\t\t\tval = layerData[j].values[i][sumProperties[k]];\n\t\t\t\t\tif (val !== undefined) {\n\t\t\t\t\t\tclone[sumProperties[k]] += val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tarray.push(clone);\n\t\t}\n\t\tlayerData = [{ key: resultKey, values: array }];\n\t}\n\n\treturn layerData;\n}\n\n/**\n * Transform raw SolarNetwork timeseries data by combining datum from multiple sources into a single\n * data per time key.\n *\n * This method produces a single array of objects with metric properties derived by grouping\n * that property within a single time slot across one or more source IDs. Conceptually this is\n * similar to {@link module:data~aggregateNestedDataLayers} except groups of source IDs can be\n * produced in the final result.\n *\n * The data will be passed through {@link module:data~normalizeNestedStackDataByDate} so that every\n * result object will contain every configured output group, but missing data will result in a\n * `null` value.\n *\n * Here's an example where two sources `A` and `B` are combined into a single group `Generation`\n * and a third source `C` is passed through as another group `Consumption`:\n *\n * ```\n * const queryData = [\n *     {localDate: '2018-05-05', localTime: '11:00', sourceId: 'A', watts : 123},\n *     {localDate: '2018-05-05', localTime: '11:00', sourceId: 'B', watts : 234},\n *     {localDate: '2018-05-05', localTime: '11:00', sourceId: 'C', watts : 345},\n *     {localDate: '2018-05-05', localTime: '12:00', sourceId: 'A', watts : 456},\n *     {localDate: '2018-05-05', localTime: '12:00', sourceId: 'B', watts : 567},\n *     {localDate: '2018-05-05', localTime: '12:00', sourceId: 'C', watts : 678},\n * ];\n * const sourceMap = new Map([\n *     ['A', 'Generation'],\n *     ['B', 'Generation'],\n *     ['C', 'Consumption'],\n * ]);\n *\n * const result = groupedBySourceMetricDataArray(queryData, 'watts', sourceMap);\n * ```\n *\n * Then `result` would look like this:\n *\n * ```\n * [\n *     {date : new Date('2018-05-05T11:00Z'), Generation : 357, Consumption: 345},\n *     {date : new Date('2018-05-05T12:00Z'), Generation : 1023, Consumption: 678}\n * ]\n * ```\n *\n * @param {object[]} data the raw data returned from SolarNetwork\n * @param {string} metricName the datum property name to extract\n * @param {Map} [sourceIdMap] an optional mapping of input source IDs to output source IDs; this can be used\n *                            to control the grouping of data, by mapping multiple input source IDs to the same\n *                            output source ID\n * @param {function} [aggFn] an optional aggregate function to apply to the metric values;\n *                           defaults to `d3.sum`; **note** that the function will be passed an array of input\n *                           data objects, not metric values\n * @returns {object[]} array of datum objects, each with a date and one metric value per source ID\n * @alias module:data~groupedBySourceMetricDataArray\n */\nexport function groupedBySourceMetricDataArray(data, metricName, sourceIdMap, aggFn) {\n\tconst metricExtractorFn = function metricExtractor(d) {\n\t\treturn d[metricName];\n\t};\n\tconst rollupFn = typeof aggFn === \"function\" ? aggFn : sum;\n\tconst layerData = nest()\n\t\t// group first by source\n\t\t.key((d) => {\n\t\t\treturn sourceIdMap && sourceIdMap.has(d.sourceId)\n\t\t\t\t? sourceIdMap.get(d.sourceId)\n\t\t\t\t: d.sourceId;\n\t\t})\n\t\t.sortKeys(ascending)\n\t\t// group second by date\n\t\t.key((d) => {\n\t\t\treturn d.localDate + \" \" + d.localTime;\n\t\t})\n\t\t// sum desired property in date group\n\t\t.rollup((values) => {\n\t\t\tconst r = {\n\t\t\t\tdate: datumDate(values[0]),\n\t\t\t};\n\t\t\tlet metricKey = values[0].sourceId;\n\t\t\tif (sourceIdMap && sourceIdMap.has(metricKey)) {\n\t\t\t\tmetricKey = sourceIdMap.get(metricKey);\n\t\t\t}\n\t\t\tr[metricKey] = rollupFn(values, metricExtractorFn);\n\t\t\treturn r;\n\t\t})\n\t\t// un-nest to single group by source\n\t\t.entries(data)\n\t\t.map(function (layer) {\n\t\t\treturn {\n\t\t\t\tkey: layer.key,\n\t\t\t\tvalues: layer.values.map(function (d) {\n\t\t\t\t\treturn d.value;\n\t\t\t\t}),\n\t\t\t};\n\t\t});\n\n\t// ensure all layers have the same time keys\n\tnormalizeNestedStackDataByDate(layerData, null, (d, key) => {\n\t\t// make sure filled-in data has the metric property defined\n\t\td[key] = null;\n\t});\n\n\t// reduce to single array with multiple metric properties\n\treturn layerData.reduce(function (combined, layer) {\n\t\tif (!combined) {\n\t\t\treturn layer.values;\n\t\t}\n\t\tcombined.forEach(function (d, i) {\n\t\t\tconst v = layer.values[i][layer.key];\n\t\t\td[layer.key] = v;\n\t\t});\n\t\treturn combined;\n\t}, null);\n}\n\nexport default Object.freeze({\n\taggregateNestedDataLayers: aggregateNestedDataLayers,\n\tgroupedBySourceMetricDataArray: groupedBySourceMetricDataArray,\n\tnormalizeNestedStackDataByDate: normalizeNestedStackDataByDate,\n});\n","import Enum from \"../util/enum.js\";\n\n/**\n * An auth token status.\n *\n * @extends module:util~Enum\n * @alias module:domain~AuthTokenStatus\n */\nexport class AuthTokenStatus extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t */\n\tconstructor(name) {\n\t\tsuper(name);\n\t\tif (this.constructor === AuthTokenStatus) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link module:domain~AuthTokenStatuses} values.\n\t *\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn AuthTokenStatusValues;\n\t}\n}\n\nconst AuthTokenStatusValues = Object.freeze([\n\tnew AuthTokenStatus(\"Active\"),\n\tnew AuthTokenStatus(\"Disabled\"),\n]);\n\n/**\n * The enumeration of supported AuthTokenStatus values.\n *\n * @readonly\n * @enum {module:domain~AuthTokenStatus}\n * @property {module:domain~AuthTokenStatus} Active the token is active and usable\n * @property {module:domain~AuthTokenStatus} Disabled the token is disabled and not usable\n * @alias module:domain~AuthTokenStatuses\n */\nconst AuthTokenStatuses = AuthTokenStatus.enumsValue(AuthTokenStatusValues);\n\nexport default AuthTokenStatuses;\n","import Enum from \"../util/enum.js\";\n\n/**\n * A named auth token type.\n *\n * @extends module:util~Enum\n * @alias module:domain~AuthTokenType\n */\nexport class AuthTokenType extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t */\n\tconstructor(name) {\n\t\tsuper(name);\n\t\tif (this.constructor === AuthTokenType) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link AuthTokenTypes} values.\n\t *\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn AuthTokenTypeValues;\n\t}\n}\n\nconst AuthTokenTypeValues = Object.freeze([\n\tnew AuthTokenType(\"ReadNodeData\"),\n\tnew AuthTokenType(\"User\"),\n]);\n\n/**\n * The enumeration of supported AuthTokenType values.\n *\n * @readonly\n * @enum {module:domain~AuthTokenType}\n * @property {module:domain~AuthTokenType} ReadNodeData a read-only token for reading SolarNode data\n * @property {module:domain~AuthTokenType} User full access as the user that owns the token\n * @alias module:domain~AuthTokenTypes\n */\nconst AuthTokenTypes = AuthTokenType.enumsValue(AuthTokenTypeValues);\n\nexport default AuthTokenTypes;\n","import Enum from \"../util/enum.js\";\n\n/**\n * A named query combining action type.\n *\n * @extends module:util~Enum\n * @alias module:domain~CombiningType\n */\nexport class CombiningType extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this type\n\t */\n\tconstructor(name) {\n\t\tsuper(name);\n\t\tif (this.constructor === CombiningType) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link module:domain~CombiningTypes} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn CombiningTypeValues;\n\t}\n}\n\nconst CombiningTypeValues = Object.freeze([\n\tnew CombiningType(\"Average\"),\n\tnew CombiningType(\"Sum\"),\n\tnew CombiningType(\"Difference\"),\n]);\n\n/**\n * The enumeration of supported CombiningType values.\n *\n * @readonly\n * @enum {module:domain~CombiningType}\n * @property {module:domain~CombiningType} Average average\n * @property {module:domain~CombiningType} Difference difference; note the order of mapped IDs is significant\n * @property {module:domain~CombiningType} Sum sum\n * @alias module:domain~CombiningTypes\n */\nconst CombiningTypes = CombiningType.enumsValue(CombiningTypeValues);\n\nexport default CombiningTypes;\n","import Enum from \"../util/enum.js\";\n\n/**\n * A datum auxiliary type.\n *\n * @extends module:util~Enum\n * @alias module:domain~DatumAuxiliaryType\n */\nexport class DatumAuxiliaryType extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this type\n\t */\n\tconstructor(name) {\n\t\tsuper(name);\n\t\tif (this.constructor === DatumAuxiliaryType) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link module:domain~DatumAuxiliaryTypes} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn DatumAuxiliaryTypeValues;\n\t}\n}\n\nconst DatumAuxiliaryTypeValues = Object.freeze([new DatumAuxiliaryType(\"Reset\")]);\n\n/**\n * The enumeration of supported DatumAuxiliaryType values.\n *\n * @readonly\n * @enum {module:domain~DatumAuxiliaryType}\n * @property {module:domain~DatumAuxiliaryType} Reset reset\n * @alias module:domain~DatumAuxiliaryTypes\n */\nconst DatumAuxiliaryTypes = DatumAuxiliaryType.enumsValue(DatumAuxiliaryTypeValues);\n\nexport default DatumAuxiliaryTypes;\n","/**\n * A pagination criteria object.\n * @alias module:domain~Pagination\n */\nclass Pagination {\n\t/**\n\t * Construct a pagination object.\n\t *\n\t * @param {number} max the maximum number of results to return\n\t * @param {number} [offset] the 0-based starting offset\n\t */\n\tconstructor(max, offset) {\n\t\tthis._max = max > 0 ? +max : 0;\n\t\tthis._offset = offset > 0 ? +offset : 0;\n\t}\n\n\t/**\n\t * Get the maximum number of results to return.\n\t *\n\t * @returns {number} the maximum number of results\n\t */\n\tget max() {\n\t\treturn this._max;\n\t}\n\n\t/**\n\t * Get the results starting offset.\n\t *\n\t * The first available result starts at offset <code>0</code>. Note this is\n\t * a raw offset value, not a \"page\" offset.\n\t *\n\t * @returns {number} the starting result offset\n\t */\n\tget offset() {\n\t\treturn this._offset;\n\t}\n\n\t/**\n\t * Copy constructor with a new <code>offset</code> value.\n\t *\n\t * @param {number} offset the new offset to use\n\t * @return {Pagination} a new instance\n\t */\n\twithOffset(offset) {\n\t\treturn new Pagination(this.max, offset);\n\t}\n\n\t/**\n\t * Get this object as a standard URI encoded (query parameters) string value.\n\t *\n\t * @return {string} the URI encoded string\n\t */\n\ttoUriEncoding() {\n\t\tlet result = \"\";\n\t\tif (this.max > 0) {\n\t\t\tresult += \"max=\" + this.max;\n\t\t}\n\t\tif (this.offset > 0) {\n\t\t\tif (result.length > 0) {\n\t\t\t\tresult += \"&\";\n\t\t\t}\n\t\t\tresult += \"offset=\" + this.offset;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport default Pagination;\n","/**\n * A description of a sort applied to a property of a collection.\n * @alias module:domain~SortDescriptor\n */\nclass SortDescriptor {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} key the property to sort on\n\t * @param {boolean} [descending] `true` to sort in descending order, `false` for ascending\n\t */\n\tconstructor(key, descending) {\n\t\tthis._key = key;\n\t\tthis._descending = !!descending;\n\t}\n\n\t/**\n\t * Get the sort property name.\n\t *\n\t * @returns {string} the sort key\n\t */\n\tget key() {\n\t\treturn this._key;\n\t}\n\n\t/**\n\t * Get the sorting direction.\n\t *\n\t * @returns {boolean} `true` if descending order, `false` for ascending\n\t */\n\tget descending() {\n\t\treturn this._descending;\n\t}\n\n\t/**\n\t * Get this object as a standard URI encoded (query parameters) string value.\n\t *\n\t * If `index` is provided and non-negative, then the query parameters will\n\t * be encoded as an array property named `sorts`. Otherwise just\n\t * bare `key` and `descending` properties will be used. The\n\t * `descending` property is only added if it is `true`.\n\t *\n\t * @param {number} [index] an optional array property index\n\t * @param {string} [propertyName=sorts] an optional array property name, only used if `index` is also provided\n\t * @return {string} the URI encoded string\n\t */\n\ttoUriEncoding(index, propertyName) {\n\t\tlet result,\n\t\t\tpropName = propertyName || \"sorts\";\n\t\tif (index !== undefined && index >= 0) {\n\t\t\tresult = encodeURIComponent(propName + \"[\" + index + \"].key\") + \"=\";\n\t\t} else {\n\t\t\tresult = \"key=\";\n\t\t}\n\t\tresult += encodeURIComponent(this.key);\n\t\tif (this.descending) {\n\t\t\tif (index !== undefined && index >= 0) {\n\t\t\t\tresult +=\n\t\t\t\t\t\"&\" + encodeURIComponent(propName + \"[\" + index + \"].descending\") + \"=true\";\n\t\t\t} else {\n\t\t\t\tresult += \"&descending=true\";\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport default SortDescriptor;\n","import Pagination from \"../domain/pagination.js\";\nimport SortDescriptor from \"../domain/sortDescriptor.js\";\nimport Enum from \"./enum.js\";\n\n/**\n * A basic map-like object.\n *\n * <p>This object includes some utility functions that make it well suited to using\n * as an API query object. For example, the {@link module:util~PropMap#toUriEncoding}\n * method provides a way to serialize this object into URL query parameters.</p>\n *\n * @alias module:util~PropMap\n */\nclass PropMap {\n\t/**\n\t * Constructor.\n\t * @param {PropMap|object} props the initial properties; if a `PropMap` instance is provided, the properties\n\t *                               of that object will be copied into this one; otherwise the object will be\n\t *                               used directly to hold property values\n\t */\n\tconstructor(props) {\n\t\t/**\n\t\t * The object that all properties are stored on.\n\t\t * @member {object}\n\t\t */\n\t\tthis.props =\n\t\t\tprops instanceof PropMap ? props.properties() : typeof props === \"object\" ? props : {};\n\t}\n\n\t/**\n\t * Get, set, or remove a property value.\n\t *\n\t * @param {string} key the key to get or set the value for\n\t * @param {*} [newValue] if defined, the new value to set for the given `key`;\n\t *                       if `null` then the `key` property will be removed\n\t * @returns {*} if called as a getter, the associated value for the given `key`,\n\t *              otherwise this object\n\t */\n\tprop(key, newValue) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.props[key];\n\t\t}\n\t\tif (newValue === null) {\n\t\t\tdelete this.props[key];\n\t\t} else {\n\t\t\tthis.props[key] = newValue;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get, set, or remove multiple properties.\n\t *\n\t * @param {object} [newProps] the new values to set; if any value is `null` that property\n\t *                            will be deleted\n\t * @returns {object} if called as a getter, all properties of this object copied into a\n\t *                   simple object; otherwise this object\n\t */\n\tproperties(newProps) {\n\t\tif (newProps) {\n\t\t\tfor (const k of Object.keys(newProps)) {\n\t\t\t\tthis.prop(k, newProps[k]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\treturn Object.assign({}, this.props);\n\t}\n\n\t/**\n\t * Get this object as a standard URI encoded (query parameters) string value.\n\t *\n\t * All enumerable properties of the <code>props</code> property will be added to the\n\t * result. If any property value is an array, the values of the array will be joined\n\t * by a comma. Any {@link module:util~Enum} values will have their `name` property used.\n\t * Any value that has a `toUriEncoding()` function property will have that function\n\t * invoked, passing the associated property name as the first argument, and the returned\n\t * value will be used.\n\t *\n\t * @param {string} [propertyName] an optional object property prefix to add to all properties\n\t * @param {function} [callbackFn] An optional function that will be called for each property.\n\t *                   The function will be passed property name and value arguments, and must\n\t *                   return either `null` to skip the property, a 2 or 3-element array with the\n\t *                   property name and value to use, and an optional boolean to force array\n\t *                   values to use mutliple parameter keys. Any other return value causes the\n\t *                   property to be used as- is.\n\t * @return {string} the URI encoded string\n\t */\n\ttoUriEncoding(propertyName, callbackFn) {\n\t\tlet result = \"\";\n\t\tfor (let k of Object.keys(this.props)) {\n\t\t\tif (result.length > 0) {\n\t\t\t\tresult += \"&\";\n\t\t\t}\n\t\t\tlet v = this.props[k];\n\t\t\tlet forceMultiKey = false;\n\t\t\tif (callbackFn) {\n\t\t\t\tconst kv = callbackFn(k, v);\n\t\t\t\tif (kv === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(kv) && kv.length > 1) {\n\t\t\t\t\tk = kv[0];\n\t\t\t\t\tv = kv[1];\n\t\t\t\t\tif (kv.length > 2) {\n\t\t\t\t\t\tforceMultiKey = !!kv[2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof v.toUriEncoding === \"function\") {\n\t\t\t\tresult += v.toUriEncoding(\n\t\t\t\t\tpropertyName ? encodeURIComponent(propertyName) + \".\" + k : k\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (propertyName) {\n\t\t\t\tresult += encodeURIComponent(propertyName) + \".\";\n\t\t\t}\n\t\t\tresult += encodeURIComponent(k) + \"=\";\n\t\t\tif (Array.isArray(v)) {\n\t\t\t\tv.forEach(function (e, i) {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tresult += forceMultiKey ? \"&\" + encodeURIComponent(k) + \"=\" : \",\";\n\t\t\t\t\t}\n\t\t\t\t\tif (e instanceof Enum) {\n\t\t\t\t\t\te = e.name;\n\t\t\t\t\t}\n\t\t\t\t\tresult += encodeURIComponent(e);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (v instanceof Enum) {\n\t\t\t\t\tv = v.name;\n\t\t\t\t}\n\t\t\t\tresult += encodeURIComponent(v);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get this object as a standard URI encoded (query parameters) string value with\n\t * sorting and pagination parameters.\n\t *\n\t * <p>This calls {@link module:util~PropMap#toUriEncoding} first, then encodes\n\t * the `sorts` and `pagination` parameters, if provided.\n\t *\n\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t * @param {string} [propertyName] an optional object property prefix to add to all properties\n\t * @param {function} [callbackFn] An optional function that will be called for each property.\n\t *                   The function will be passed property name and value arguments, and must\n\t *                   return either `null` to skip the property, a 2-element array with the property\n\t *                   name and value to use, or anything else to use the property as- is.\n\t * @return {string} the URI encoded string\n\t */\n\ttoUriEncodingWithSorting(sorts, pagination, propertyName, callbackFn) {\n\t\tlet params = this.toUriEncoding(propertyName, callbackFn);\n\t\tif (Array.isArray(sorts)) {\n\t\t\tsorts.forEach((sort, i) => {\n\t\t\t\tif (sort instanceof SortDescriptor) {\n\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\tparams += \"&\";\n\t\t\t\t\t}\n\t\t\t\t\tparams += sort.toUriEncoding(i);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (pagination instanceof Pagination) {\n\t\t\tconst paginationParams = pagination.toUriEncoding();\n\t\t\tif (paginationParams) {\n\t\t\t\tif (params.length > 0) {\n\t\t\t\t\tparams += \"&\";\n\t\t\t\t}\n\t\t\t\tparams += paginationParams;\n\t\t\t}\n\t\t}\n\t\treturn params;\n\t}\n}\n\nexport default PropMap;\n","import PropMap from \"../util/propMap.js\";\n\nexport const CountryKey = \"country\";\nexport const ElevationKey = \"elevation\";\nexport const LatitudeKey = \"latitude\";\nexport const IdKey = \"id\";\nexport const LocalityKey = \"locality\";\nexport const LongitudeKey = \"longitude\";\nexport const NameKey = \"name\";\nexport const PostalCodeKey = \"postalCode\";\nexport const RegionKey = \"region\";\nexport const StateOrProvinceKey = \"stateOrProvince\";\nexport const StreetKey = \"street\";\nexport const TimeZoneIdKey = \"timeZoneId\";\n\n/**\n * A geographic location.\n *\n * @extends module:util~PropMap\n * @alias module:domain~Location\n */\nclass Location extends PropMap {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {module:domain~Location|object} loc the location to copy properties from\n\t */\n\tconstructor(loc) {\n\t\tsuper(loc);\n\t}\n\n\t/**\n\t * A SolarNetwork assigned unique identifier.\n\t * @type {number}\n\t */\n\tget id() {\n\t\treturn this.prop(IdKey);\n\t}\n\n\tset id(val) {\n\t\tthis.prop(IdKey, val);\n\t}\n\n\t/**\n\t * A generalized name, can be used for \"virtual\" locations.\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.prop(NameKey);\n\t}\n\n\tset name(val) {\n\t\tthis.prop(NameKey, val);\n\t}\n\n\t/**\n\t * An ISO 3166-1 alpha-2 character country code.\n\t * @type {string}\n\t */\n\tget country() {\n\t\treturn this.prop(CountryKey);\n\t}\n\n\tset country(val) {\n\t\tthis.prop(CountryKey, val);\n\t}\n\n\t/**\n\t * A country-specific regional identifier.\n\t * @type {string}\n\t */\n\tget region() {\n\t\treturn this.prop(RegionKey);\n\t}\n\n\tset region(val) {\n\t\tthis.prop(RegionKey, val);\n\t}\n\n\t/**\n\t * A country-specific state or province identifier.\n\t * @type {string}\n\t */\n\tget stateOrProvince() {\n\t\treturn this.prop(StateOrProvinceKey);\n\t}\n\n\tset stateOrProvince(val) {\n\t\tthis.prop(StateOrProvinceKey, val);\n\t}\n\n\t/**\n\t * Get the locality (city, town).\n\t * @type {string}\n\t */\n\tget locality() {\n\t\treturn this.prop(LocalityKey);\n\t}\n\n\tset locality(val) {\n\t\tthis.prop(LocalityKey, val);\n\t}\n\n\t/**\n\t * A country-specific postal code.\n\t * @type {string}\n\t */\n\tget postalCode() {\n\t\treturn this.prop(PostalCodeKey);\n\t}\n\n\tset postalCode(val) {\n\t\tthis.prop(PostalCodeKey, val);\n\t}\n\n\t/**\n\t * The street address.\n\t * @type {string}\n\t */\n\tget street() {\n\t\treturn this.prop(StreetKey);\n\t}\n\n\tset street(val) {\n\t\tthis.prop(StreetKey, val);\n\t}\n\n\t/**\n\t * The decimal world latitude.\n\t * @type {number}\n\t */\n\tget latitude() {\n\t\treturn this.prop(LatitudeKey);\n\t}\n\n\tset latitude(val) {\n\t\tthis.prop(LatitudeKey, val);\n\t}\n\n\t/**\n\t * The decimal world longitude.\n\t * @type {number}\n\t */\n\tget longitude() {\n\t\treturn this.prop(LongitudeKey);\n\t}\n\n\tset longitude(val) {\n\t\tthis.prop(LongitudeKey, val);\n\t}\n\n\t/**\n\t * The elevation above sea level, in meters.\n\t * @type {number}\n\t */\n\tget elevation() {\n\t\treturn this.prop(ElevationKey);\n\t}\n\n\tset elevation(val) {\n\t\tthis.prop(ElevationKey, val);\n\t}\n\n\t/**\n\t * A time zone ID, for example `Pacific/Auckland`.\n\t * @type {string}\n\t */\n\tget timeZoneId() {\n\t\treturn this.prop(TimeZoneIdKey);\n\t}\n\n\tset timeZoneId(val) {\n\t\tthis.prop(TimeZoneIdKey, val);\n\t}\n}\n\nexport default Location;\n","import { Aggregation } from \"./aggregation.js\";\nimport { CombiningType } from \"./combiningType.js\";\nimport Location from \"./location.js\";\nimport PropMap from \"../util/propMap.js\";\n\nimport { dateTimeUrlFormat, localDateTimeUrlFormat } from \"../format/date.js\";\n\nexport const AccumulatingPropertyNamesKey = \"accumulatingPropertyNames\";\nexport const AggregationKey = \"aggregation\";\nexport const CombiningTypeKey = \"combiningType\";\nexport const DataPathKey = \"dataPath\";\nexport const EndDateKey = \"endDate\";\nexport const InstantaneousPropertyNamesKey = \"instantaneousPropertyNames\";\nexport const LocalEndDateKey = \"localEndDate\";\nexport const LocalStartDateKey = \"localStartDate\";\nexport const LocationIdsKey = \"locationIds\";\nexport const LocationKey = \"location\";\nexport const MetadataFilterKey = \"metadataFilter\";\nexport const MostRecentKey = \"mostRecent\";\nexport const NodeIdMapsKey = \"nodeIdMaps\";\nexport const NodeIdsKey = \"nodeIds\";\nexport const PartialAggregationKey = \"partialAggregation\";\nexport const PropertyNamesKey = \"propertyNames\";\nexport const QueryKey = \"query\";\nexport const SourceIdMapsKey = \"sourceIdMaps\";\nexport const SourceIdsKey = \"sourceIds\";\nexport const StartDateKey = \"startDate\";\nexport const StatusPropertyNamesKey = \"statusPropertyNames\";\nexport const StreamIdsKey = \"streamIds\";\nexport const TagsKey = \"tags\";\nexport const UserIdsKey = \"userIds\";\nexport const WithoutTotalResultsCountKey = \"withoutTotalResultsCount\";\n\n/**\n * Combine an ID map into a query parameter.\n * @param {Map<*, Set<*>>} map ID mapping\n * @returns {String[]} the query parameter value, or `null` if no mapping available\n * @private\n */\nfunction idMapQueryParameterValue(map) {\n\tif (!(map instanceof Map && map.size > 0)) {\n\t\treturn null;\n\t}\n\tvar result = [];\n\tfor (let e of map) {\n\t\tif (!(e[1] instanceof Set)) {\n\t\t\tcontinue;\n\t\t}\n\t\tresult.push(`${e[0]}:${Array.from(e[1]).join(\",\")}`);\n\t}\n\treturn result;\n}\n\n/**\n * A filter criteria object for datum.\n *\n * <p>This filter is used to query both node datum and location datum. Not all properties are\n * applicable to both types. Be sure to consult the SolarNet API documentation on the\n * supported properties for each type.</p>\n *\n * @extends module:util~PropMap\n * @alias module:domain~DatumFilter\n */\nclass DatumFilter extends PropMap {\n\t/**\n\t * Constructor.\n\t * @param {object} [props] initial property values\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\t/**\n\t * A node ID.\n\t *\n\t * This manages the first available node ID from the `nodeIds` property.\n\t *\n\t * @type {number}\n\t */\n\tget nodeId() {\n\t\tconst nodeIds = this.nodeIds;\n\t\treturn Array.isArray(nodeIds) && nodeIds.length > 0 ? nodeIds[0] : null;\n\t}\n\n\tset nodeId(nodeId) {\n\t\tif (nodeId) {\n\t\t\tthis.nodeIds = [nodeId];\n\t\t} else {\n\t\t\tthis.nodeIds = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of node IDs.\n\t * @type {number[]}\n\t */\n\tget nodeIds() {\n\t\treturn this.prop(NodeIdsKey);\n\t}\n\n\tset nodeIds(nodeIds) {\n\t\tthis.prop(NodeIdsKey, Array.isArray(nodeIds) ? nodeIds : null);\n\t}\n\n\t/**\n\t * A location ID.\n\t *\n\t * This manages the first available location ID from the `locationIds` property.\n\t *\n\t * @type {number}\n\t */\n\tget locationId() {\n\t\tconst locationIds = this.locationIds;\n\t\treturn Array.isArray(locationIds) && locationIds.length > 0 ? locationIds[0] : null;\n\t}\n\n\tset locationId(locationId) {\n\t\tif (locationId) {\n\t\t\tthis.locationIds = [locationId];\n\t\t} else {\n\t\t\tthis.locationIds = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of location IDs.\n\t * @type {number[]}\n\t */\n\tget locationIds() {\n\t\treturn this.prop(LocationIdsKey);\n\t}\n\n\tset locationIds(locationIds) {\n\t\tthis.prop(LocationIdsKey, Array.isArray(locationIds) ? locationIds : null);\n\t}\n\n\t/**\n\t * A source ID.\n\t *\n\t * This manages the first available source ID from the `sourceIds` property.\n\t *\n\t * @type {string}\n\t */\n\tget sourceId() {\n\t\tconst sourceIds = this.sourceIds;\n\t\treturn Array.isArray(sourceIds) && sourceIds.length > 0 ? sourceIds[0] : null;\n\t}\n\n\tset sourceId(sourceId) {\n\t\tif (sourceId) {\n\t\t\tthis.sourceIds = [sourceId];\n\t\t} else {\n\t\t\tthis.sourceIds = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of source IDs.\n\t * @type {string[]}\n\t */\n\tget sourceIds() {\n\t\treturn this.prop(SourceIdsKey);\n\t}\n\n\tset sourceIds(sourceIds) {\n\t\tthis.prop(SourceIdsKey, Array.isArray(sourceIds) ? sourceIds : null);\n\t}\n\n\t/**\n\t * A stream ID.\n\t *\n\t * This manages the first available stream ID from the `streamIds` property.\n\t *\n\t * @type {string}\n\t */\n\tget streamId() {\n\t\tconst streamIds = this.streamIds;\n\t\treturn Array.isArray(streamIds) && streamIds.length > 0 ? streamIds[0] : null;\n\t}\n\n\tset streamId(streamId) {\n\t\tif (streamId) {\n\t\t\tthis.streamIds = [streamId];\n\t\t} else {\n\t\t\tthis.streamIds = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of stream IDs.\n\t * @type {string[]}\n\t */\n\tget streamIds() {\n\t\treturn this.prop(StreamIdsKey);\n\t}\n\n\tset streamIds(streamIds) {\n\t\tthis.prop(StreamIdsKey, Array.isArray(streamIds) ? streamIds : null);\n\t}\n\n\t/**\n\t * A user ID.\n\t *\n\t * This manages the first available location ID from the `userIds` property.\n\t *\n\t * @type {number}\n\t */\n\tget userId() {\n\t\tconst userIds = this.userIds;\n\t\treturn Array.isArray(userIds) && userIds.length > 0 ? userIds[0] : null;\n\t}\n\n\tset userId(userId) {\n\t\tif (userId) {\n\t\t\tthis.userIds = [userId];\n\t\t} else {\n\t\t\tthis.userIds = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of user IDs.\n\t * @type {number[]}\n\t */\n\tget userIds() {\n\t\treturn this.prop(UserIdsKey);\n\t}\n\n\tset userIds(userIds) {\n\t\tthis.prop(UserIdsKey, Array.isArray(userIds) ? userIds : null);\n\t}\n\n\t/**\n\t * The \"most recent\" flag.\n\t * @type {boolean}\n\t */\n\tget mostRecent() {\n\t\treturn !!this.prop(MostRecentKey);\n\t}\n\n\tset mostRecent(value) {\n\t\tthis.prop(MostRecentKey, !!value);\n\t}\n\n\t/**\n\t * A minimumin date.\n\t * @type {Date}\n\t */\n\tget startDate() {\n\t\treturn this.prop(StartDateKey);\n\t}\n\n\tset startDate(date) {\n\t\tthis.prop(StartDateKey, date);\n\t}\n\n\t/**\n\t * A maximum date.\n\t * @type {Date}\n\t */\n\tget endDate() {\n\t\treturn this.prop(EndDateKey);\n\t}\n\n\tset endDate(date) {\n\t\tthis.prop(EndDateKey, date);\n\t}\n\n\t/**\n\t * Alocal minimumin date.\n\t * @type {Date}\n\t */\n\tget localStartDate() {\n\t\treturn this.prop(LocalStartDateKey);\n\t}\n\n\tset localStartDate(date) {\n\t\tthis.prop(LocalStartDateKey, date);\n\t}\n\n\t/**\n\t * A local maximum date.\n\t * @type {Date}\n\t */\n\tget localEndDate() {\n\t\treturn this.prop(LocalEndDateKey);\n\t}\n\n\tset localEndDate(date) {\n\t\tthis.prop(LocalEndDateKey, date);\n\t}\n\n\t/**\n\t * A data path, in dot-delimited notation like `i.watts`.\n\t * @type {string}\n\t */\n\tget dataPath() {\n\t\treturn this.prop(DataPathKey);\n\t}\n\n\tset dataPath(path) {\n\t\tthis.prop(DataPathKey, path);\n\t}\n\n\t/**\n\t * An aggregation.\n\t *\n\t * Including this in a filter will cause SolarNet to return aggregated results, rather\n\t * than raw results.\n\t *\n\t * @type {module:domain~Aggregation}\n\t */\n\tget aggregation() {\n\t\treturn this.prop(AggregationKey);\n\t}\n\n\tset aggregation(agg) {\n\t\tthis.prop(AggregationKey, agg instanceof Aggregation ? agg : null);\n\t}\n\n\t/**\n\t * A partial aggregation.\n\t *\n\t * Including this in a filter along with `aggregation`  will cause SolarNet to return aggregated results that\n\t * include partial results of this granularity. For example if `aggregation == 'Month'` and\n\t * `partialAggregation == 'Day'` and a date range of 15 Jan - 15 Mar was requested, 3 month results would\n\t * be returned for the date ranges 15 Jan - 31 Jan, 1 Feb - 28 Feb, and 1 Mar - 14 Mar.\n\t *\n\t * @type {module:domain~Aggregation}\n\t */\n\tget partialAggregation() {\n\t\treturn this.prop(PartialAggregationKey);\n\t}\n\n\tset partialAggregation(agg) {\n\t\tthis.prop(PartialAggregationKey, agg instanceof Aggregation ? agg : null);\n\t}\n\n\t/**\n\t * An array of tags.\n\t * @type {string[]}\n\t */\n\tget tags() {\n\t\treturn this.prop(TagsKey);\n\t}\n\n\tset tags(val) {\n\t\tthis.prop(TagsKey, Array.isArray(val) ? val : null);\n\t}\n\n\t/**\n\t * A location, used as an example-based search criteria.\n\t * @type {module:domain~Location}\n\t */\n\tget location() {\n\t\treturn this.prop(LocationKey);\n\t}\n\n\tset location(val) {\n\t\tthis.prop(LocationKey, val instanceof Location ? val : null);\n\t}\n\n\t/**\n\t * A general full-text style query string.\n\t * @type {string}\n\t */\n\tget query() {\n\t\treturn this.prop(QueryKey);\n\t}\n\n\tset query(val) {\n\t\tthis.prop(QueryKey, val);\n\t}\n\n\t/**\n\t * A metadata filter (LDAP style search criteria).\n\t * @type {string}\n\t */\n\tget metadataFilter() {\n\t\treturn this.prop(MetadataFilterKey);\n\t}\n\n\tset metadataFilter(val) {\n\t\tthis.prop(MetadataFilterKey, val);\n\t}\n\n\t/**\n\t * Get the _without total results_ flag.\n\t * @type {boolean}\n\t */\n\tget withoutTotalResultsCount() {\n\t\treturn this.prop(WithoutTotalResultsCountKey);\n\t}\n\n\tset withoutTotalResultsCount(val) {\n\t\tthis.prop(WithoutTotalResultsCountKey, !!val);\n\t}\n\n\t/**\n\t * Get the combining type.\n\t *\n\t * Use this to combine nodes and/or sources into virtual groups. Requires some combination\n\t * of {@link #nodeIdMaps} or {@link #sourceIdMaps} also be specified.\n\t *\n\t * @type {module:domain~CombiningType}\n\t */\n\tget combiningType() {\n\t\treturn this.prop(CombiningTypeKey);\n\t}\n\n\tset combiningType(t) {\n\t\tthis.prop(CombiningTypeKey, t instanceof CombiningType ? t : null);\n\t}\n\n\t/**\n\t * A mapping of virtual node IDs to sets of real node IDs to combine.\n\t *\n\t * @type {Map<Number, Set<Number>>}\n\t */\n\tget nodeIdMaps() {\n\t\treturn this.prop(NodeIdMapsKey);\n\t}\n\n\tset nodeIdMaps(map) {\n\t\tthis.prop(NodeIdMapsKey, map instanceof Map ? map : null);\n\t}\n\n\t/**\n\t * A mapping of virtual source IDs to sets of real source IDs to combine.\n\t *\n\t * @type {Map<String, Set<String>>}\n\t */\n\tget sourceIdMaps() {\n\t\treturn this.prop(SourceIdMapsKey);\n\t}\n\n\tset sourceIdMaps(map) {\n\t\tthis.prop(SourceIdMapsKey, map instanceof Map ? map : null);\n\t}\n\n\t/**\n\t * A property name.\n\t *\n\t * This manages the first available value from the `propertyNames` property.\n\t *\n\t * @type {string}\n\t */\n\tget propertyName() {\n\t\tconst names = this.propertyNames;\n\t\treturn Array.isArray(names) && names.length > 0 ? names[0] : null;\n\t}\n\n\tset propertyName(name) {\n\t\tif (name) {\n\t\t\tthis.propertyNames = [name];\n\t\t} else {\n\t\t\tthis.propertyNames = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of property names.\n\t * @type {string[]}\n\t */\n\tget propertyNames() {\n\t\treturn this.prop(PropertyNamesKey);\n\t}\n\n\tset propertyNames(names) {\n\t\tthis.prop(PropertyNamesKey, Array.isArray(names) ? names : null);\n\t}\n\n\t/**\n\t * An instantaneous property name.\n\t *\n\t * This manages the first available value from the `instantaneousPropertyNames` property.\n\t *\n\t * @type {string}\n\t */\n\tget instantaneousPropertyName() {\n\t\tconst names = this.instantaneousPropertyNames;\n\t\treturn Array.isArray(names) && names.length > 0 ? names[0] : null;\n\t}\n\n\tset instantaneousPropertyName(name) {\n\t\tif (name) {\n\t\t\tthis.instantaneousPropertyNames = [name];\n\t\t} else {\n\t\t\tthis.instantaneousPropertyNames = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of instantaneous property names.\n\t * @type {string[]}\n\t */\n\tget instantaneousPropertyNames() {\n\t\treturn this.prop(InstantaneousPropertyNamesKey);\n\t}\n\n\tset instantaneousPropertyNames(names) {\n\t\tthis.prop(InstantaneousPropertyNamesKey, Array.isArray(names) ? names : null);\n\t}\n\n\t/**\n\t * An accumulating property name.\n\t *\n\t * This manages the first available value from the `accumulatingPropertyNames` property.\n\t *\n\t * @type {string}\n\t */\n\tget accumulatingPropertyName() {\n\t\tconst names = this.accumulatingPropertyNames;\n\t\treturn Array.isArray(names) && names.length > 0 ? names[0] : null;\n\t}\n\n\tset accumulatingPropertyName(name) {\n\t\tif (name) {\n\t\t\tthis.accumulatingPropertyNames = [name];\n\t\t} else {\n\t\t\tthis.accumulatingPropertyNames = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of accumulating property names.\n\t * @type {string[]}\n\t */\n\tget accumulatingPropertyNames() {\n\t\treturn this.prop(AccumulatingPropertyNamesKey);\n\t}\n\n\tset accumulatingPropertyNames(names) {\n\t\tthis.prop(AccumulatingPropertyNamesKey, Array.isArray(names) ? names : null);\n\t}\n\n\t/**\n\t * A property name.\n\t *\n\t * This manages the first available value from the `statusPropertyNames` property.\n\t *\n\t * @type {string}\n\t */\n\tget statusPropertyName() {\n\t\tconst names = this.statusPropertyNames;\n\t\treturn Array.isArray(names) && names.length > 0 ? names[0] : null;\n\t}\n\n\tset statusPropertyName(name) {\n\t\tif (name) {\n\t\t\tthis.statusPropertyNames = [name];\n\t\t} else {\n\t\t\tthis.statusPropertyNames = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of property names.\n\t * @type {string[]}\n\t */\n\tget statusPropertyNames() {\n\t\treturn this.prop(StatusPropertyNamesKey);\n\t}\n\n\tset statusPropertyNames(names) {\n\t\tthis.prop(StatusPropertyNamesKey, Array.isArray(names) ? names : null);\n\t}\n\n\t/**\n\t * Get this object as a standard URI encoded (query parameters) string value.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\ttoUriEncoding(propertyName, callbackFn) {\n\t\treturn super.toUriEncoding(\n\t\t\tpropertyName,\n\t\t\tcallbackFn || datumFilterUriEncodingPropertyMapper,\n\t\t);\n\t}\n}\n\n/**\n * Map DatumFilter properties for URI encoding.\n *\n * @param {string} key the property key\n * @param {*} value the property value\n * @returns {*} 2 or 3-element array for mapped key+value+forced-multi-key, `null` to skip, or `key` to keep as-is\n * @private\n */\nfunction datumFilterUriEncodingPropertyMapper(key, value) {\n\tif (\n\t\tkey === NodeIdsKey ||\n\t\tkey === LocationIdsKey ||\n\t\tkey === SourceIdsKey ||\n\t\tkey === UserIdsKey ||\n\t\tkey === PropertyNamesKey ||\n\t\tkey === InstantaneousPropertyNamesKey ||\n\t\tkey === AccumulatingPropertyNamesKey ||\n\t\tkey === StatusPropertyNamesKey\n\t) {\n\t\t// check for singleton array value, and re-map to singular property by chopping of \"s\"\n\t\tif (Array.isArray(value) && value.length === 1) {\n\t\t\treturn [key.substring(0, key.length - 1), value[0]];\n\t\t}\n\t} else if (key === StartDateKey || key === EndDateKey) {\n\t\treturn [key, dateTimeUrlFormat(value)];\n\t} else if (key === LocalStartDateKey || key === LocalEndDateKey) {\n\t\treturn [key, localDateTimeUrlFormat(value)];\n\t} else if (key === MostRecentKey && !value) {\n\t\treturn null;\n\t} else if (key === NodeIdMapsKey || key === SourceIdMapsKey) {\n\t\tlet p = idMapQueryParameterValue(value);\n\t\treturn p ? [key, p, true] : null;\n\t}\n\treturn key;\n}\n\nexport default DatumFilter;\n","import Enum from \"./enum.js\";\n\n/**\n * An immutable enum-like object with an associated key value.\n *\n * This class is essentially abstract, and must be extended by another\n * class that overrides the inerited {@link module:util~Enum.enumValues} method.\n *\n * @abstract\n * @extends module:util~Enum\n * @alias module:util~KeyedEnum\n */\nclass KeyedEnum extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this type\n\t * @param {string} key the key value associated with this type\n\t */\n\tconstructor(name, key) {\n\t\tsuper(name);\n\t\tthis._key = key;\n\t\tif (this.constructor === KeyedEnum) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the key value.\n\t *\n\t * @returns {string} the key value\n\t */\n\tget key() {\n\t\treturn this._key;\n\t}\n\n\t/**\n\t * Get an enum instance from its key or name.\n\t *\n\t * This method searches the {@link module:util~Enum#enumVvalues} array for a matching key or name value.\n\t *\n\t * @param {string} value the enum key or name to get the enum instance for\n\t * @returns {module:util~KeyedEnum|null} the matching enum value, or `null` if no values match\n\t */\n\tstatic valueOf(value) {\n\t\tconst enums = this.enumValues();\n\t\tif (!Array.isArray(enums)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (let i = 0, len = enums.length; i < len; i += 1) {\n\t\t\tif (value === enums[i].key) {\n\t\t\t\treturn enums[i];\n\t\t\t} else if (value === enums[i].name) {\n\t\t\t\treturn enums[i];\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport default KeyedEnum;\n","import KeyedEnum from \"../util/keyedEnum.js\";\n\n/**\n * An enumeration of datum reading types.\n *\n * @extends module:util~KeyedEnum\n * @alias module:domain~DatumReadingType\n */\nexport class DatumReadingType extends KeyedEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this type\n\t * @param {string} key the key value associated with this type\n\t */\n\tconstructor(name, key) {\n\t\tsuper(name, key);\n\t\tif (this.constructor === DatumReadingType) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link module:domain~DatumReadingType} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn DatumReadingTypeValues;\n\t}\n}\n\nconst DatumReadingTypeValues = Object.freeze([\n\tnew DatumReadingType(\"CalculatedAt\", \"at\"),\n\tnew DatumReadingType(\"CalculatedAtDifference\", \"atd\"),\n\tnew DatumReadingType(\"NearestDifference\", \"diff\"),\n\tnew DatumReadingType(\"Difference\", \"delta\"),\n\tnew DatumReadingType(\"DifferenceWithin\", \"change\"),\n]);\n\n/**\n * The enumeration of supported `DatumReadingType` values.\n *\n * @readonly\n * @enum {module:domain~DatumReadingType}\n * @property {module:domain~DatumReadingType} CalculatedAt Derive a single reading value based\n * from one datum the nearest before a specific time and one the nearest after.\n * @property {module:domain~DatumReadingType} CalculatedAtDifference Calculate the difference\n * between two reading values on two dates, using the `CalcualtedAt` style of deriving the start\n * and end readings.\n * @property {module:domain~DatumReadingType} Difference Find the difference between two datum\n * that are nearest in time on or before two dates, without any limits on how near to those dates\n * the datum are.\n * @property {module:domain~DatumReadingType} DifferenceWithin Find the difference between two\n * datum that are nearest in time and within two dates.\n * @property {module:domain~DatumReadingType} NearestDifference Find the difference between two\n * datum that are nearest in time on or before two dates, constrained by a maximum time tolerance.\n * @alias module:domain~DatumReadingTypes\n */\nconst DatumReadingTypes = DatumReadingType.enumsValue(DatumReadingTypeValues);\n\nexport default DatumReadingTypes;\n","import KeyedEnum from \"../util/keyedEnum.js\";\n\n/**\n * An enumeration of datum samples types.\n *\n * @extends module:util~KeyedEnum\n * @alias module:domain~DatumSamplesType\n */\nexport class DatumSamplesType extends KeyedEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this type\n\t * @param {string} key the key value associated with this type\n\t */\n\tconstructor(name, key) {\n\t\tsuper(name, key);\n\t\tif (this.constructor === DatumSamplesType) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link module:domain~DatumSamplesType} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn DatumSamplesTypeValues;\n\t}\n}\n\nconst DatumSamplesTypeValues = Object.freeze([\n\tnew DatumSamplesType(\"Instantaneous\", \"i\"),\n\tnew DatumSamplesType(\"Accumulating\", \"a\"),\n\tnew DatumSamplesType(\"Status\", \"s\"),\n\tnew DatumSamplesType(\"Tag\", \"t\"),\n]);\n\n/**\n * The enumeration of supported `DatumSamplesType` values.\n *\n * @readonly\n * @enum {module:domain~DatumSamplesType}\n * @property {module:domain~DatumSamplesType} Instantaneous Instantaneous number property values.\n * @property {module:domain~DatumSamplesType} Accumulating Accumulating meter-style number property values.\n * @property {module:domain~DatumSamplesType} Status String status property values.\n * @property {module:domain~DatumSamplesType} Tag Arbitrary string names.\n * @alias module:domain~DatumSamplesTypes\n */\nconst DatumSamplesTypes = DatumSamplesType.enumsValue(DatumSamplesTypeValues);\n\nexport default DatumSamplesTypes;\n","import KeydEnum from \"../util/keyedEnum.js\";\n\n/**\n * An enumeration of datum stream types.\n *\n * @extends module:util~KeydEnum\n * @alias module:domain~DatumStreamType\n */\nexport class DatumStreamType extends KeydEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this type\n\t * @param {string} key the key value associated with this type\n\t */\n\tconstructor(name, key) {\n\t\tsuper(name, key);\n\t}\n\n\t/**\n\t * Get the {@link module:domain~DatumStreamType} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn DatumStreamTypeValues;\n\t}\n}\n\nconst DatumStreamTypeValues = Object.freeze([\n\tnew DatumStreamType(\"Node\", \"n\"),\n\tnew DatumStreamType(\"Location\", \"l\"),\n]);\n\n/**\n * The enumeration of supported `DatumStreamType` values.\n *\n * @readonly\n * @enum {module:domain~DatumStreamType}\n * @property {module:domain~DatumStreamType} Node A node-based datum stream.\n * @property {module:domain~DatumStreamType} Location A location-based datum stream.\n * @alias module:domain~DatumStreamType\n */\nconst DatumStreamTypes = DatumStreamType.enumsValue(DatumStreamTypeValues);\n\nexport default DatumStreamTypes;\n","import { DatumStreamType, default as DatumStreamTypes } from \"./datumStreamType.js\";\nimport DatumSamplesTypes from \"./datumSamplesType.js\";\n\n/**\n * Metadata about a datum stream.\n *\n * @alias module:domain~DatumStreamMetadata\n */\nclass DatumStreamMetadata {\n\t/**\n\t * Constructor.\n\t * @param {string} streamId         the stream ID\n\t * @param {string} zone             the time zone ID\n\t * @param {DatumStreamType} kind    the stream type\n\t * @param {number} objectId         the node or location ID\n\t * @param {string} sourceId         the source ID\n\t * @param {string[]} iNames         the instantaneous property name array\n\t * @param {string[]} aNames         the accumulating property name array\n\t * @param {string[]} sNames         the status property name array\n\t */\n\tconstructor(streamId, zone, kind, objectId, sourceId, iNames, aNames, sNames) {\n\t\tthis._streamId = streamId;\n\t\tthis._zone = zone;\n\t\tthis._kind = kind instanceof DatumStreamType ? kind : DatumStreamTypes.Node;\n\t\tthis._objectId = objectId;\n\t\tthis._sourceId = sourceId;\n\t\tthis._iNames = Array.isArray(iNames) ? iNames : undefined;\n\t\tthis._aNames = Array.isArray(aNames) ? aNames : undefined;\n\t\tthis._sNames = Array.isArray(sNames) ? sNames : undefined;\n\t\tif (this.constructor === DatumStreamMetadata) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Create a new node datum stream metadata instance.\n\t * @param {string} streamId         the stream ID\n\t * @param {string} zone             the time zone ID\n\t * @param {number} nodeId           the node ID\n\t * @param {string} sourceId         the source ID\n\t * @param {string[]} iNames         the instantaneous property name array\n\t * @param {string[]} aNames         the accumulating property name array\n\t * @param {string[]} sNames         the status property name array\n\t * @returns {DatumStreamMetadata} the new metadata instance\n\t */\n\tstatic nodeMetadata(streamId, zone, nodeId, sourceId, iNames, aNames, sNames) {\n\t\treturn new DatumStreamMetadata(\n\t\t\tstreamId,\n\t\t\tzone,\n\t\t\tDatumStreamTypes.Node,\n\t\t\tnodeId,\n\t\t\tsourceId,\n\t\t\tiNames,\n\t\t\taNames,\n\t\t\tsNames\n\t\t);\n\t}\n\n\t/**\n\t * Create a new location datum stream metadata instance.\n\t * @param {string} streamId         the stream ID\n\t * @param {string} zone             the time zone ID\n\t * @param {number} locationId       the location ID\n\t * @param {string} sourceId         the source ID\n\t * @param {string[]} iNames         the instantaneous property name array\n\t * @param {string[]} aNames         the accumulating property name array\n\t * @param {string[]} sNames         the status property name array\n\t * @returns {DatumStreamMetadata} the new metadata instance\n\t */\n\tstatic locationMetadata(streamId, zone, locationId, sourceId, iNames, aNames, sNames) {\n\t\treturn new DatumStreamMetadata(\n\t\t\tstreamId,\n\t\t\tzone,\n\t\t\tDatumStreamTypes.Location,\n\t\t\tlocationId,\n\t\t\tsourceId,\n\t\t\tiNames,\n\t\t\taNames,\n\t\t\tsNames\n\t\t);\n\t}\n\n\t/**\n\t * The stream ID, for example `7714f762-2361-4ec2-98ab-7e96807b32a6`.\n\t * @type {string}\n\t */\n\tget streamId() {\n\t\treturn this._streamId;\n\t}\n\n\t/**\n\t * The stream time zone ID, for example `Pacific/Auckland`.\n\t * @type {string}\n\t */\n\tget timeZoneId() {\n\t\treturn this._zone;\n\t}\n\n\t/**\n\t * The stream type.\n\t * @type {DatumStreamType}\n\t */\n\tget kind() {\n\t\treturn this._kind;\n\t}\n\n\t/**\n\t * The stream objece (node or location) ID.\n\t * @type {number}\n\t */\n\tget objectId() {\n\t\treturn this._objectId;\n\t}\n\n\t/**\n\t * The stream object ID (if the `kind` is `Node`), otherwise `undefined`.\n\t * @type {number}\n\t */\n\tget nodeId() {\n\t\treturn DatumStreamTypes.Node.equals(this._kind) ? this._objectId : undefined;\n\t}\n\n\t/**\n\t * The stream object ID (if the `kind` is `Location`), otherewise `undefined`.\n\t * @type {number}\n\t */\n\tget locationId() {\n\t\treturn DatumStreamTypes.Location.equals(this._kind) ? this._objectId : undefined;\n\t}\n\n\t/**\n\t * The stream source ID.\n\t * @type {string}\n\t */\n\tget sourceId() {\n\t\treturn this._sourceId;\n\t}\n\n\t/**\n\t * The instantaneous property names array length.\n\t * @type {number}\n\t */\n\tget instantaneousLength() {\n\t\treturn Array.isArray(this._iNames) ? this._iNames.length : 0;\n\t}\n\n\t/**\n\t * The instantaneous property names array.\n\t * @type {Array<String>}\n\t */\n\tget instantaneousNames() {\n\t\treturn this._iNames;\n\t}\n\n\t/**\n\t * The accumulating property names array length.\n\t * @type {number}\n\t */\n\tget accumulatingLength() {\n\t\treturn Array.isArray(this._aNames) ? this._aNames.length : 0;\n\t}\n\n\t/**\n\t * The accumulating property names array.\n\t * @type {Array<String>}\n\t */\n\tget accumulatingNames() {\n\t\treturn this._aNames;\n\t}\n\n\t/**\n\t * The status property names array length.\n\t * @type {number}\n\t */\n\tget statusLength() {\n\t\treturn Array.isArray(this._sNames) ? this._sNames.length : 0;\n\t}\n\n\t/**\n\t * The status property names array.\n\t * @type {Array<String>}\n\t */\n\tget statusNames() {\n\t\treturn this._sNames;\n\t}\n\n\t/**\n\t * The total number of instantaneous, accumulating, and status property names.\n\t * @type {number}\n\t */\n\tget propertyNamesLength() {\n\t\treturn this.instantaneousLength + this.accumulatingLength + this.statusLength;\n\t}\n\n\t/**\n\t * Get all stream property names, in order of instantaneous, accumulating, and status.\n\t * @type {string[]}\n\t */\n\tget propertyNames() {\n\t\tconst len = this.propertyNamesLength;\n\t\tif (len < 1) {\n\t\t\treturn null;\n\t\t}\n\t\tlet names = [];\n\t\tif (this.instantaneousLength > 0) {\n\t\t\tnames = names.concat(this._iNames);\n\t\t}\n\t\tif (this.accumulatingLength > 0) {\n\t\t\tnames = names.concat(this._aNames);\n\t\t}\n\t\tif (this.statusLength > 0) {\n\t\t\tnames = names.concat(this._sNames);\n\t\t}\n\t\treturn names;\n\t}\n\n\t/**\n\t * Get the property names for a given samples type.\n\t * @param {DatumSamplesType} samplesType the type of property names to return; `Tag` is not supported\n\t * @returns {string[]} the property names for the given type, or `null` if none available\n\t */\n\tpropertyNamesForType(samplesType) {\n\t\tif (DatumSamplesTypes.Instantaneous.equals(samplesType)) {\n\t\t\treturn this._iNames;\n\t\t} else if (DatumSamplesTypes.Accumulating.equals(samplesType)) {\n\t\t\treturn this._aNames;\n\t\t} else if (DatumSamplesTypes.Status.equals(samplesType)) {\n\t\t\treturn this._sNames;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get this object as a standard JSON encoded string value.\n\t *\n\t * An example result looks like this:\n\t *\n\t * ```\n\t * {\n\t *       \"streamId\": \"7714f762-2361-4ec2-98ab-7e96807b32a6\",\n\t *       \"zone\": \"Pacific/Auckland\",\n\t *       \"kind\": \"n\",\n\t *       \"objectId\": 123,\n\t *       \"sourceId\": \"/power/1\",\n\t *       \"i\": [\"watts\", \"current\",  \"voltage\", \"frequency\"],\n\t *       \"a\": [\"wattHours\"]\n\t * }\n\t * ```\n\t *\n\t * @return {string} the JSON encoded string\n\t */\n\ttoJsonEncoding() {\n\t\tconst result = {\n\t\t\tstreamId: this._streamId,\n\t\t\tzone: this._zone,\n\t\t\tkind: this._kind ? this._kind.key : DatumSamplesTypes.Node.key,\n\t\t\tobjectId: this._objectId,\n\t\t\tsourceId: this._sourceId,\n\t\t};\n\t\tif (this.instantaneousLength > 0) {\n\t\t\tresult.i = this._iNames;\n\t\t}\n\t\tif (this.accumulatingLength > 0) {\n\t\t\tresult.a = this._aNames;\n\t\t}\n\t\tif (this.statusLength > 0) {\n\t\t\tresult.s = this._sNames;\n\t\t}\n\t\treturn JSON.stringify(result);\n\t}\n\n\t/**\n\t * Parse a JSON string into a {@link module:domain~DatumStreamMetadata} instance.\n\t *\n\t * The JSON must be encoded the same way {@link module:domain~DatumStreamMetadata#toJsonEncoding} does.\n\t *\n\t * @param {string} json the JSON to parse\n\t * @returns {module:domain~DatumStreamMetadata} the stream metadata instance\n\t */\n\tstatic fromJsonEncoding(json) {\n\t\treturn this.fromJsonObject(JSON.parse(json));\n\t}\n\n\t/**\n\t * Create a metadata instance from an object parsed from a JSON string.\n\t *\n\t * The object must have been parsed from JSON that was encoded the same way {@link module:domain~DatumStreamMetadata#toJsonEncoding} does.\n\t *\n\t * @param {string} obj the object parsed from JSON\n\t * @returns {module:domain~DatumStreamMetadata} the stream metadata instance\n\t */\n\tstatic fromJsonObject(obj) {\n\t\tlet kind, i, a, s;\n\t\tif (obj) {\n\t\t\tkind = DatumStreamType.valueOf(obj.kind);\n\t\t\ti = Array.isArray(obj.i) ? obj.i : undefined;\n\t\t\ta = Array.isArray(obj.a) ? obj.a : undefined;\n\t\t\ts = Array.isArray(obj.s) ? obj.s : undefined;\n\t\t\treturn new DatumStreamMetadata(\n\t\t\t\tobj.streamId,\n\t\t\t\tobj.zone,\n\t\t\t\tkind,\n\t\t\t\tobj.objectId,\n\t\t\t\tobj.sourceId,\n\t\t\t\ti,\n\t\t\t\ta,\n\t\t\t\ts\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default DatumStreamMetadata;\n","import Enum from \"./enum.js\";\n\n/**\n * An immutable enum-like object with an associated bitmask support.\n *\n * This class is essentially abstract, and must be extended by another\n * class that overrides the inerited {@link module:util~Enum.enumValues} method.\n *\n * @abstract\n * @extends module:util~Enum\n * @alias module:util~BitmaskEnum\n */\nclass BitmaskEnum extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t * @param {number} bitNumber the bit offset, starting from `1` for the least significant bit\n\t */\n\tconstructor(name, bitNumber) {\n\t\tsuper(name);\n\t\tthis._bitNumber = bitNumber;\n\t\tif (this.constructor === BitmaskEnum) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the bit offset value, starting from `1` for the least significant bit.\n\t *\n\t * @returns {number} the value\n\t */\n\tget bitmaskBitNumber() {\n\t\treturn this._bitNumber;\n\t}\n\n\t/**\n\t * Get the bit offset value, starting from `0` for the least significant bit.\n\t *\n\t * @returns {number} the value\n\t */\n\tget bitmaskBitOffset() {\n\t\treturn this._bitNumber - 1;\n\t}\n\n\t/**\n\t * Get a `BitmaskEnum` objects for a bit number.\n\t *\n\t * @param {number} bitNumber\n\t *        a bit number value of the `BitmaskEnum` object to find\n\t * @param {Iterable<BitmaskEnum>} values\n\t *        the complete set of possible `BitmaskEnum` objects\n\t * @return {BitmaskEnum} the matching `BitmaskEnum`, or `null`\n\t */\n\tstatic enumForBitNumber(bitNumber, values) {\n\t\tfor (const c of values) {\n\t\t\tconst n = c.bitmaskBitNumber;\n\t\t\tif (n == bitNumber) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get a bitmask value for a set of {@code Bitmaskable} objects.\n\t *\n\t * @param {Iterable<BitmaskEnum>} maskables\n\t *        the set of `BitmaskEnum` objects\n\t * @return {number} a bitmask value of all {@link module:util~BitmaskEnum#bitmaskBitOffset()}\n\t *         values of the given `maskables`\n\t */\n\tstatic bitmaskValue(maskables) {\n\t\tvar mask = 0;\n\t\tif (maskables != null) {\n\t\t\tfor (const c of maskables) {\n\t\t\t\tif (c.bitmaskBitOffset >= 0) {\n\t\t\t\t\tmask |= 1 << c.bitmaskBitOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mask;\n\t}\n\n\t/**\n\t * Convert a bitmask value into a set of {@code Bitmaskable} objects.\n\t *\n\t * @param {number} mask\n\t *        a bitmask value of a set of {@code Bitmaskable} objects\n\t * @param {BitmaskEnum} clazz\n\t *        the class of an enumeration of `BitmaskEnum` objects\n\t * @return {Set<BitmaskEnum>} a set of `BitmaskEnum` objects\n\t */\n\tstatic setForBitmaskEnum(mask, clazz) {\n\t\treturn BitmaskEnum.setForBitmask(mask, clazz.enumValues());\n\t}\n\n\t/**\n\t * Convert a bitmask value into a set of `BitmaskEnum` objects.\n\t *\n\t * @param {number} mask\n\t *        a bitmask value of a set of `BitmaskEnum` objects\n\t * @param {Iterable<BitmaskEnum>} values\n\t *        the complete set of possible `BitmaskEnum` objects\n\t * @return {Set<BitmaskEnum>} a set of `BitmaskEnum` objects\n\t */\n\tstatic setForBitmask(mask, values) {\n\t\tif (mask < 1) {\n\t\t\treturn new Set();\n\t\t}\n\t\tvar set = new Set();\n\t\tfor (const c of values) {\n\t\t\tconst b = c.bitmaskBitOffset;\n\t\t\tif (b >= 0 && ((mask >> b) & 1) == 1) {\n\t\t\t\tset.add(c);\n\t\t\t}\n\t\t}\n\t\treturn set;\n\t}\n}\n\nexport default BitmaskEnum;\n","import BitmaskEnum from \"../util/bitmaskEnum.js\";\n\n/**\n * An enumeration of standardized device operating states.\n *\n * @extends module:util~Enum\n * @alias module:domain~DeviceOperatingState\n */\nclass DeviceOperatingState extends BitmaskEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t * @param {number} bitNumber the bit offset, starting from `1` for the least significant bit\n\t */\n\tconstructor(name, bitNumber) {\n\t\tsuper(name, bitNumber);\n\t\tif (this.constructor === DeviceOperatingState) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the state code value.\n\t *\n\t * @returns {number} the code\n\t */\n\tget code() {\n\t\treturn this.bitmaskBitNumber;\n\t}\n\n\t/**\n\t * Get an enum for a code value.\n\t *\n\t * @param {number} code the code to look for\n\t * @returns {DeviceOperatingState} the state, or `null` if not found\n\t */\n\tstatic forCode(code) {\n\t\treturn BitmaskEnum.enumForBitNumber(code, DeviceOperatingStateValues);\n\t}\n\n\t/**\n\t * Get the {@link module:domain~DeviceOperatingStates} values.\n\t *\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn DeviceOperatingStateValues;\n\t}\n}\n\nconst DeviceOperatingStateValues = Object.freeze([\n\tnew DeviceOperatingState(\"Unknown\", 0),\n\tnew DeviceOperatingState(\"Normal\", 1),\n\tnew DeviceOperatingState(\"Starting\", 2),\n\tnew DeviceOperatingState(\"Standby\", 3),\n\tnew DeviceOperatingState(\"Shutdown\", 4),\n\tnew DeviceOperatingState(\"Fault\", 5),\n\tnew DeviceOperatingState(\"Disabled\", 6),\n\tnew DeviceOperatingState(\"Recovery\", 7),\n\tnew DeviceOperatingState(\"Override\", 8),\n]);\n\n/**\n * The enumeration of supported DeviceOperatingState values.\n *\n * @readonly\n * @enum {module:domain~DeviceOperatingState}\n * @property {module:domain~DeviceOperatingState} Unknown an unknown state\n * @property {module:domain~DeviceOperatingState} Normal normal operating state\n * @property {module:domain~DeviceOperatingState} Starting a startup/initializing state\n * @property {module:domain~DeviceOperatingState} Standby a standby/low power mode\n * @property {module:domain~DeviceOperatingState} Shutdown a shutdown/off state\n * @property {module:domain~DeviceOperatingState} Fault a faulty or error condition\n * @property {module:domain~DeviceOperatingState} Disabled a disabled state\n * @property {module:domain~DeviceOperatingState} Recovery a recovery state\n * @property {module:domain~DeviceOperatingState} Override a manual or overridden state\n * @alias module:domain~DeviceOperatingStates\n */\nconst DeviceOperatingStates = DeviceOperatingState.enumsValue(DeviceOperatingStateValues);\n\nexport default DeviceOperatingStates;\nexport { DeviceOperatingState };\n","/**\n * General metadata with a basic structure.\n *\n * This metadata can be associated with a variety of objects within SolarNetwork, such\n * as users, nodes, and datum.\n *\n * @alias module:domain~GeneralMetadata\n */\nclass GeneralMetadata {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {Map<string, *>} [info] the general metadata map\n\t * @param {Map<string, Map<string, *>>} [propertyInfo] the property metadata map\n\t * @param {Set<string>} [tags] the tags\n\t */\n\tconstructor(info, propertyInfo, tags) {\n\t\tthis.info = info || null;\n\t\tthis.propertyInfo = propertyInfo || null;\n\t\tthis.tags = tags instanceof Set ? tags : Array.isArray(tags) ? new Set(tags) : null;\n\t}\n\n\t/**\n\t * Get this object as a standard JSON encoded string value.\n\t *\n\t * @return {string} the JSON encoded string\n\t */\n\ttoJsonEncoding() {\n\t\tconst result = {};\n\t\tconst info = this.info;\n\t\tif (info) {\n\t\t\tresult[\"m\"] = stringMapToObject(info);\n\t\t}\n\t\tconst propertyInfo = this.propertyInfo;\n\t\tif (propertyInfo) {\n\t\t\tresult[\"pm\"] = stringMapToObject(propertyInfo);\n\t\t}\n\t\tconst tags = this.tags;\n\t\tif (tags) {\n\t\t\tresult[\"t\"] = Array.from(tags);\n\t\t}\n\n\t\treturn JSON.stringify(result);\n\t}\n\n\t/**\n\t * Parse a JSON string into a {@link module:domain~GeneralMetadata} instance.\n\t *\n\t * The JSON must be encoded the same way {@link module:domain~GeneralMetadata#toJsonEncoding} does.\n\t *\n\t * @param {string} json the JSON to parse\n\t * @returns {module:domain~GeneralMetadata} the metadata instance\n\t */\n\tstatic fromJsonEncoding(json) {\n\t\tlet m, pm, t;\n\t\tif (json) {\n\t\t\tconst obj = JSON.parse(json);\n\t\t\tm = obj[\"m\"] ? objectToStringMap(obj[\"m\"]) : null;\n\t\t\tpm = obj[\"pm\"] ? objectToStringMap(obj[\"pm\"]) : null;\n\t\t\tt = Array.isArray(obj[\"t\"]) ? new Set(obj[\"t\"]) : null;\n\t\t}\n\t\treturn new GeneralMetadata(m, pm, t);\n\t}\n}\n\n/**\n * Convert a `Map` into a simple object.\n *\n * The keys are assumed to be strings. Values that are themselves `Map` instances\n * will be converted to simple objects as well.\n *\n * @param {Map<string, *>} strMap a Map with string keys; nested Map objects are also handled\n * @returns {object} a simple object\n * @see {@link objectToStringMap} for the reverse conversion\n * @alias module:domain~stringMapToObject\n */\nfunction stringMapToObject(strMap) {\n\tconst obj = Object.create(null);\n\tif (strMap) {\n\t\tfor (const [k, v] of strMap) {\n\t\t\tobj[k] = v instanceof Map ? stringMapToObject(v) : v;\n\t\t}\n\t}\n\treturn obj;\n}\n\n/**\n * Convert a simple object into a `Map` instance.\n *\n * Property values that are themselves objects will be converted into `Map`\n * instances as well.\n *\n * @param {object} obj a simple object\n * @returns {Map<string, *>} a Map with string keys; nested Map objects are also handled\n * @see {@link module:domain~stringMapToObject} for the reverse conversion\n * @alias module:domain~objectToStringMap\n */\nfunction objectToStringMap(obj) {\n\tconst strMap = new Map();\n\tif (obj) {\n\t\tfor (const k of Object.keys(obj)) {\n\t\t\tconst v = obj[k];\n\t\t\tstrMap.set(k, typeof v === \"object\" ? objectToStringMap(v) : v);\n\t\t}\n\t}\n\treturn strMap;\n}\n\nexport default GeneralMetadata;\nexport { stringMapToObject, objectToStringMap };\n","import Enum from \"../util/enum.js\";\n\n/**\n * A named instruction state.\n *\n * @extends module:util~Enum\n * @alias module:domain~InstructionState\n */\nclass InstructionState extends Enum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t */\n\tconstructor(name) {\n\t\tsuper(name);\n\t\tif (this.constructor === InstructionState) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the {@link module:domain~InstructionStates} values.\n\t *\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn InstructionStateValues;\n\t}\n}\n\nconst InstructionStateValues = Object.freeze([\n\tnew InstructionState(\"Unknown\"),\n\tnew InstructionState(\"Queued\"),\n\tnew InstructionState(\"Received\"),\n\tnew InstructionState(\"Executing\"),\n\tnew InstructionState(\"Declined\"),\n\tnew InstructionState(\"Completed\"),\n]);\n\n/**\n * The enumeration of supported InstructionState values.\n *\n * @readonly\n * @enum {module:domain~InstructionState}\n * @property {module:domain~InstructionState} Unknown an unknown state\n * @property {module:domain~InstructionState} Queued the instruction has been received by SolarNet but not yet delivered to its destination\n * @property {module:domain~InstructionState} Received the instruction has been delivered to its destination but not yet acted upon\n * @property {module:domain~InstructionState} Executed the instruction is currently being acted upon\n * @property {module:domain~InstructionState} Declined the destination has declined to execute the instruction, or the execution failed\n * @property {module:domain~InstructionState} Completed the destination has executed successfully\n * @alias module:domain~InstructionStates\n */\nconst InstructionStates = InstructionState.enumsValue(InstructionStateValues);\n\nexport default InstructionStates;\nexport { InstructionState };\n","import ComparableEnum from \"../util/comparableEnum.js\";\n\n/**\n * A location precision object for use with defining named geographic precision.\n *\n * @extends module:util~ComparableEnum\n * @alias module:domain~LocationPrecision\n */\nclass LocationPrecision extends ComparableEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the unique name for this precision\n\t * @param {number} precision a relative precision value for this precision\n\t */\n\tconstructor(name, precision) {\n\t\tsuper(name, precision);\n\t\tif (this.constructor === LocationPrecision) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the relative precision value.\n\t *\n\t * This is an alias for {@link #name}.\n\t *\n\t * @returns {number} the precision\n\t */\n\tget precision() {\n\t\treturn this.value;\n\t}\n\n\t/**\n\t * Get the {@link module:domain~LocationPrecisions} values.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn LocationPrecisionValues;\n\t}\n}\n\nconst LocationPrecisionValues = Object.freeze([\n\tnew LocationPrecision(\"LatLong\", 1),\n\tnew LocationPrecision(\"Block\", 5),\n\tnew LocationPrecision(\"Street\", 10),\n\tnew LocationPrecision(\"PostalCode\", 20),\n\tnew LocationPrecision(\"Locality\", 30),\n\tnew LocationPrecision(\"StateOrProvince\", 40),\n\tnew LocationPrecision(\"Region\", 50),\n\tnew LocationPrecision(\"TimeZone\", 60),\n\tnew LocationPrecision(\"Country\", 70),\n]);\n\n/**\n * The enumeration of supported LocationPrecision values.\n *\n * @readonly\n * @enum {module:domain~LocationPrecision}\n * @property {module:domain~LocationPrecision} LatLong GPS coordinates\n * @property {module:domain~LocationPrecision} Block a city block\n * @property {module:domain~LocationPrecision} Street a street\n * @property {module:domain~LocationPrecision} PostalCode a postal code (or \"zip code\")\n * @property {module:domain~LocationPrecision} Locality a town or city\n * @property {module:domain~LocationPrecision} StateOrProvince a state or province\n * @property {module:domain~LocationPrecision} Region a large region\n * @property {module:domain~LocationPrecision} TimeZone a time zone\n * @property {module:domain~LocationPrecision} Country a country\n * @alias module:domain~LocationPrecisions\n */\nconst LocationPrecisions = LocationPrecision.enumsValue(LocationPrecisionValues);\n\nexport default LocationPrecisions;\nexport { LocationPrecision };\n","import { Aggregation } from \"./aggregation.js\";\nimport { LocationPrecision } from \"./locationPrecision.js\";\n\n/**\n * Get a Set from a Set or array or object, returning `null` if the set would be empty.\n *\n * @param {Object[]|Set<*>} obj the array, Set, or singleton object to get as a Set\n * @returns {Set<*>} the Set, or `null`\n * @private\n */\nfunction setOrNull(obj) {\n\tlet result = null;\n\tif (obj instanceof Set) {\n\t\tresult = obj.size > 0 ? obj : null;\n\t} else if (Array.isArray(obj)) {\n\t\tresult = obj.length > 0 ? new Set(obj) : null;\n\t} else if (obj) {\n\t\tresult = new Set([obj]);\n\t}\n\treturn result;\n}\n\n/**\n * Merge two sets.\n *\n * @param {Object[]|Set<*>} [set1] the first set\n * @param {Object[]|Set<*>} [set2] the second set\n * @returns {Set<*>} the merged Set, or `null` if neither arguments are sets or\n *                   neither argument have any values\n * @private\n */\nfunction mergedSets(set1, set2) {\n\tlet s1 = setOrNull(set1);\n\tlet s2 = setOrNull(set2);\n\tif (s1 === null && s2 === null) {\n\t\treturn null;\n\t} else if (s2 === null) {\n\t\treturn s1;\n\t} else if (s1 === null) {\n\t\treturn s2;\n\t} else {\n\t\tfor (let v of s2.values()) {\n\t\t\ts1.add(v);\n\t\t}\n\t\treturn s1;\n\t}\n}\n\n/**\n * An immutable set of security restrictions that can be attached to other objects, like auth tokens.\n *\n * Use the {@link module:domain~SecurityPolicyBuilder} to create instances of this class with a fluent API.\n * @alias module:domain~SecurityPolicy\n */\nclass SecurityPolicy {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {number[]|Set<number>} [nodeIds] the node IDs to restrict to, or `null` for no restriction\n\t * @param {string[]|Set<string>} [sourceIds] the source ID to restrict to, or `null` for no restriction\n\t * @param {module:domain~Aggregation[]|Set<module:domain~Aggregation>} [aggregations] the aggregation names to restrict to, or `null` for no restriction\n\t * @param {module:domain~Aggregation} [minAggregation] if specified, a minimum aggregation level that is allowed\n\t * @param {Set<module:domain~LocationPrecision>} [locationPrecisions] the location precision names to restrict to, or `null` for no restriction\n\t * @param {module:domain~LocationPrecision} [minLocationPrecision] if specified, a minimum location precision that is allowed\n\t * @param {Set<string>} [nodeMetadataPaths] the `SolarNodeMetadata` paths to restrict to, or `null` for no restriction\n\t * @param {Set<string>} [userMetadataPaths] the `UserNodeMetadata` paths to restrict to, or `null` for no restriction\n\t */\n\tconstructor(\n\t\tnodeIds,\n\t\tsourceIds,\n\t\taggregations,\n\t\tminAggregation,\n\t\tlocationPrecisions,\n\t\tminLocationPrecision,\n\t\tnodeMetadataPaths,\n\t\tuserMetadataPaths\n\t) {\n\t\tthis._nodeIds = setOrNull(nodeIds);\n\t\tthis._sourceIds = setOrNull(sourceIds);\n\t\tthis._aggregations = setOrNull(aggregations);\n\t\tthis._minAggregation = minAggregation instanceof Aggregation ? minAggregation : null;\n\t\tthis._locationPrecisions = setOrNull(locationPrecisions);\n\t\tthis._minLocationPrecision =\n\t\t\tminLocationPrecision instanceof LocationPrecision ? minLocationPrecision : null;\n\t\tthis._nodeMetadataPaths = setOrNull(nodeMetadataPaths);\n\t\tthis._userMetadataPaths = setOrNull(userMetadataPaths);\n\t\tif (this.constructor === SecurityPolicy) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the node IDs.\n\t *\n\t * @returns {Set<number>} the node IDs, or `null`\n\t */\n\tget nodeIds() {\n\t\treturn this._nodeIds;\n\t}\n\n\t/**\n\t * Get the source IDs.\n\t *\n\t * @returns {Set<string>} the source IDs, or `null`\n\t */\n\tget sourceIds() {\n\t\treturn this._sourceIds;\n\t}\n\n\t/**\n\t * Get the aggregations.\n\t *\n\t * @returns {Set<module:domain~Aggregation>} the aggregations, or `null`\n\t */\n\tget aggregations() {\n\t\treturn this._aggregations;\n\t}\n\n\t/**\n\t * Get the location precisions.\n\t *\n\t * @returns {Set<module:domain~LocationPrecision>} the precisions, or `null`\n\t */\n\tget locationPrecisions() {\n\t\treturn this._locationPrecisions;\n\t}\n\n\t/**\n\t * Get the minimum aggregation.\n\t *\n\t * @returns {module:domain~Aggregation} the minimum aggregation, or `null`\n\t */\n\tget minAggregation() {\n\t\treturn this._minAggregation;\n\t}\n\n\t/**\n\t * Get the minimum location precision.\n\t *\n\t * @returns {module:domain~LocationPrecision} the minimum precision, or `null`\n\t */\n\tget minLocationPrecision() {\n\t\treturn this._minLocationPrecision;\n\t}\n\n\t/**\n\t * Get the node metadata paths.\n\t *\n\t * @returns {Set<string>} the node metadata paths, or `null`\n\t */\n\tget nodeMetadataPaths() {\n\t\treturn this._nodeMetadataPaths;\n\t}\n\n\t/**\n\t * Get the user metadata paths.\n\t *\n\t * @returns {Set<string>} the user metadata paths, or `null`\n\t */\n\tget userMetadataPaths() {\n\t\treturn this._userMetadataPaths;\n\t}\n\n\t/**\n\t * Get this object as a standard JSON encoded string value.\n\t *\n\t * @return {string} the JSON encoded string\n\t */\n\ttoJsonEncoding() {\n\t\tlet result = {};\n\t\tlet val = this.nodeIds;\n\t\tif (val) {\n\t\t\tresult.nodeIds = Array.from(val);\n\t\t}\n\n\t\tval = this.sourceIds;\n\t\tif (val) {\n\t\t\tresult.sourceIds = Array.from(val);\n\t\t}\n\n\t\tval = this.aggregations;\n\t\tif (val) {\n\t\t\tresult.aggregations = Array.from(val).map((e) => e.name);\n\t\t}\n\n\t\tval = this.locationPrecisions;\n\t\tif (val) {\n\t\t\tresult.locationPrecisions = Array.from(val).map((e) => e.name);\n\t\t}\n\n\t\tval = this.minAggregation;\n\t\tif (val) {\n\t\t\tif (result.length > 0) {\n\t\t\t\tresult += \"&\";\n\t\t\t}\n\t\t\tresult.minAggregation = val.name;\n\t\t}\n\n\t\tval = this.minLocationPrecision;\n\t\tif (val) {\n\t\t\tresult.minLocationPrecision = val.name;\n\t\t}\n\n\t\tval = this.nodeMetadataPaths;\n\t\tif (val) {\n\t\t\tresult.nodeMetadataPaths = Array.from(val);\n\t\t}\n\n\t\tval = this.userMetadataPaths;\n\t\tif (val) {\n\t\t\tresult.userMetadataPaths = Array.from(val);\n\t\t}\n\n\t\treturn JSON.stringify(result);\n\t}\n}\n\nconst MIN_AGGREGATION_CACHE = new Map(); // Map<string, Set<Aggregation>>\nconst MIN_LOCATION_PRECISION_CACHE = new Map(); // Map<string, Set<LocationPrecision>>\n\n/**\n * A mutable builder object for {@link module:domain~SecurityPolicy} instances.\n * @alias module:domain~SecurityPolicyBuilder\n */\nclass SecurityPolicyBuilder {\n\t/**\n\t * Apply all properties from another SecurityPolicy.\n\t *\n\t * @param {module:domain~SecurityPolicy} policy the SecurityPolicy to apply\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithPolicy(policy) {\n\t\tif (policy) {\n\t\t\tthis.withAggregations(policy.aggregations)\n\t\t\t\t.withMinAggregation(policy.minAggregation)\n\t\t\t\t.withLocationPrecisions(policy.locationPrecisions)\n\t\t\t\t.withMinLocationPrecision(policy.minLocationPrecision)\n\t\t\t\t.withNodeIds(policy.nodeIds)\n\t\t\t\t.withSourceIds(policy.sourceIds)\n\t\t\t\t.withNodeMetadataPaths(policy.nodeMetadataPaths)\n\t\t\t\t.withUserMetadataPaths(policy.userMetadataPaths);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Merge all properties from another SecurityPolicy.\n\t *\n\t * @param {module:domain~SecurityPolicy} policy the SecurityPolicy to merge\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddPolicy(policy) {\n\t\tif (policy) {\n\t\t\tthis.addAggregations(policy.aggregations)\n\t\t\t\t.addLocationPrecisions(policy.locationPrecisions)\n\t\t\t\t.addNodeIds(policy.nodeIds)\n\t\t\t\t.addSourceIds(policy.sourceIds)\n\t\t\t\t.addNodeMetadataPaths(policy.nodeMetadataPaths)\n\t\t\t\t.addUserMetadataPaths(policy.userMetadataPaths);\n\t\t\tif (policy.minAggregation) {\n\t\t\t\tthis.withMinAggregation(policy.minAggregation);\n\t\t\t}\n\t\t\tif (policy.minLocationPrecision) {\n\t\t\t\tthis.withMinLocationPrecision(policy.minLocationPrecision);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the node IDs.\n\t *\n\t * @param {number[]|Set<number>} nodeIds the node IDs to use\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithNodeIds(nodeIds) {\n\t\tthis.nodeIds = setOrNull(nodeIds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a set of node IDs.\n\t *\n\t * @param {number[]|Set<number>} nodeIds the node IDs to add\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddNodeIds(nodeIds) {\n\t\treturn this.withNodeIds(mergedSets(this.nodeIds, nodeIds));\n\t}\n\n\t/**\n\t * Set the node metadata paths.\n\t *\n\t * @param {string[]|Set<string>} nodeMetadataPaths the path expressions to use\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithNodeMetadataPaths(nodeMetadataPaths) {\n\t\tthis.nodeMetadataPaths = setOrNull(nodeMetadataPaths);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a set of node metadata paths.\n\t *\n\t * @param {string[]|Set<string>} nodeMetadataPaths the path expressions to add\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddNodeMetadataPaths(nodeMetadataPaths) {\n\t\treturn this.withNodeMetadataPaths(mergedSets(this.nodeMetadataPaths, nodeMetadataPaths));\n\t}\n\n\t/**\n\t * Set the user metadata paths.\n\t *\n\t * @param {string[]|Set<string>} userMetadataPaths the path expressions to use\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithUserMetadataPaths(userMetadataPaths) {\n\t\tthis.userMetadataPaths = setOrNull(userMetadataPaths);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a set of user metadata paths.\n\t *\n\t * @param {string[]|Set<string>} userMetadataPaths the path expressions to add\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddUserMetadataPaths(userMetadataPaths) {\n\t\treturn this.withUserMetadataPaths(mergedSets(this.userMetadataPaths, userMetadataPaths));\n\t}\n\n\t/**\n\t * Set the source IDs.\n\t *\n\t * @param {string[]|Set<string>} sourceIds the source IDs to use\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithSourceIds(sourceIds) {\n\t\tthis.sourceIds = setOrNull(sourceIds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add source IDs.\n\t *\n\t * @param {string[]|Set<string>} sourceIds the source IDs to add\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddSourceIds(sourceIds) {\n\t\treturn this.withSourceIds(mergedSets(this.sourceIds, sourceIds));\n\t}\n\n\t/**\n\t * Set the aggregations.\n\t *\n\t * @param {module:domain~Aggregation[]|Set<module:domain~Aggregation>} aggregations the aggregations to use\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithAggregations(aggregations) {\n\t\tthis.aggregations = setOrNull(aggregations);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the aggregations.\n\t *\n\t * @param {module:domain~Aggregation[]|Set<module:domain~Aggregation>} aggregations the aggregations to add\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddAggregations(aggregations) {\n\t\treturn this.withAggregations(mergedSets(this.aggregations, aggregations));\n\t}\n\n\t/**\n\t * Set the location precisions.\n\t *\n\t * @param {module:domain~LocationPrecision[]|Set<module:domain~LocationPrecision>} locationPrecisions the precisions to use\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithLocationPrecisions(locationPrecisions) {\n\t\tthis.locationPrecisions = setOrNull(locationPrecisions);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add location precisions.\n\t *\n\t * @param {module:domain~LocationPrecision[]|Set<module:domain~LocationPrecision>} locationPrecisions the precisions to add\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\taddLocationPrecisions(locationPrecisions) {\n\t\treturn this.withLocationPrecisions(mergedSets(this.locationPrecisions, locationPrecisions));\n\t}\n\n\t/**\n\t * Set a minimum aggregation level.\n\t *\n\t * @param {module:domain~Aggregation} minAggregation the minimum aggregation level to set\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithMinAggregation(minAggregation) {\n\t\tthis.minAggregation = minAggregation;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Build the effective aggregation level set from the policy settings.\n\t *\n\t * This computes a set of aggregation levels based on the configured `minAggregation`\n\t * and `aggregations` values.\n\t *\n\t * @returns {Set<module:domain~Aggregation>} the aggregation set\n\t * @private\n\t */\n\tbuildAggregations() {\n\t\tconst minAggregation = this.minAggregation;\n\t\tconst aggregations = this.aggregations;\n\t\tif (!minAggregation && aggregations && aggregations.size > 0) {\n\t\t\treturn aggregations;\n\t\t} else if (!minAggregation) {\n\t\t\treturn null;\n\t\t}\n\t\treturn Aggregation.minimumEnumSet(minAggregation, MIN_AGGREGATION_CACHE);\n\t}\n\n\t/**\n\t * Treat the configured `locationPrecisions` set as a single\n\t * minimum value or a list of exact values.\n\t *\n\t * By default if `locationPrecisions` is configured with a single\n\t * value it will be treated as a <em>minimum</em> value, and any\n\t * {@link module:domain~LocationPrecision} with a {@link module:domain~LocationPrecision#precision} equal\n\t * to or higher than that value's level will be included in the generated\n\t * {@link module:domain~SecurityPolicy#locationPrecisions} set. Set this to\n\t * `null` to disable that behavior and treat\n\t * `locationPrecisions` as the exact values to include in the\n\t * generated {@link module:domain~SecurityPolicy#locationPrecisions} set.\n\t *\n\t * @param {module:domain~LocationPrecision|null} minLocationPrecision\n\t *        `null` to treat configured location precision values\n\t *        as-is, or else the minimum threshold\n\t * @returns {module:domain~SecurityPolicyBuilder} this object\n\t */\n\twithMinLocationPrecision(minLocationPrecision) {\n\t\tthis.minLocationPrecision = minLocationPrecision;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Build the effective aggregation level set from the policy settings.\n\t *\n\t * This computes a set of location precision levels based on the configured `minLocationPrecision`\n\t * and `locationPrecisions` values.\n\t *\n\t * @returns {Set<module:domain~LocationPrecision>} the precision set\n\t * @private\n\t */\n\tbuildLocationPrecisions() {\n\t\tconst minLocationPrecision = this.minLocationPrecision;\n\t\tconst locationPrecisions = this.locationPrecisions;\n\t\tif (!minLocationPrecision && locationPrecisions && locationPrecisions.size > 0) {\n\t\t\treturn locationPrecisions;\n\t\t} else if (!minLocationPrecision) {\n\t\t\treturn null;\n\t\t}\n\t\treturn LocationPrecision.minimumEnumSet(minLocationPrecision, MIN_LOCATION_PRECISION_CACHE);\n\t}\n\n\t/**\n\t * Create a new {@link SecurityPolicy} out of the properties configured on this builder.\n\t *\n\t * @returns {module:domain~SecurityPolicy} the new policy instance\n\t */\n\tbuild() {\n\t\treturn new SecurityPolicy(\n\t\t\tthis.nodeIds,\n\t\t\tthis.sourceIds,\n\t\t\tthis.buildAggregations(),\n\t\t\tthis.minAggregation,\n\t\t\tthis.buildLocationPrecisions(),\n\t\t\tthis.minLocationPrecision,\n\t\t\tthis.nodeMetadataPaths,\n\t\t\tthis.userMetadataPaths\n\t\t);\n\t}\n}\n\nexport default SecurityPolicy;\nexport { SecurityPolicyBuilder };\n","import BitmaskEnum from \"../util/bitmaskEnum.js\";\n\n/**\n * A named sky condition/observation.\n *\n * @extends module:util~BitmaskEnum\n * @alias module:domain~SkyCondition\n */\nclass SkyCondition extends BitmaskEnum {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string} name the name\n\t * @param {number} bitNumber the bit offset, starting from `1` for the least significant bit\n\t */\n\tconstructor(name, bitNumber) {\n\t\tsuper(name, bitNumber);\n\t\tif (this.constructor === SkyCondition) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the state code value.\n\t *\n\t * @returns {number} the code\n\t */\n\tget code() {\n\t\treturn this.bitmaskBitNumber;\n\t}\n\n\t/**\n\t * Get an enum for a code value.\n\t *\n\t * @param {number} code the code to look for\n\t * @returns {DeviceOperatingState} the state, or `null` if not found\n\t */\n\tstatic forCode(code) {\n\t\treturn BitmaskEnum.enumForBitNumber(code, SkyConditionValues);\n\t}\n\n\t/**\n\t * Get the {@link module:domain~SkyConditions} values.\n\t *\n\t * @inheritdoc\n\t */\n\tstatic enumValues() {\n\t\treturn SkyConditionValues;\n\t}\n}\n\nconst SkyConditionValues = Object.freeze([\n\tnew SkyCondition(\"Clear\", 1),\n\tnew SkyCondition(\"ScatteredClouds\", 2),\n\tnew SkyCondition(\"Cloudy\", 3),\n\tnew SkyCondition(\"Fog\", 4),\n\tnew SkyCondition(\"Drizzle\", 5),\n\tnew SkyCondition(\"ScatteredShowers\", 6),\n\tnew SkyCondition(\"Showers\", 7),\n\tnew SkyCondition(\"Rain\", 8),\n\tnew SkyCondition(\"Hail\", 9),\n\tnew SkyCondition(\"ScatteredSnow\", 10),\n\tnew SkyCondition(\"Snow\", 11),\n\tnew SkyCondition(\"Storm\", 12),\n\tnew SkyCondition(\"SevereStorm\", 13),\n\tnew SkyCondition(\"Thunder\", 14),\n\tnew SkyCondition(\"Windy\", 15),\n\tnew SkyCondition(\"Hazy\", 16),\n\tnew SkyCondition(\"Tornado\", 17),\n\tnew SkyCondition(\"Hurricane\", 18),\n\tnew SkyCondition(\"Dusty\", 19),\n]);\n\n/**\n * The enumeration of supported SkyCondition values.\n *\n * @readonly\n * @enum {module:domain~SkyCondition}\n * @property {module:domain~SkyCondition} Clear clear sky\n * @property {module:domain~SkyCondition} ScatteredClouds scattered/few clouds\n * @property {module:domain~SkyCondition} Fog fog\n * @property {module:domain~SkyCondition} Drizzle drizzle, light rain\n * @property {module:domain~SkyCondition} ScatteredShowers scattered/few showers\n * @property {module:domain~SkyCondition} Showers showers, light rain\n * @property {module:domain~SkyCondition} Rain rain\n * @property {module:domain~SkyCondition} Hail hail\n * @property {module:domain~SkyCondition} ScatteredSnow scattered/light snow\n * @property {module:domain~SkyCondition} Snow snow\n * @property {module:domain~SkyCondition} Storm storm\n * @property {module:domain~SkyCondition} SevereStorm severe storm\n * @property {module:domain~SkyCondition} Thunder thunder, lightning\n * @property {module:domain~SkyCondition} Windy windy\n * @property {module:domain~SkyCondition} Hazy hazy\n * @property {module:domain~SkyCondition} Tornado tornado\n * @property {module:domain~SkyCondition} Hurricane hurrican\n * @property {module:domain~SkyCondition} Dusty dusty\n * @alias module:domain~SkyConditions\n */\nconst SkyConditions = SkyCondition.enumsValue(SkyConditionValues);\n\nexport default SkyConditions;\nexport { SkyCondition };\n","import DatumStreamMetadata from \"../domain/datumStreamMetadata.js\";\n\n/**\n * A registry of datum stream metadata instances for object (node or location) and source ID combinations.\n *\n * This registry acts like a map of (stream ID) -> metadata as well as (object ID, source ID) -> metadata.\n *\n * @alias module:util~DatumStreamMetadataRegistry\n */\nclass DatumStreamMetadataRegistry {\n\t/**\n\t * Constructor.\n\t * @param {DatumStreamMetadata[]} [metas] optional list of metadata to start with\n\t */\n\tconstructor(metas) {\n\t\tthis._metaList = Array.isArray(metas) ? metas : [];\n\t\tthis._metaMap = new Map();\n\t\tfor (const e of this._metaList) {\n\t\t\tif (e instanceof DatumStreamMetadata) {\n\t\t\t\tthis._metaMap.set(e.streamId, e);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add metadata to the registry.\n\t * @param {DatumStreamMetadata} meta the metadata to add to the registry\n\t * @returns {DatumStreamMetadata} this object\n\t */\n\taddMetadata(meta) {\n\t\tif (meta instanceof DatumStreamMetadata && meta.streamId) {\n\t\t\tthis._metaList.push(meta);\n\t\t\tthis._metaMap.set(meta.streamId, meta);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get a set of all available stream IDs.\n\t * @returns {Set<string>} all available metadata stream ID values\n\t */\n\tmetadataStreamIds() {\n\t\treturn new Set(this._metaMap.keys());\n\t}\n\n\t/**\n\t * Get the metadata at a specific index, based on insertion order.\n\t * @param {number} index the index of the metadata to get\n\t * @returns {DatumStreamMetadata} the metadata at the given index, or `undefined`\n\t */\n\tmetadataAt(index) {\n\t\treturn index < this._metaList.length ? this._metaList[index] : undefined;\n\t}\n\n\t/**\n\t * Get the index of the metadata with a specific stream ID.\n\t * @param {string} streamId the stream ID to get the index of\n\t * @returns {number} the found index, or `-1` if not found\n\t */\n\tindexOfMetadataStreamId(streamId) {\n\t\tlet i = 0;\n\t\tfor (const meta of this._metaList) {\n\t\t\tif (meta.streamId === streamId) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Get a list of all available stream IDs in insertion order.\n\t * @returns {string[]} all available metadata stream ID values in the same order as added to this registry\n\t */\n\tmetadataStreamIdsList() {\n\t\treturn this._metaList.map((e) => e.streamId);\n\t}\n\n\t/**\n\t * Get the metadta for a given stream ID.\n\t * @param {string} streamId the stream ID of the metadata to get\n\t * @returns {DatumStreamMetadata} the associated metadata, or `undefined` if none available\n\t */\n\tmetadataForStreamId(streamId) {\n\t\treturn this._metaMap.get(streamId);\n\t}\n\n\t/**\n\t * Get the first available metadata for a given object and source ID combination.\n\t * @param {number} objectId the object ID of the metadata to get\n\t * @param {string} sourceId  the source ID of the metadata to get\n\t * @returns {DatumStreamMetadata} the associated metadata, or `undefined` if none available\n\t */\n\tmetadataForObjectSource(objectId, sourceId) {\n\t\tfor (const meta of this._metaMap.values()) {\n\t\t\tif (meta.objectId === objectId && meta.sourceId == sourceId) {\n\t\t\t\treturn meta;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Get this object as a standard JSON encoded string value.\n\t *\n\t * The returned JSON is an array of the {@link module:domain~DatumStreamMetadata#toJsonEncoding DatumStreamMetadata#toJsonEncoding()} result\n\t * of all metadata in the registry. An example result looks like this:\n\t *\n\t * ```\n\t * [\n\t *     {\n\t *       \"streamId\": \"7714f762-2361-4ec2-98ab-7e96807b32a6\",\n\t *       \"zone\": \"Pacific/Auckland\",\n\t *       \"kind\": \"n\",\n\t *       \"objectId\": 123,\n\t *       \"sourceId\": \"/power/1\",\n\t *       \"i\": [\"watts\", \"current\",  \"voltage\", \"frequency\"],\n\t *       \"a\": [\"wattHours\"]\n\t *     },\n\t *     {\n\t *       \"streamId\": \"5514f762-2361-4ec2-98ab-7e96807b3255\",\n\t *       \"zone\": \"America/New_York\",\n\t *       \"kind\": \"n\",\n\t *       \"objectId\": 456,\n\t *       \"sourceId\": \"/irradiance/2\",\n\t *       \"i\": [\"irradiance\", \"temperature\"],\n\t *       \"a\": [\"irradianceHours\"]\n\t *     }\n\t * ]\n\t * ```\n\t *\n\t * @return {string} the JSON encoded string\n\t */\n\ttoJsonEncoding() {\n\t\tlet json = \"[\";\n\t\tfor (let meta of this._metaList) {\n\t\t\tif (json.length > 1) {\n\t\t\t\tjson += \",\";\n\t\t\t}\n\t\t\tjson += meta.toJsonEncoding();\n\t\t}\n\t\tjson += \"]\";\n\t\treturn json;\n\t}\n\n\t/**\n\t * Parse a JSON string into a {@link module:util~DatumStreamMetadataRegistry DatumStreamMetadataRegistry} instance.\n\t *\n\t * The JSON must be encoded the same way {@link module:util~DatumStreamMetadataRegistry#toJsonEncoding DatumStreamMetadataRegistry#toJsonEncoding()} does.\n\t *\n\t * @param {string} json the JSON to parse\n\t * @returns {module:util~DatumStreamMetadataRegistry} the stream metadata registry instance\n\t */\n\tstatic fromJsonEncoding(json) {\n\t\tif (json) {\n\t\t\treturn this.fromJsonObject(JSON.parse(json));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Create a registry instance from an array parsed from a JSON string of datum stream metadata objects.\n\t *\n\t * The array must be structured in the same way {@link module:util~DatumStreamMetadataRegistry#toJsonEncoding DatumStreamMetadataRegistry#toJsonEncoding()} does.\n\t *\n\t * @param {array} data the array data to parse\n\t * @returns {module:util~DatumStreamMetadataRegistry} the stream metadata registry instance\n\t */\n\tstatic fromJsonObject(data) {\n\t\tif (Array.isArray(data)) {\n\t\t\tconst reg = new DatumStreamMetadataRegistry();\n\t\t\tfor (let e of data) {\n\t\t\t\tlet meta = DatumStreamMetadata.fromJsonObject(e);\n\t\t\t\tif (meta) {\n\t\t\t\t\treg.addMetadata(meta);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn reg;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport default DatumStreamMetadataRegistry;\n","import DatumSamplesTypes from \"./datumSamplesType.js\";\nimport DatumStreamMetadata from \"./datumStreamMetadata.js\";\nimport DatumStreamMetadataRegistry from \"../util/datumStreamMetadataRegistry.js\";\n\nfunction pushProperties(result, values) {\n\tif (!values) {\n\t\treturn;\n\t}\n\tfor (let e of values) {\n\t\tresult.push(e);\n\t}\n}\n\nfunction populateProperties(obj, names, values, type, withoutStatistics) {\n\tif (!Array.isArray(names) || !Array.isArray(values)) {\n\t\treturn;\n\t}\n\tvar val, name, valLen;\n\tfor (let i = 0, iMax = Math.min(names.length, values.length); i < iMax; i += 1) {\n\t\tval = values[i];\n\t\tif (DatumSamplesTypes.Instantaneous === type) {\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\tname = names[i];\n\t\t\t\tvalLen = val.length;\n\t\t\t\tif (\n\t\t\t\t\tvalLen > 0 &&\n\t\t\t\t\tval[0] !== null &&\n\t\t\t\t\t!Object.prototype.hasOwnProperty.call(obj, name)\n\t\t\t\t) {\n\t\t\t\t\tobj[name] = val[0];\n\t\t\t\t\tif (!withoutStatistics) {\n\t\t\t\t\t\tif (valLen > 1 && val[1] !== null) {\n\t\t\t\t\t\t\tobj[name + \"_count\"] = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valLen > 2 && val[2] !== null) {\n\t\t\t\t\t\t\tobj[name + \"_min\"] = val[2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valLen > 3 && val[3] !== null) {\n\t\t\t\t\t\t\tobj[name + \"_max\"] = val[3];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (DatumSamplesTypes.Accumulating === type) {\n\t\t\tif (Array.isArray(val)) {\n\t\t\t\tname = names[i];\n\t\t\t\tvalLen = val.length;\n\t\t\t\tif (\n\t\t\t\t\tvalLen > 0 &&\n\t\t\t\t\tval[0] !== null &&\n\t\t\t\t\t!Object.prototype.hasOwnProperty.call(obj, name)\n\t\t\t\t) {\n\t\t\t\t\tobj[name] = val[0];\n\t\t\t\t\tif (!withoutStatistics) {\n\t\t\t\t\t\tif (valLen > 1 && val[1] !== null) {\n\t\t\t\t\t\t\tobj[name + \"_start\"] = val[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valLen > 2 && val[2] !== null) {\n\t\t\t\t\t\t\tobj[name + \"_end\"] = val[2];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (val !== undefined && val !== null) {\n\t\t\t\tname = names[i];\n\t\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, name)) {\n\t\t\t\t\tobj[name] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A stream aggregate datum entity.\n *\n * A stream aggregate datum is a datum representing some aggregate calculation, without any metadata describing the datum property names.\n * The instantantaneous and accumulating property values are stored as 2D array fields `iProps` and `aProps` that hold the property values\n * as well as associated aggregate statistics. The datum status properties are stroed in the 1D array field `sProps`. A\n * {@link module:domain~DatumStreamMetadata DatumStreamMetadata} object is required to associate names with these arrays.\n *\n * The instantaneous properties are 4-element arrays containing:\n *\n *  1. property average value\n *  2. property count\n *  3. minimum value\n *  4. maximum value\n *\n * The accumulatingn statistics are 3-element arrays containing:\n *\n *  1. difference between ending and starting property values\n *  2. starting property value\n *  3. ending property value\n *\n * @alias module:domain~StreamAggregateDatum\n */\nclass StreamAggregateDatum {\n\t/**\n\t * Constructor.\n\t * @param {string} streamId the datum stream ID\n\t * @param {Array<Date|number|string>} ts an array with 2 elements for the datum start and end timestamps, either as a `Date` instance\n\t * or a form suitable for constructing as `new Date(ts)`\n\t * @param {Array<Array<number>>} [iProps] the instantaneous property values and associated statistics\n\t * @param {Array<Array<number>>} [aProps] the accumulating property values and associated statistics\n\t * @param {Array<String>} [sProps] the status property values\n\t * @param {Set<String>|Array<String>} [tags] the tag values\n\t */\n\tconstructor(streamId, ts, iProps, aProps, sProps, tags) {\n\t\tthis.streamId = streamId;\n\t\tthis.ts = Array.isArray(ts) ? ts.map((e) => (e instanceof Date ? e : new Date(e))) : [];\n\t\tthis.iProps = iProps;\n\t\tthis.aProps = aProps;\n\t\tthis.sProps = sProps;\n\t\tthis.tags = tags ? (tags instanceof Set ? tags : new Set(tags)) : undefined;\n\t\tif (this.constructor === StreamAggregateDatum) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get this instance as a simple object.\n\t *\n\t * The following basic properties will be set on the returned object:\n\t *\n\t *  * `streamId` - the stream ID\n\t *  * `date` - the timestamp\n\t *  * `date_end` - the ending timestamp, if available\n\t *  * `sourceId` - the metadata source ID\n\t *  * `nodeId` or `locationId` - either the node ID or location ID from the metadata\n\t *  * `tags` - any tags (as an Array)\n\t *\n\t * Beyond that, all instantaneous, accumulating, and status properties will be included.\n\t * If duplicate property names exist between the different classifications, the first-available\n\t * value will be used. Any available statistics for each property are included as well, using\n\t * property names with the following suffixes:\n\t *\n\t *  * `_count` - count of datum\n\t *  * `_min` - minimum value\n\t *  * `_max` - maximum value\n\t *  * `_start` - starting value\n\t *  * `_end` - ending value\n\t *\n\t * @param {module:domain~DatumStreamMetadata} meta a metadata instance to encode the property names with\n\t * @param {boolean} [withoutStatistics] `true` to omit statistic properties\n\t * @returns {Object} an object populated with all available properties\n\t */\n\ttoObject(meta, withoutStatistics) {\n\t\tvar obj = {\n\t\t\tstreamId: this.streamId,\n\t\t\tsourceId: meta.sourceId,\n\t\t};\n\t\tif (this.ts.length > 0) {\n\t\t\tobj.date = this.ts[0];\n\t\t\tif (this.ts.length > 1) {\n\t\t\t\tobj.date_end = this.ts[1];\n\t\t\t}\n\t\t}\n\t\tif (meta.nodeId !== undefined) {\n\t\t\tobj.nodeId = meta.nodeId;\n\t\t} else if (meta.locationId !== undefined) {\n\t\t\tobj.locationId = meta.locationId;\n\t\t}\n\t\tif (this.tags) {\n\t\t\tobj.tags = Array.from(this.tags);\n\t\t}\n\t\tpopulateProperties(\n\t\t\tobj,\n\t\t\tmeta.instantaneousNames,\n\t\t\tthis.iProps,\n\t\t\tDatumSamplesTypes.Instantaneous,\n\t\t\twithoutStatistics\n\t\t);\n\t\tpopulateProperties(\n\t\t\tobj,\n\t\t\tmeta.accumulatingNames,\n\t\t\tthis.aProps,\n\t\t\tDatumSamplesTypes.Accumulating,\n\t\t\twithoutStatistics\n\t\t);\n\t\tpopulateProperties(obj, meta.statusNames, this.sProps, DatumSamplesTypes.Status);\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Get this object as a standard JSON encoded string value.\n\t *\n\t * This method returns the JSON form of the result of {@link module:domain~StreamAggregateDatum#toJsonObject StreamAggregateDatum#toJsonObject()}.\n\t *\n\t * @param {module:util~DatumStreamMetadataRegistry} [registry] a stream metadata registry to encode as a registry-indexed stream datum\n\t * @return {string} the JSON encoded string\n\t */\n\ttoJsonEncoding(registry) {\n\t\treturn JSON.stringify(this.toJsonObject(registry));\n\t}\n\n\t/**\n\t * Get this object as an array suitable for encoding into a standard stream datum JSON string.\n\t *\n\t * This method can encode the datum into an array using one of two ways, depending on whether the `registry` argument is provided.\n\t * When provided, the first array element will be the stream metadata index based on calling\n\t * {@link module:util~DatumStreamMetadataRegistry#indexOfMetadataStreamId DatumStreamMetadataRegistry#indexOfMetadataStreamId()}.\n\t * Otherwise the first array element will be the stream ID itself.\n\t *\n\t * For example if a registry is used, the resulting array might look like this:\n\t *\n\t * ```\n\t * [0,[1650945600000,1651032000000],[3.6,2,0,7.2],[19.1,2,18.1, 20.1],[1.422802,1138.446687,1139.869489]]\n\t * ```\n\t *\n\t * while without a registry the array might look like this:\n\t *\n\t * ```\n\t * [\"7714f762-2361-4ec2-98ab-7e96807b32a6\", [1650945600000,1651032000000],[3.6,2,0,7.2],[19.1,2,18.1, 20.1],[1.422802,1138.446687,1139.869489]]\n\t * ```\n\t *\n\t * @param {module:util~DatumStreamMetadataRegistry} [registry] a stream metadata registry to encode as a registry-indexed stream datum\n\t * @return {Array} the datum stream array object\n\t */\n\ttoJsonObject(registry) {\n\t\tconst result = [\n\t\t\tregistry instanceof DatumStreamMetadataRegistry\n\t\t\t\t? registry.indexOfMetadataStreamId(this.streamId)\n\t\t\t\t: this.streamId,\n\t\t\tthis.ts.map((e) => (e ? e.getTime() : null)),\n\t\t];\n\t\tpushProperties(result, this.iProps);\n\t\tpushProperties(result, this.aProps);\n\t\tpushProperties(result, this.sProps);\n\t\tpushProperties(result, this.tags);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse a JSON string into a {@link module:domain~StreamAggregateDatum StreamAggregateDatum} instance.\n\t *\n\t * The JSON must be encoded the same way {@link module:domain~StreamAggregateDatum#toJsonEncoding StreamAggregateDatum#toJsonEncoding()} does.\n\t *\n\t * @param {string} json the JSON to parse\n\t * @param {module:domain~DatumStreamMetadata|module:util~DatumStreamMetadataRegistry} meta a metadata instance or metadata registry to decode with\n\t * @returns {module:domain~StreamAggregateDatum} the stream datum instance\n\t */\n\tstatic fromJsonEncoding(json, meta) {\n\t\treturn this.fromJsonObject(JSON.parse(json), meta);\n\t}\n\n\t/**\n\t * Create a new {@link module:domain~StreamAggregateDatum StreamAggregateDatum} instance from an array parsed from a stream datum JSON string.\n\t *\n\t * The array must have been parsed from JSON that was encoded the same way {@link module:domain~StreamAggregateDatum#toJsonEncoding StreamAggregateDatum#toJsonEncoding()} does.\n\t *\n\t * @param {Array} data the array parsed from JSON\n\t * @param {module:domain~DatumStreamMetadata|module:util~DatumStreamMetadataRegistry} meta a metadata instance or metadata registry to decode with\n\t * @returns {module:domain~StreamAggregateDatum} the stream datum instance\n\t */\n\tstatic fromJsonObject(data, meta) {\n\t\tlet i, len, m, iProps, aProps, sProps, tags;\n\t\tif (Array.isArray(data) && data.length > 1) {\n\t\t\tif (typeof data[0] === \"string\") {\n\t\t\t\t// treat as an embedded stream ID stream datum\n\t\t\t\tm = meta instanceof DatumStreamMetadata ? meta : meta.metadataForStreamId(data[0]);\n\t\t\t} else {\n\t\t\t\t// treat as a registry-indexed stream datum\n\t\t\t\tm = meta instanceof DatumStreamMetadata ? meta : meta.metadataAt(data[0]);\n\t\t\t}\n\t\t\ti = 2;\n\t\t\tlen = m.instantaneousLength;\n\t\t\tif (len > 0) {\n\t\t\t\tiProps = data.slice(i, i + len);\n\t\t\t\ti += len;\n\t\t\t}\n\t\t\tlen = m.accumulatingLength;\n\t\t\tif (len > 0) {\n\t\t\t\taProps = data.slice(i, i + len);\n\t\t\t\ti += len;\n\t\t\t}\n\t\t\tlen = m.statusLength;\n\t\t\tif (len > 0) {\n\t\t\t\tsProps = data.slice(i, i + len);\n\t\t\t\ti += len;\n\t\t\t}\n\t\t\tif (i < data.length) {\n\t\t\t\ttags = new Set(data.slice(i));\n\t\t\t}\n\t\t\t// to support StreamDatumMetadataMixin we pass meta as additional argument\n\t\t\treturn new this(m.streamId, data[1], iProps, aProps, sProps, tags, meta);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default StreamAggregateDatum;\n","import DatumSamplesTypes from \"./datumSamplesType.js\";\nimport DatumStreamMetadata from \"./datumStreamMetadata.js\";\nimport DatumStreamMetadataRegistry from \"../util/datumStreamMetadataRegistry.js\";\n\nfunction pushProperties(result, values) {\n\tif (!values) {\n\t\treturn;\n\t}\n\tfor (let e of values) {\n\t\tresult.push(e);\n\t}\n}\n\nfunction populateProperties(obj, names, values) {\n\tif (!Array.isArray(names) || !Array.isArray(values)) {\n\t\treturn;\n\t}\n\tvar val, name;\n\tfor (let i = 0, len = Math.min(names.length, values.length); i < len; i += 1) {\n\t\tval = values[i];\n\t\tif (val !== undefined && val !== null) {\n\t\t\tname = names[i];\n\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, name)) {\n\t\t\t\tobj[name] = val;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A stream datum entity.\n *\n * A stream datum is a datum without any metadata describing the datum property names.\n * The instantantaneous, accumulating, and status property values are stored as the array\n * fields `iProps`, `aProps`, and `sProps`. A {@link module:domain~DatumStreamMetadata DatumStreamMetadata}\n * object is required to associate names with these arrays.\n *\n * @alias module:domain~StreamDatum\n */\nclass StreamDatum {\n\t/**\n\t * Constructor.\n\t * @param {string} streamId the datum stream ID\n\t * @param {Date|number|string} ts the datum timestamp, either as a `Date` instance or a form suitable for constructing as `new Date(ts)`\n\t * @param {Number[]} [iProps] the instantaneous property values\n\t * @param {Number[]} [aProps] the accumulating property values\n\t * @param {String[]} [sProps] the status property values\n\t * @param {Set<String>|Array<String>} [tags] the tag values\n\t */\n\tconstructor(streamId, ts, iProps, aProps, sProps, tags) {\n\t\tthis.streamId = streamId;\n\t\tthis.ts = ts instanceof Date ? ts : new Date(ts);\n\t\tthis.iProps = iProps;\n\t\tthis.aProps = aProps;\n\t\tthis.sProps = sProps;\n\t\tthis.tags = tags ? (tags instanceof Set ? tags : new Set(tags)) : undefined;\n\t\tif (this.constructor === StreamDatum) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Get the property values for a given samples type.\n\t * @param {module:domain~DatumSamplesType} samplesType the type of property values to return\n\t * @returns {Array} the property values for the given type, or undefined if none available\n\t */\n\tpropertyValuesForType(samplesType) {\n\t\tif (DatumSamplesTypes.Instantaneous.equals(samplesType)) {\n\t\t\treturn this.iProps;\n\t\t} else if (DatumSamplesTypes.Accumulating.equals(samplesType)) {\n\t\t\treturn this.aProps;\n\t\t} else if (DatumSamplesTypes.Status.equals(samplesType)) {\n\t\t\treturn this.sProps;\n\t\t} else if (DatumSamplesTypes.Tags.equals(samplesType)) {\n\t\t\treturn this.tags;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Get this instance as a simple object.\n\t *\n\t * The following basic properties will be set on the returned object:\n\t *\n\t *  * `streamId` - the stream ID\n\t *  * `date` - the timestamp\n\t *  * `sourceId` - the metadata source ID\n\t *  * `nodeId` or `locationId` - either the node ID or location ID from the metadata\n\t *  * `tags` - any tags (as an Array)\n\t *\n\t * Beyond that, all instantaneous, accumulating, and status properties will be included.\n\t * If duplicate property names exist between the different classifications, the first-available\n\t * value will be used.\n\t *\n\t * @param {module:domain~DatumStreamMetadata} meta a metadata instance to encode the property names with\n\t * @returns {Object} an object populated with all available properties\n\t */\n\ttoObject(meta) {\n\t\tvar obj = {\n\t\t\tstreamId: this.streamId,\n\t\t\tdate: this.ts,\n\t\t\tsourceId: meta.sourceId,\n\t\t};\n\t\tif (meta.nodeId !== undefined) {\n\t\t\tobj.nodeId = meta.nodeId;\n\t\t} else if (meta.locationId !== undefined) {\n\t\t\tobj.locationId = meta.locationId;\n\t\t}\n\t\tif (this.tags) {\n\t\t\tobj.tags = Array.from(this.tags);\n\t\t}\n\t\tpopulateProperties(obj, meta.instantaneousNames, this.iProps);\n\t\tpopulateProperties(obj, meta.accumulatingNames, this.aProps);\n\t\tpopulateProperties(obj, meta.statusNames, this.sProps);\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Get this object as a standard JSON encoded string value.\n\t *\n\t * This method returns the JSON form of the result of {@link module:domain~StreamDatum#toJsonObject StreamDatum#toJsonObject()}.\n\t *\n\t * @param {module:util~DatumStreamMetadataRegistry} [registry] a stream metadata registry to encode as a registry-indexed stream datum\n\t * @return {string} the JSON encoded string\n\t */\n\ttoJsonEncoding(registry) {\n\t\treturn JSON.stringify(this.toJsonObject(registry));\n\t}\n\n\t/**\n\t * Get this object as an array suitable for encoding into a standard stream datum JSON string.\n\t *\n\t * This method can encode the datum into an array using one of two ways, depending on whether the `registry` argument is provided.\n\t * When provided, the first array element will be the stream metadata index based on calling\n\t * {@link module:util~DatumStreamMetadataRegistry#indexOfMetadataStreamId DatumStreamMetadataRegistry#indexOfMetadataStreamId()}.\n\t * Otherwise the first array element will be the stream ID itself.\n\t *\n\t * For example if a registry is used, the resulting array might look like this:\n\t *\n\t * ```\n\t * [0, 1650667326308, 12326, null, 230.19719, 50.19501, 6472722]\n\t * ```\n\t *\n\t * while without a registry the array might look like this:\n\t *\n\t * ```\n\t * [\"7714f762-2361-4ec2-98ab-7e96807b32a6\", 1650667326308, 12326, null, 230.19719, 50.19501, 6472722]\n\t * ```\n\t *\n\t * @param {module:util~DatumStreamMetadataRegistry} [registry] a stream metadata registry to encode as a registry-indexed stream datum\n\t * @return {Array} the datum stream array object\n\t */\n\ttoJsonObject(registry) {\n\t\tconst result = [\n\t\t\tregistry instanceof DatumStreamMetadataRegistry\n\t\t\t\t? registry.indexOfMetadataStreamId(this.streamId)\n\t\t\t\t: this.streamId,\n\t\t\tthis.ts.getTime(),\n\t\t];\n\t\tpushProperties(result, this.iProps);\n\t\tpushProperties(result, this.aProps);\n\t\tpushProperties(result, this.sProps);\n\t\tpushProperties(result, this.tags);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse a JSON string into a {@link module:domain~StreamDatum StreamDatum} instance.\n\t *\n\t * The JSON must be encoded the same way {@link module:domain~StreamDatum#toJsonEncoding StreamDatum#toJsonEncoding()} does.\n\t *\n\t * @param {string} json the JSON to parse\n\t * @param {module:domain~DatumStreamMetadata|module:util~DatumStreamMetadataRegistry} meta a metadata instance or metadata registry to decode with\n\t * @returns {module:domain~StreamDatum} the stream datum instance\n\t */\n\tstatic fromJsonEncoding(json, meta) {\n\t\treturn this.fromJsonObject(JSON.parse(json), meta);\n\t}\n\n\t/**\n\t * Create a new {@link module:domain~StreamDatum StreamDatum} instance from an array parsed from a stream datum JSON string.\n\t *\n\t * The array must have been parsed from JSON that was encoded the same way {@link module:domain~StreamDatum#toJsonEncoding StreamDatum#toJsonEncoding()} does.\n\t *\n\t * @param {Array} data the array parsed from JSON\n\t * @param {module:domain~DatumStreamMetadata|module:util~DatumStreamMetadataRegistry} meta a metadata instance or metadata registry to decode with\n\t * @returns {module:domain~StreamDatum} the stream datum instance\n\t */\n\tstatic fromJsonObject(data, meta) {\n\t\tlet i, len, m, ts, iProps, aProps, sProps, tags;\n\t\tif (Array.isArray(data) && data.length > 1) {\n\t\t\tif (typeof data[0] === \"string\") {\n\t\t\t\t// treat as an embedded stream ID stream datum\n\t\t\t\tm = meta instanceof DatumStreamMetadata ? meta : meta.metadataForStreamId(data[0]);\n\t\t\t} else {\n\t\t\t\t// treat as a registry-indexed stream datum\n\t\t\t\tm = meta instanceof DatumStreamMetadata ? meta : meta.metadataAt(data[0]);\n\t\t\t}\n\t\t\tts = new Date(data[1]);\n\t\t\ti = 2;\n\t\t\tlen = m.instantaneousLength;\n\t\t\tif (len > 0) {\n\t\t\t\tiProps = data.slice(i, i + len);\n\t\t\t\ti += len;\n\t\t\t}\n\t\t\tlen = m.accumulatingLength;\n\t\t\tif (len > 0) {\n\t\t\t\taProps = data.slice(i, i + len);\n\t\t\t\ti += len;\n\t\t\t}\n\t\t\tlen = m.statusLength;\n\t\t\tif (len > 0) {\n\t\t\t\tsProps = data.slice(i, i + len);\n\t\t\t\ti += len;\n\t\t\t}\n\t\t\tif (i < data.length) {\n\t\t\t\ttags = new Set(data.slice(i));\n\t\t\t}\n\t\t\t// to support StreamDatumMetadataMixin we pass meta as additional argument\n\t\t\treturn new this(m.streamId, ts, iProps, aProps, sProps, tags, meta);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default StreamDatum;\n","import DatumStreamMetadata from \"./datumStreamMetadata.js\";\nimport StreamDatum from \"./streamDatum.js\";\nimport StreamAggregateDatum from \"./streamAggregateDatum.js\";\n\n/**\n * Create a StreamDatumMetadataMixin class.\n *\n * @param {module:domain~StreamAggregateDatum|module:domain~StreamDatum} superclass the stream datum class to mix onto\n * @return {module:domain~StreamDatumMetadataMixin} the mixin class\n */\nconst StreamDatumMetadataMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds datum stream metadata support to a {@link module:domain~StreamDatum StreamDatum}\n\t * or {@link module:domain~StreamAggregateDatum StreamAggregateDatum}.\n\t *\n\t * @mixin\n\t * @alias module:domain~StreamDatumMetadataMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Constructor.\n\t\t * @param {string} streamId the datum stream ID\n\t\t * @param {Date|number|string} ts the datum timestamp, either as a `Date` instance or a form suitable for constructing as `new Date(ts)`\n\t\t * @param {Number[]} [iProps] the instantaneous property values\n\t\t * @param {Number[]} [aProps] the accumulating property values\n\t\t * @param {String[]} [sProps] the status property values\n\t\t * @param {Set<String>|Array<String>} [tags] the tag values\n\t\t * @param {module:domain~DatumStreamMetadata} meta the datum stream metadata\n\t\t */\n\t\tconstructor(...args) {\n\t\t\tsuper(...args);\n\t\t\tif (args.length > 0 && args[args.length - 1] instanceof DatumStreamMetadata) {\n\t\t\t\tthis._meta = args[args.length - 1];\n\t\t\t}\n\t\t\tObject.freeze(this);\n\t\t}\n\n\t\t/**\n\t\t * Get the stream metadata.\n\t\t * @type {module:domain~DatumStreamMetadata}\n\t\t */\n\t\tget metadata() {\n\t\t\treturn this._meta;\n\t\t}\n\n\t\t/**\n\t\t * Get this instance as a simple object.\n\t\t *\n\t\t * This method uses the metadata passed to the constructor to generate the object.\n\t\t *\n\t\t * @param {boolean} [withoutStatistics] `true` to omit statistic properties\n\t\t * @returns {Object} an object populated with all available properties\n\t\t * @see module:domain~StreamDatum#toObject\n\t\t * @see module:domain~StreamAggregateDatum#toObject\n\t\t */\n\t\ttoObject(withoutStatistics) {\n\t\t\treturn super.toObject(this._meta, withoutStatistics);\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:domain~StreamDatumMetadataMixin StreamDatumMetadataMixin} of {@link module:domain~StreamAggregateDatum StreamAggregateDatum}.\n *\n * @mixes module:domain~StreamDatumMetadataMixin\n * @extends module:domain~StreamAggregateDatum\n * @alias module:domain~AggregateDatum\n */\nclass AggregateDatum extends StreamDatumMetadataMixin(StreamAggregateDatum) {}\n\n/**\n * A concrete {@link module:domain~StreamDatumMetadataMixin StreamDatumMetadataMixin} of {@link module:domain~StreamDatum StreamDatum}.\n *\n * @mixes module:domain~StreamDatumMetadataMixin\n * @extends module:domain~StreamDatum\n * @alias module:domain~Datum\n */\nclass Datum extends StreamDatumMetadataMixin(StreamDatum) {}\n\nexport default StreamDatumMetadataMixin;\nexport { AggregateDatum, Datum };\n","import PropMap from \"../util/propMap.js\";\n\nexport const TagsKey = \"tags\";\nexport const UserIdsKey = \"userIds\";\n\n/**\n * A filter criteria object for user metadata.\n *\n * <p>This filter is used to query user metadata.</p>\n *\n * @extends module:util~PropMap\n * @alias module:domain~UserMetadataFilter\n */\nclass UserMetadataFilter extends PropMap {\n\t/**\n\t * Constructor.\n\t * @param {object} [props] initial property values\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\t/**\n\t * A user ID.\n\t *\n\t * This manages the first available location ID from the `userIds` property.\n\t *\n\t * @type {number}\n\t */\n\tget userId() {\n\t\tconst userIds = this.userIds;\n\t\treturn Array.isArray(userIds) && userIds.length > 0 ? userIds[0] : null;\n\t}\n\n\tset userId(userId) {\n\t\tif (userId) {\n\t\t\tthis.userIds = [userId];\n\t\t} else {\n\t\t\tthis.userIds = null;\n\t\t}\n\t}\n\n\t/**\n\t * An array of user IDs.\n\t * @type {number[]}\n\t */\n\tget userIds() {\n\t\treturn this.prop(UserIdsKey);\n\t}\n\n\tset userIds(userIds) {\n\t\tthis.prop(UserIdsKey, Array.isArray(userIds) ? userIds : null);\n\t}\n\n\t/**\n\t * An array of tags.\n\t * @type {string[]}\n\t */\n\tget tags() {\n\t\treturn this.prop(TagsKey);\n\t}\n\n\tset tags(val) {\n\t\tthis.prop(TagsKey, Array.isArray(val) ? val : null);\n\t}\n\n\t/**\n\t * Get this object as a standard URI encoded (query parameters) string value.\n\t *\n\t * @override\n\t * @inheritdoc\n\t */\n\ttoUriEncoding(propertyName, callbackFn) {\n\t\treturn super.toUriEncoding(\n\t\t\tpropertyName,\n\t\t\tcallbackFn || userMetadataFilterUriEncodingPropertyMapper\n\t\t);\n\t}\n}\n\n/**\n * Map UserMetadataFilter properties for URI encoding.\n *\n * @param {string} key the property key\n * @param {*} value the property value\n * @returns {*} 2-element array for mapped key+value, `null` to skip, or `key` to keep as-is\n * @private\n */\nfunction userMetadataFilterUriEncodingPropertyMapper(key, value) {\n\tif (key === UserIdsKey) {\n\t\t// check for singleton array value, and re-map to singular property by chopping of \"s\"\n\t\tif (Array.isArray(value) && value.length === 1) {\n\t\t\treturn [key.substring(0, key.length - 1), value[0]];\n\t\t}\n\t}\n\treturn key;\n}\n\nexport default UserMetadataFilter;\n","/**\n * Get an appropriate multiplier value for scaling a given value to a more display-friendly form.\n *\n * This will return values suitable for passing to {@link module:format~displayUnitsForScale}.\n *\n * @param {number} value the value to get a display scale factor for, for example the maximum value\n *                       in a range of values\n * @return {number} the display scale factor\n * @alias module:format~displayScaleForValue\n */\nexport function displayScaleForValue(value) {\n\tvar result = 1,\n\t\tnum = Math.abs(Number(value));\n\tif (isNaN(num) === false) {\n\t\tif (num >= 1000000000) {\n\t\t\tresult = 1000000000;\n\t\t} else if (num >= 1000000) {\n\t\t\tresult = 1000000;\n\t\t} else if (num >= 1000) {\n\t\t\tresult = 1000;\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Get an appropriate display unit for a given base unit and scale factor.\n *\n * Use this method to render scaled data value units. Typically you would first call\n * {@link module:module:format~displayScaleForValue}, passing in the largest expected value\n * in a set of data, and then pass the result to this method to generate a display unit\n * for the base unit for that data.\n *\n * For example, given a base unit of `W` (watts) and a maximum data value of `10000`:\n *\n * ```\n * const fmt = import { * } from 'format/scale';\n * const displayScale = fmt.displayScaleForValue(10000);\n * const displayUnit = fmt.displayUnitForScale('W', displayScale);\n * ```\n *\n * The `displayUnit` result in that example would be `kW`.\n *\n * @param {string} baseUnit the base unit, for example `W` or `Wh`\n * @param {number} scale the unit scale, which must be a recognized SI scale, such\n *                       as `1000` for `k`\n * @return {string} the display unit value\n * @alias module:format~displayUnitsForScale\n */\nexport function displayUnitsForScale(baseUnit, scale) {\n\treturn (\n\t\t(scale === 1000000000 ? \"G\" : scale === 1000000 ? \"M\" : scale === 1000 ? \"k\" : \"\") +\n\t\tbaseUnit\n\t);\n}\n","import { dateFormat } from \"../format/date.js\";\n\n/**\n * Create a AuthTokenUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~AuthTokenUrlHelperMixin} the mixin class\n */\nconst AuthTokenUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds authentication token support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~AuthTokenUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL to refresh the signing key of an authentication token.\n\t\t *\n\t\t * **Note** this method only works against the `/sec` version of the API endpoint.\n\t\t *\n\t\t * @param {date} date the signing date to use, or `null` for the current date\n\t\t * @returns {string} the URL\n\t\t */\n\t\trefreshTokenV2Url(date) {\n\t\t\treturn (\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/auth-tokens/refresh/v2?date=\" +\n\t\t\t\tencodeURIComponent(dateFormat(date || new Date()))\n\t\t\t);\n\t\t}\n\t};\n\nexport default AuthTokenUrlHelperMixin;\n","/**\n * A case-insensitive string key multi-value map object.\n *\n * This map supports `null` values but ignores attempts to add keys with `undefined` values.\n *\n * @alias module:util~MultiMap\n */\nclass MultiMap {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {*} [values] an object who's enumerable properties will be added to this map\n\t */\n\tconstructor(values) {\n\t\tthis.mappings = {}; // map of lower-case header names to {name:X, val:[]} values\n\t\tthis.mappingNames = []; // to keep insertion order\n\t\tif (values) {\n\t\t\tthis.putAll(values);\n\t\t}\n\t}\n\n\t/**\n\t * Add a value.\n\t *\n\t * This method will append values to existing keys.\n\t *\n\t * @param {string} key the key to use\n\t * @param {*} value the value to add; if `undefined` nothing will be added\n\t * @returns {module:util~MutliMap} this object\n\t */\n\tadd(key, value) {\n\t\treturn addValue(this, key, value);\n\t}\n\n\t/**\n\t * Set a value.\n\t *\n\t * This method will replace any existing values with just `value`.\n\t *\n\t * @param {string} key the key to use\n\t * @param {*} value the value to set; if `undefined` nothing will be added\n\t * @returns {module:util~MutliMap} this object\n\t */\n\tput(key, value) {\n\t\treturn addValue(this, key, value, true);\n\t}\n\n\t/**\n\t * Set multiple values.\n\t *\n\t * This method will replace any existing values with those provided on `values`.\n\t *\n\t * @param {*} values an object who's enumerable properties will be added to this map\n\t * @returns {module:util~MutliMap} this object\n\t */\n\tputAll(values) {\n\t\tfor (let key in values) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(values, key)) {\n\t\t\t\taddValue(this, key, values[key], true);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the values associated with a key.\n\t *\n\t * @param {string} key the key of the values to get\n\t * @returns {object[]} the array of values associated with the key, or `undefined` if not available\n\t */\n\tvalue(key) {\n\t\tconst keyLc = key.toLowerCase();\n\t\tconst mapping = this.mappings[keyLc];\n\t\treturn mapping ? mapping.val : undefined;\n\t}\n\n\t/**\n\t * Get the first avaialble value assocaited with a key.\n\t *\n\t * @param {string} key the key of the value to get\n\t * @returns {*} the first available value associated with the key, or `undefined` if not available\n\t */\n\tfirstValue(key) {\n\t\tconst values = this.value(key);\n\t\treturn values && values.length > 0 ? values[0] : undefined;\n\t}\n\n\t/**\n\t * Remove all properties from this map.\n\t *\n\t * @returns {module:util~MutliMap} this object\n\t */\n\tclear() {\n\t\tthis.mappingNames.length = 0;\n\t\tthis.mappings = {};\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove all values associated with a key.\n\t *\n\t * @param {string} key the key of the values to remove\n\t * @returns {object[]} the removed values, or `undefined` if no values were present for the given key\n\t */\n\tremove(key) {\n\t\tconst keyLc = key.toLowerCase();\n\t\tconst index = this.mappingNames.indexOf(keyLc);\n\t\tconst result = this.mappings[keyLc];\n\t\tif (result) {\n\t\t\tdelete this.mappings[keyLc];\n\t\t\tthis.mappingNames.splice(index, 1);\n\t\t}\n\t\treturn result ? result.val : undefined;\n\t}\n\n\t/**\n\t * Get the number of entries in this map.\n\t *\n\t * @returns {number} the number of entries in the map\n\t */\n\tsize() {\n\t\treturn this.mappingNames.length;\n\t}\n\n\t/**\n\t * Test if the map is empty.\n\t *\n\t * @returns {boolean} `true` if there are no entries in this map\n\t */\n\tisEmpty() {\n\t\treturn this.size() < 1;\n\t}\n\n\t/**\n\t * Test if there are any values associated with a key.\n\t *\n\t * @param {string} key the key to test\n\t * @returns {boolean} `true` if there is at least one value associated with the key\n\t */\n\tcontainsKey(key) {\n\t\treturn this.value(key) !== undefined;\n\t}\n\n\t/**\n\t * Get an array of all keys in this map.\n\t *\n\t * @returns {string[]} array of keys in this map, or an empty array if the map is empty\n\t */\n\tkeySet() {\n\t\tconst result = [];\n\t\tconst len = this.size();\n\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\tresult.push(this.mappings[this.mappingNames[i]].key);\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * Add/replace values on a map.\n *\n * @param {module:util~MutliMap} map the map to mutate\n * @param {string} key the key to change\n * @param {*} value the value to add; if `undefined` then nothing will be added\n * @param {boolean} replace if `true` then replace all existing values;\n *                          if `false` append to any existing values\n * @returns {module:util~MutliMap} the passed in `map`\n * @private\n */\nfunction addValue(map, key, value, replace) {\n\tif (value === undefined) {\n\t\treturn map;\n\t}\n\tconst keyLc = key.toLowerCase();\n\tlet mapping = map.mappings[keyLc];\n\tif (!mapping) {\n\t\tmapping = { key: key, val: [] };\n\t\tmap.mappings[keyLc] = mapping;\n\t\tmap.mappingNames.push(keyLc);\n\t}\n\tif (replace) {\n\t\tmapping.val.length = 0;\n\t}\n\tif (Array.isArray(value)) {\n\t\tconst len = value.length;\n\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\tmapping.val.push(value[i]);\n\t\t}\n\t} else {\n\t\tmapping.val.push(value);\n\t}\n\treturn map;\n}\n\nexport default MultiMap;\n","function createGetter(me, prop) {\n\treturn function () {\n\t\treturn me.map[prop];\n\t};\n}\n\nfunction createSetter(me, prop) {\n\treturn function (value) {\n\t\tme.map[prop] = value;\n\t};\n}\n\nfunction createProperty(me, prop) {\n\tObject.defineProperty(me, prop, {\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t\tget: createGetter(me, prop),\n\t\tset: createSetter(me, prop),\n\t});\n}\n\n/**\n * A configuration utility object.\n *\n * Properties can be get/set by using the {@link module:util~Configuration#value} function.\n * @alias module:util~Configuration\n */\nclass Configuration {\n\t/**\n\t * Constructor.\n\t *\n\t * For any properties passed on `initialMap`, {@link module:util~Configuration#value} will\n\t * be called so those properties are defined on this instance.\n\t *\n\t * @param {object} initialMap the optional initial properties to store\n\t */\n\tconstructor(initialMap) {\n\t\tthis.map = {};\n\t\tif (initialMap !== undefined) {\n\t\t\tthis.values(initialMap);\n\t\t}\n\t}\n\n\t/**\n\t * Test if a key is truthy.\n\t *\n\t * @param {string} key the key to test\n\t * @returns {boolean} `true` if the key is enabled\n\t */\n\tenabled(key) {\n\t\tif (key === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !!this.map[key];\n\t}\n\n\t/**\n\t * Set or toggle the enabled status of a given key.\n\t *\n\t * <p>If the `enabled` parameter is not passed, then the enabled\n\t * status will be toggled to its opposite value.</p>\n\t *\n\t * @param {string} key they key to set\n\t * @param {boolean} enabled the optional enabled value to set\n\t * @returns {module:util~Configuration} this object to allow method chaining\n\t */\n\ttoggle(key, enabled) {\n\t\tvar val = enabled;\n\t\tif (key === undefined) {\n\t\t\treturn this;\n\t\t}\n\t\tif (val === undefined) {\n\t\t\t// in 1-argument mode, toggle current value\n\t\t\tval = this.map[key] === undefined;\n\t\t}\n\t\treturn this.value(key, val === true ? true : null);\n\t}\n\n\t/**\n\t * Get or set a configuration value.\n\t *\n\t * @param {string} key The key to get or set the value for\n\t * @param {object} [newValue] If defined, the new value to set for the given `key`.\n\t *                            If `null` then the value will be removed.\n\t * @returns {object} If called as a getter, the associated value for the given `key`,\n\t *                   otherwise this object.\n\t */\n\tvalue(key, newValue) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.map[key];\n\t\t}\n\t\tif (newValue === null) {\n\t\t\tdelete this.map[key];\n\t\t\tif (Object.prototype.hasOwnProperty.call(this, key)) {\n\t\t\t\tdelete this[key];\n\t\t\t}\n\t\t} else {\n\t\t\tthis.map[key] = newValue;\n\t\t\tif (!Object.prototype.hasOwnProperty.call(this, key)) {\n\t\t\t\tcreateProperty(this, key);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get or set multiple properties.\n\t *\n\t * @param {object} [newMap] a map of values to set\n\t * @returns {object} if called as a getter, all properties of this object copied into a simple object;\n\t *                   otherwise this object\n\t */\n\tvalues(newMap) {\n\t\tif (newMap) {\n\t\t\tfor (let prop in newMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(newMap, prop)) {\n\t\t\t\t\tthis.value(prop, newMap[prop]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\treturn Object.assign({}, this.map);\n\t}\n}\n\nexport default Configuration;\n","import Configuration from \"../util/configuration.js\";\n\n/**\n * Normailze a protocol value.\n *\n * This method is used to normalize protocol values which might come from a `Location`\n * object and thus contain a trailing colon.\n *\n * @param {String} [val] the protocol value to normalize\n * @returns {String} the normalized protocol value\n * @alias module:net~normalizedProtocol\n */\nfunction normalizedProtocol(val) {\n\tif (!val) {\n\t\treturn \"https\";\n\t}\n\treturn val.replace(/:$/, \"\");\n}\n\n/**\n * Normalize the environment configuration.\n *\n * Passing a browser `Location` object, like `window.location`, is supported. The\n * `protocol`, `hostname`, and `port` values will be used.\n *\n * @param {Object} [config] the initial configuration\n * @returns {Object} a new object with normalized configuration values\n * @alias module:net~normalizedConfig\n */\nfunction normalizedConfig(config) {\n\tvar result = Object.assign(\n\t\t{\n\t\t\thost: \"data.solarnetwork.net\",\n\t\t},\n\t\tconfig,\n\t);\n\tresult.protocol = normalizedProtocol(result.protocol || \"https\");\n\tresult.port = result.port || (result.protocol === \"https\" ? 443 : 80);\n\tresult.host = result.port && result.hostname ? result.hostname : result.host;\n\treturn result;\n}\n\n/**\n * An environment configuration utility object.\n *\n * This extends {@link module:util~Configuration} to add support for standard properties\n * needed to access the SolarNetwork API, such as host and protocol values.\n *\n * @extends module:util~Configuration\n * @alias module:net~Environment\n */\nclass Environment extends Configuration {\n\t/**\n\t * Constructor.\n\t *\n\t * This will define the following default properties, if not supplied on the\n\t * `config` argument:\n\t *\n\t * <dl>\n\t * <dt>host</dt><dd>`data.solarnetwork.net`</dd>\n\t * <dt>protocol</dt><dd>`https`</dd>\n\t * <dt>port</dt><dd>`443`</dd>\n\t * </dl>\n\t *\n\t * These properties correspond to those on the `window.location` object when\n\t * running in a browser. Thus to construct an environment based on the location\n\t * of the current page you can create an instance like this:\n\t *\n\t * ```\n\t * const env = new Environment(window.location);\n\t * ```\n\t *\n\t * @param {Object} [config] an optional set of properties to start with\n\t */\n\tconstructor(config) {\n\t\tsuper(normalizedConfig(config));\n\t}\n\n\t/**\n\t * Check if TLS is in use via the `https` protocol.\n\t *\n\t * @returns {boolean} `true` if the `protocol` is set to `https`\n\t */\n\tuseTls() {\n\t\treturn this.value(\"protocol\") === \"https\";\n\t}\n}\n\nexport default Environment;\n","import MultiMap from \"../util/multiMap.js\";\n\nconst HttpMethod = Object.freeze(\n\t/**\n\t * Enumeration of HTTP methods (verbs).\n\t * @enum {string}\n\t * @alias module:net~HttpMethod\n\t * @constant\n\t */\n\t{\n\t\tGET: \"GET\",\n\t\tHEAD: \"HEAD\",\n\t\tPOST: \"POST\",\n\t\tPUT: \"PUT\",\n\t\tPATCH: \"PATCH\",\n\t\tDELETE: \"DELETE\",\n\t\tOPTIONS: \"OPTIONS\",\n\t\tTRACE: \"TRACE\",\n\t},\n);\n\nconst HttpContentType = Object.freeze(\n\t/**\n\t * Enumeration of common HTTP `Content-Type` values.\n\t * @enum {string}\n\t * @alias module:net~HttpContentType\n\t * @constant\n\t */\n\t{\n\t\tAPPLICATION_JSON: \"application/json\",\n\t\tAPPLICATION_JSON_UTF8: \"application/json; charset=UTF-8\",\n\t\tFORM_URLENCODED: \"application/x-www-form-urlencoded\",\n\t\tFORM_URLENCODED_UTF8: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t},\n);\n\n/**\n * Support for HTTP headers.\n *\n * @extends module:util~MultiMap\n * @alias module:net~HttpHeaders\n */\nclass HttpHeaders extends MultiMap {\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nObject.defineProperties(HttpHeaders, {\n\t/**\n\t * The `Accept` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tACCEPT: { value: \"Accept\" },\n\n\t/**\n\t * The `Authorization` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tAUTHORIZATION: { value: \"Authorization\" },\n\n\t/**\n\t * The `Content-MD5` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tCONTENT_MD5: { value: \"Content-MD5\" },\n\n\t/**\n\t * The `Content-Type` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tCONTENT_TYPE: { value: \"Content-Type\" },\n\n\t/**\n\t * The `Date` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tDATE: { value: \"Date\" },\n\n\t/**\n\t * The `Digest` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tDIGEST: { value: \"Digest\" },\n\n\t/**\n\t * The `Host` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tHOST: { value: \"Host\" },\n\n\t/**\n\t * The `X-SN-Date` header.\n\t *\n\t * @memberof module:net~HttpHeaders\n\t * @readonly\n\t * @type {string}\n\t */\n\tX_SN_DATE: { value: \"X-SN-Date\" },\n});\n\nexport default HttpHeaders;\nexport { HttpContentType, HttpMethod };\n","/**\n * Parse the query portion of a URL string, and return a parameter object for the\n * parsed key/value pairs.\n *\n * <p>Multiple parameters of the same name will be stored as an array on the returned object.</p>\n *\n * @param {string} search the query portion of the URL, which may optionally include\n *                        the leading `?` character\n * @param {Set<String>} [multiValueKeys] if provided, a set of keys for which to always treat\n *                                       as a multi-value array, even if there is only one value\n * @return {object} the parsed query parameters, as a parameter object\n * @alias module:net~urlQueryParse\n */\nfunction urlQueryParse(search, multiValueKeys) {\n\tvar params = {};\n\tvar pairs;\n\tvar pair;\n\tvar i, len, k, v;\n\tif (search !== undefined && search.length > 0) {\n\t\t// remove any leading ? character\n\t\tif (search.match(/^\\?/)) {\n\t\t\tsearch = search.substring(1);\n\t\t}\n\t\tpairs = search.split(\"&\");\n\t\tfor (i = 0, len = pairs.length; i < len; i++) {\n\t\t\tpair = pairs[i].split(\"=\", 2);\n\t\t\tif (pair.length === 2) {\n\t\t\t\tk = decodeURIComponent(pair[0]);\n\t\t\t\tv = decodeURIComponent(pair[1]);\n\t\t\t\tif (params[k]) {\n\t\t\t\t\tif (!Array.isArray(params[k])) {\n\t\t\t\t\t\tparams[k] = [params[k]]; // turn into array;\n\t\t\t\t\t}\n\t\t\t\t\tparams[k].push(v);\n\t\t\t\t} else if (multiValueKeys && multiValueKeys.has(k)) {\n\t\t\t\t\tparams[k] = [v];\n\t\t\t\t} else {\n\t\t\t\t\tparams[k] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn params;\n}\n\n/**\n * Encode the properties of an object as a URL query string.\n *\n * <p>If an object property has an array value, multiple URL parameters will be encoded for that property.</p>\n *\n * <p>The optional `encoderFn` argument is a function that accepts a string value\n * and should return a URI-safe string for that value.</p>\n *\n * @param {object} parameters an object to encode as URL parameters\n * @param {function} encoderFn an optional function to encode each URI component with;\n *                             if not provided the built-in `encodeURIComponent()` function\n *                             will be used\n * @return {string} the encoded query parameters\n * @alias module:net~urlQueryEncode\n */\nfunction urlQueryEncode(parameters, encoderFn) {\n\tvar result = \"\",\n\t\tprop,\n\t\tval,\n\t\ti,\n\t\tlen;\n\tconst encoder = encoderFn || encodeURIComponent;\n\tfunction handleValue(k, v) {\n\t\tif (result.length) {\n\t\t\tresult += \"&\";\n\t\t}\n\t\tresult += encoder(k) + \"=\" + encoder(v);\n\t}\n\tif (parameters) {\n\t\tfor (prop in parameters) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(parameters, prop)) {\n\t\t\t\tval = parameters[prop];\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tfor (i = 0, len = val.length; i < len; i++) {\n\t\t\t\t\t\thandleValue(prop, val[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandleValue(prop, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nexport { urlQueryParse, urlQueryEncode };\n\nexport default {\n\turlQueryParse: urlQueryParse,\n\turlQueryEncode: urlQueryEncode,\n};\n","import Base64 from \"crypto-js/enc-base64.js\";\nimport Hex from \"crypto-js/enc-hex.js\";\nimport HmacSHA256 from \"crypto-js/hmac-sha256.js\";\nimport SHA256 from \"crypto-js/sha256.js\";\nimport { parse as uriParse } from \"uri-js\";\n\nimport { iso8601Date } from \"../format/date.js\";\nimport MultiMap from \"../util/multiMap.js\";\nimport Environment from \"./environment.js\";\nimport { HttpMethod, default as HttpHeaders } from \"./httpHeaders.js\";\nimport { urlQueryParse } from \"./urlQuery.js\";\n\n/**\n * The number of milliseconds a signing key is valid for.\n * @type {number}\n * @private\n */\nconst SIGNING_KEY_VALIDITY = 7 * 24 * 60 * 60 * 1000;\n\n/**\n * A builder object for the SNWS2 HTTP authorization scheme.\n *\n * This builder can be used to calculate a one-off header value, for example:\n *\n * ```\n * let authHeader = new AuthorizationV2Builder(\"my-token\")\n *     .path(\"/solarquery/api/v1/pub/...\")\n *     .build(\"my-token-secret\");\n * ```\n *\n * Or the builder can be re-used for a given token:\n *\n * ```\n * // create a builder for a token\n * let builder = new AuthorizationV2Builder(\"my-token\");\n *\n * // elsewhere, re-use the builder for repeated requests\n * builder.reset()\n *     .path(\"/solarquery/api/v1/pub/...\")\n *     .build(\"my-token-secret\");\n * ```\n *\n * Additionally, a signing key can be generated and re-used for up to 7 days:\n *\n * ```\n * // create a builder for a token\n * let builder = new AuthorizationV2Builder(\"my-token\")\n *   .saveSigningKey(\"my-token-secret\");\n *\n * // elsewhere, re-use the builder for repeated requests\n * builder.reset()\n *     .path(\"/solarquery/api/v1/pub/...\")\n *     .buildWithSavedKey(); // note previously generated key used\n * ```\n *\n * ## Post requests\n *\n * For handling `POST` or `PUT` requests, you must make sure to configure the properties of\n * this class to match your actual HTTP request:\n *\n *  1. Use the {@link module:net~AuthorizationV2Builder#method method()} method to configure the HTTP verb (you can use the {@link module:net~HttpMethod HttpMethod} constants).\n *  2. Use the {@link module:net~AuthorizationV2Builder#contentType contentType()} method to configure the same value that will be used for the HTTP `Content-Type` header (you can use the {@link module:net~HttpContentType HttpContentType} constants).\n *  3. **If** the content type is `application/x-www-form-urlencoded` then you should use the {@link module:net~AuthorizationV2Builder#queryParams queryParams()} method to configure the request parameters.\n *  4. **If** the content type is **not** `application/x-www-form-urlencoded` then you should use the {@link module:net~AuthorizationV2Builder#computeContentDigest computeContentDigest()} method to configure a HTTP `Digest` header.\n *\n * ```\n * // create a builder for a token\n * let builder = new AuthorizationV2Builder(\"my-token\")\n *   .saveSigningKey(\"my-token-secret\");\n *\n * // POST request with form data\n * builder.reset()\n *     .method(HttpHeaders.POST)\n *     .path(\"/solarquery/api/v1/pub/...\")\n *     .contentType(HttpContentType.FORM_URLENCODED_UTF8)\n *     .queryParams({foo:\"bar\"})\n *     .buildWithSavedKey();\n *\n * // PUT request with JSON data, with XHR style request\n * let reqJson = JSON.stringify({foo:\"bar\"});\n * builder.reset()\n *     .method(HttpHeaders.PUT)\n *     .path(\"/solarquery/api/v1/pub/...\")\n *     .contentType(HttpContentType.APPLICATION_JSON_UTF8)\n *     .computeContentDigest(reqJson);\n *\n * // when making actual HTTP request, re-use the computed HTTP Digest header:\n * xhr.setRequestHeader(\n *     HttpHeaders.DIGEST,\n *     builder.httpHeaders.firstValue(HttpHeaders.DIGEST)\n * );\n * xhr.setRequestHeader(HttpHeaders.X_SN_DATE, builder.requestDateHeaderValue);\n * xhr.setRequestHeader(HttpHeaders.AUTHORIZATION, builder.buildWithSavedKey());\n * ```\n * @alias module:net~AuthorizationV2Builder\n */\nclass AuthorizationV2Builder {\n\t/**\n\t * Constructor.\n\t *\n\t * The {@link module:net~AuthorizationV2Builder#reset reset()} method is invoked to set up\n\t * default values for this instance.\n\t *\n\t * @param {string} token the auth token to use\n\t * @param {module:net~Environment} [environment] the environment to use; if not provided a\n\t *        default environment will be created\n\t */\n\tconstructor(token, environment) {\n\t\t/**\n\t\t * The SolarNet auth token value.\n\t\t * @member {string}\n\t\t */\n\t\tthis.tokenId = token;\n\n\t\t/**\n\t\t * The SolarNet environment.\n\t\t * @member {module:net~Environment}\n\t\t */\n\t\tthis.environment = environment || new Environment();\n\n\t\t/**\n\t\t * The signed HTTP headers.\n\t\t *\n\t\t * @member {module:net~HttpHeaders}\n\t\t */\n\t\tthis.httpHeaders = new HttpHeaders();\n\n\t\t/**\n\t\t * The HTTP query parameters.\n\t\t *\n\t\t * @member {module:util~MultiMap}\n\t\t */\n\t\tthis.parameters = new MultiMap();\n\n\t\t/**\n\t\t * Force a port number to be added to host values, even if port would be implied.\n\t\t *\n\t\t * This can be useful when working with a server behind a proxy, where the\n\t\t * proxy is configured to always forward the port even if the port is implied\n\t\t * (i.e. HTTPS is used on the standard port 443).\n\t\t *\n\t\t * @member {boolean}\n\t\t */\n\t\tthis.forceHostPort = false;\n\n\t\tthis.reset();\n\t}\n\n\t/**\n\t * Reset to defalut property values.\n\t *\n\t * Any previously saved signing key via {@link module:net~AuthorizationV2Builder#saveSigningKey saveSigningKey()}\n\t * or {@link module:net~AuthorizationV2Builder#key key()} is preserved. The following items are reset:\n\t *\n\t *  * {@link module:net~AuthorizationV2Builder#method method()} is set to `GET`\n\t *  * {@link module:net~AuthorizationV2Builder#host host()} is set to `this.environment.host`\n\t *  * {@link module:net~AuthorizationV2Builder#path path()} is set to `/`\n\t *  * {@link module:net~AuthorizationV2Builder#date date()} is set to the current date\n\t *  * {@link module:net~AuthorizationV2Builder#contentSHA256 contentSHA256()} is cleared\n\t *  * {@link module:net~AuthorizationV2Builder#headers headers()} is cleared\n\t *  * {@link module:net~AuthorizationV2Builder#queryParams queryParams()} is cleared\n\t *  * {@link module:net~AuthorizationV2Builder#signedHttpHeaders signedHttpHeaders()} is set to a new empty array\n\t *\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\treset() {\n\t\tthis.contentDigest = null;\n\t\tvar host = this.environment.host;\n\t\tthis.httpHeaders.clear();\n\t\tthis.parameters.clear();\n\t\treturn this.signedHttpHeaders([])\n\t\t\t.method(HttpMethod.GET)\n\t\t\t.host(host)\n\t\t\t.path(\"/\")\n\t\t\t.date(new Date());\n\t}\n\n\t/**\n\t * Compute and cache the signing key.\n\t *\n\t * Signing keys are derived from the token secret and valid for 7 days, so\n\t * this method can be used to compute a signing key so that {@link module:net~AuthorizationV2Builder#build build()}\n\t * can be called later. The signing date will be set to whatever date is\n\t * currently configured via {@link module:net~AuthorizationV2Builder#date date()}, which defaults to the\n\t * current time for newly created builder instances.\n\t *\n\t * If you have an externally computed signing key, such as one returned from a token refresh API call,\n\t * use the {@link module:net~AuthorizationV2Builder#key key()} method to save it rather than this method.\n\t * If you want to compute the signing key, without caching it on this builder, use the\n\t * {@link module:net~AuthorizationV2Builder#computeSigningKey computeSigningKey()} method rather than\n\t * this method.\n\t *\n\t * @param {string} tokenSecret the secret to sign the digest with\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tsaveSigningKey(tokenSecret) {\n\t\tthis.key(this.computeSigningKey(tokenSecret), this.requestDate);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get or set the signing key.\n\t *\n\t * Use this method to save an existing signing key, for example one received via a refresh\n\t * request. The `date` parameter is used to track the expirataion date of the key, as\n\t * reported by the {@link module:net~AuthorizationV2Builder#signingKeyValid signingKeyValid}\n\t * property.\n\t *\n\t * If you have an actual token secret value, use the\n\t * {@link module:net~AuthorizationV2Builder#saveSigningKey saveSigningKey()} method to save it\n\t * rather than this method.\n\t *\n\t * @param {CryptoJS#WordArray} key the signing key to save\n\t * @param {Date} [date] an optional date the signing key was generated with; if not provided\n\t *                      the configured {@link module:net~AuthorizationV2Builder#date date()}\n\t *                      value will be used\n\t * @returns {CryptoJS#WordArray|module:net~AuthorizationV2Builder} when used as a getter, the\n\t *          current saved signing key value, otherwise this object\n\t * @see module:net~AuthorizationV2Builder#signingKeyExpirationDate\n\t */\n\tkey(key, date) {\n\t\tif (key === undefined) {\n\t\t\treturn this.signingKey;\n\t\t}\n\t\tthis.signingKey = key;\n\t\tlet expire = new Date(\n\t\t\t(date ? date.getTime() : this.requestDate.getTime()) + SIGNING_KEY_VALIDITY,\n\t\t);\n\t\texpire.setUTCHours(0);\n\t\texpire.setUTCMinutes(0);\n\t\texpire.setUTCSeconds(0);\n\t\texpire.setUTCMilliseconds(0);\n\t\tthis.signingKeyExpiration = expire;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the saved signing key expiration date.\n\t *\n\t * This will return the expiration date the signing key saved via\n\t * {@link module:net~AuthorizationV2Builder#key key()} or\n\t * {@link module:net~AuthorizationV2Builder#saveSigningKey saveSigningKey()}.\n\t *\n\t * @readonly\n\t * @type {Date}\n\t */\n\tget signingKeyExpirationDate() {\n\t\treturn this.signingKeyExpiration;\n\t}\n\n\t/**\n\t * Test if a signing key is present and not expired.\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tget signingKeyValid() {\n\t\treturn this.signingKey &&\n\t\t\tthis.signingKeyExpiration instanceof Date &&\n\t\t\tDate.now() < this.signingKeyExpiration.getTime()\n\t\t\t? true\n\t\t\t: false;\n\t}\n\n\t/**\n\t * Set the HTTP method (verb) to use.\n\t *\n\t * @param {string} val the method to use; see the {@link HttpMethod} enum for possible values\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tmethod(val) {\n\t\tthis.httpMethod = val;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the HTTP host.\n\t *\n\t * This is a shortcut for calling `HttpHeaders#put(HttpHeaders.HOST, val)`.\n\t *\n\t * @param {string} val the HTTP host value to use\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\thost(val) {\n\t\tif (this.forceHostPort && val.indexOf(\":\") < 0 && this.environment.port != 80) {\n\t\t\tval += \":\" + this.environment.port;\n\t\t}\n\t\tthis.httpHeaders.put(HttpHeaders.HOST, val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the HTTP request path to use.\n\t *\n\t * @param {string} val the request path to use\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tpath(val) {\n\t\tthis.requestPath = val;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the host, path, and query parameters via a URL string.\n\t *\n\t * @param {string} url the URL value to use\n\t * @param {boolean} [ignoreHost] if `true` then do not set the {@link module:net~AuthorizationV2Builder#host host()}\n\t *                               from the given URL; this can be useful when you do not want to override the configured\n\t *                               environment host\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\turl(url, ignoreHost) {\n\t\tconst uri = uriParse(url);\n\t\tlet host = uri.host;\n\t\tif (\n\t\t\turi.port &&\n\t\t\t(((uri.scheme === \"https\" || uri.scheme === \"wss\") && uri.port !== 443) ||\n\t\t\t\t((uri.scheme === \"http\" || uri.scheme === \"ws\") && uri.port !== 80))\n\t\t) {\n\t\t\thost += \":\" + uri.port;\n\t\t}\n\t\tif (uri.query) {\n\t\t\tthis.queryParams(urlQueryParse(uri.query));\n\t\t}\n\t\tif (!ignoreHost) {\n\t\t\tthis.host(host);\n\t\t}\n\t\treturn this.path(uri.scheme === \"wss\" || uri.scheme === \"ws\" ? uri.resourceName : uri.path);\n\t}\n\n\t/**\n\t * Set the HTTP content type.\n\t *\n\t * This is a shortcut for calling {@link module:net~HttpHeaders#put HttpHeaders.put()} with the\n\t * key {@link module:net~HttpHeaders.CONTENT_TYPE HttpHeaders.CONTENT_TYPE}.\n\t *\n\t * @param {string} val the HTTP content type value to use\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tcontentType(val) {\n\t\tthis.httpHeaders.put(HttpHeaders.CONTENT_TYPE, val);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the authorization request date.\n\t *\n\t * @param {Date} val the date to use; typically the current time, e.g. `new Date()`\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tdate(val) {\n\t\tthis.requestDate = val ? val : new Date();\n\t\treturn this;\n\t}\n\n\t/**\n\t * The authorization request date as a HTTP header string value.\n\t *\n\t * @readonly\n\t * @type {string}\n\t */\n\tget requestDateHeaderValue() {\n\t\treturn this.requestDate.toUTCString();\n\t}\n\n\t/**\n\t * Control using the `X-SN-Date` HTTP header versus the `Date` header.\n\t *\n\t * Set to `true` to use the `X-SN-Date` header, `false` to use\n\t * the `Date` header. This will return `true` if `X-SN-Date` has been\n\t * added to the `signedHeaderNames` property or has been added to the `httpHeaders`\n\t * property.\n\t *\n\t * @type {boolean}\n\t */\n\tget useSnDate() {\n\t\tlet signedHeaders = this.signedHeaderNames;\n\t\tlet existingIndex = Array.isArray(signedHeaders)\n\t\t\t? signedHeaders.findIndex(caseInsensitiveEqualsFn(HttpHeaders.X_SN_DATE))\n\t\t\t: -1;\n\t\treturn existingIndex >= 0 || this.httpHeaders.containsKey(HttpHeaders.X_SN_DATE);\n\t}\n\n\tset useSnDate(enabled) {\n\t\tlet signedHeaders = this.signedHeaderNames;\n\t\tlet existingIndex = Array.isArray(signedHeaders)\n\t\t\t? signedHeaders.findIndex(caseInsensitiveEqualsFn(HttpHeaders.X_SN_DATE))\n\t\t\t: -1;\n\t\tif (enabled && existingIndex < 0) {\n\t\t\tsignedHeaders = signedHeaders\n\t\t\t\t? signedHeaders.concat(HttpHeaders.X_SN_DATE)\n\t\t\t\t: [HttpHeaders.X_SN_DATE];\n\t\t\tthis.signedHeaderNames = signedHeaders;\n\t\t} else if (!enabled && existingIndex >= 0) {\n\t\t\tsignedHeaders.splice(existingIndex, 1);\n\t\t\tthis.signedHeaderNames = signedHeaders;\n\t\t}\n\n\t\t// also clear from httpHeaders\n\t\tthis.httpHeaders.remove(HttpHeaders.X_SN_DATE);\n\t}\n\n\t/**\n\t * Set the `useSnDate` property.\n\t *\n\t * @param {boolean} enabled `true` to use the `X-SN-Date` header, `false` to use `Date`\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tsnDate(enabled) {\n\t\tthis.useSnDate = enabled;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set a HTTP header value.\n\t *\n\t * This is a shortcut for calling `HttpHeaders#put(headerName, val)`.\n\t *\n\t * @param {string} headerName the header name to set\n\t * @param {string} headerValue the header value to set\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\theader(headerName, headerValue) {\n\t\tthis.httpHeaders.put(headerName, headerValue);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the HTTP headers to use with the request.\n\t *\n\t * The headers object must include all headers necessary by the\n\t * authentication scheme, and any additional headers also configured via\n\t * {@link module:net~AuthorizationV2Builder#signedHttpHeaders}.\n\t *\n\t * @param {HttpHeaders} headers the HTTP headers to use\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\theaders(headers) {\n\t\tthis.httpHeaders = headers;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the HTTP `GET` query parameters, or `POST` form-encoded\n\t * parameters.\n\t *\n\t * @param {MultiMap|Object} params the parameters to use, as either a {@link MultiMap} or simple `Object`\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tqueryParams(params) {\n\t\tif (params instanceof MultiMap) {\n\t\t\tthis.parameters = params;\n\t\t} else {\n\t\t\tthis.parameters.putAll(params);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set additional HTTP header names to sign with the authentication.\n\t *\n\t * @param {sring[]} signedHeaderNames additional HTTP header names to include in the signature\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tsignedHttpHeaders(signedHeaderNames) {\n\t\tthis.signedHeaderNames = signedHeaderNames;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the HTTP request body content SHA-256 digest value.\n\t *\n\t * @param {string|module:crypto-js/enc-hex~WordArray} digest the digest value to use; if a string it is assumed to be Hex encoded\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tcontentSHA256(digest) {\n\t\tvar contentDigest;\n\t\tif (typeof digest === \"string\") {\n\t\t\tcontentDigest = Hex.parse(digest);\n\t\t} else {\n\t\t\tcontentDigest = digest;\n\t\t}\n\t\tthis.contentDigest = contentDigest;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Compute the SHA-256 digest of the request body content and configure the result on this builder.\n\t *\n\t * This method will compute the digest and then save the result via the\n\t * {@link module:net~AuthorizationV2Builder#contentSHA256 contentSHA256()}\n\t * method. In addition, it will set the `Digest` HTTP header value via\n\t * {@link module:net~AuthorizationV2Builder#header header()}.\n\t * This means you _must_ also pass the `Digest` HTTP header with the request. After calling this\n\t * method, you can retrieve the `Digest` HTTP header value via the `httpHeaders`property.\n\t *\n\t * @param {string} content the request body content to compute a SHA-256 digest value from\n\t * @returns {module:net~AuthorizationV2Builder} this object\n\t */\n\tcomputeContentDigest(content) {\n\t\tvar digest = SHA256(content);\n\t\tthis.contentSHA256(digest);\n\t\tthis.header(\"Digest\", \"sha-256=\" + Base64.stringify(digest));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Compute the canonical query parameters.\n\t *\n\t * @returns {string} the canonical query parameters string value\n\t */\n\tcanonicalQueryParameters() {\n\t\tconst keys = this.parameters.keySet();\n\t\tif (keys.length < 1) {\n\t\t\treturn \"\";\n\t\t}\n\t\tkeys.sort();\n\t\tconst len = keys.length;\n\t\tvar first = true,\n\t\t\tresult = \"\";\n\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\tlet key = keys[i];\n\t\t\tlet vals = this.parameters.value(key);\n\t\t\tconst valsLen = vals.length;\n\t\t\tfor (let j = 0; j < valsLen; j += 1) {\n\t\t\t\tif (first) {\n\t\t\t\t\tfirst = false;\n\t\t\t\t} else {\n\t\t\t\t\tresult += \"&\";\n\t\t\t\t}\n\t\t\t\tresult += _encodeURIComponent(key) + \"=\" + _encodeURIComponent(vals[j]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compute the canonical HTTP headers string value.\n\t *\n\t * @param {string[]} sortedLowercaseHeaderNames the sorted, lower-cased HTTP header names to include\n\t * @returns {string} the canonical headers string value\n\t */\n\tcanonicalHeaders(sortedLowercaseHeaderNames) {\n\t\tvar result = \"\",\n\t\t\theaderName,\n\t\t\theaderValue;\n\t\tconst len = sortedLowercaseHeaderNames.length;\n\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\theaderName = sortedLowercaseHeaderNames[i];\n\t\t\tif (\"date\" === headerName || \"x-sn-date\" === headerName) {\n\t\t\t\theaderValue = this.requestDate.toUTCString();\n\t\t\t} else {\n\t\t\t\theaderValue = this.httpHeaders.firstValue(headerName);\n\t\t\t}\n\t\t\tresult += headerName + \":\" + (headerValue ? headerValue.trim() : \"\") + \"\\n\";\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compute the canonical signed header names value from an array of HTTP header names.\n\t *\n\t * @param {string[]} sortedLowercaseHeaderNames the sorted, lower-cased HTTP header names to include\n\t * @returns {string} the canonical signed header names string value\n\t * @private\n\t */\n\tcanonicalSignedHeaderNames(sortedLowercaseHeaderNames) {\n\t\treturn sortedLowercaseHeaderNames.join(\";\");\n\t}\n\n\t/**\n\t * Get the canonical request content SHA256 digest, hex encoded.\n\t *\n\t * @returns {string} the hex-encoded SHA256 digest of the request content\n\t */\n\tcanonicalContentSHA256() {\n\t\treturn this.contentDigest\n\t\t\t? Hex.stringify(this.contentDigest)\n\t\t\t: AuthorizationV2Builder.EMPTY_STRING_SHA256_HEX;\n\t}\n\n\t/**\n\t * Compute the canonical HTTP header names to include in the signature.\n\t *\n\t * @returns {string[]} the sorted, lower-cased HTTP header names to include\n\t */\n\tcanonicalHeaderNames() {\n\t\tconst httpHeaders = this.httpHeaders;\n\t\tconst signedHeaderNames = this.signedHeaderNames;\n\n\t\t// use a MultiMap to take advantage of case-insensitive keys\n\t\tconst map = new MultiMap();\n\n\t\tmap.put(HttpHeaders.HOST, true);\n\t\tif (this.useSnDate) {\n\t\t\tmap.put(HttpHeaders.X_SN_DATE, true);\n\t\t} else {\n\t\t\tmap.put(HttpHeaders.DATE, true);\n\t\t}\n\t\tif (httpHeaders.containsKey(HttpHeaders.CONTENT_MD5)) {\n\t\t\tmap.put(HttpHeaders.CONTENT_MD5, true);\n\t\t}\n\t\tif (httpHeaders.containsKey(HttpHeaders.CONTENT_TYPE)) {\n\t\t\tmap.put(HttpHeaders.CONTENT_TYPE, true);\n\t\t}\n\t\tif (httpHeaders.containsKey(HttpHeaders.DIGEST)) {\n\t\t\tmap.put(HttpHeaders.DIGEST, true);\n\t\t}\n\t\tif (signedHeaderNames && signedHeaderNames.length > 0) {\n\t\t\tsignedHeaderNames.forEach((e) => map.put(e, true));\n\t\t}\n\t\treturn lowercaseSortedArray(map.keySet());\n\t}\n\n\t/**\n\t * Compute the canonical request data that will be included in the data to sign with the request.\n\t *\n\t * @returns {string} the canonical request data\n\t */\n\tbuildCanonicalRequestData() {\n\t\treturn this.computeCanonicalRequestData(this.canonicalHeaderNames());\n\t}\n\n\t/**\n\t * Compute the canonical request data that will be included in the data to sign with the request,\n\t * using a specific set of HTTP header names to sign.\n\t *\n\t * @param {string[]} sortedLowercaseHeaderNames the sorted, lower-cased HTTP header names to sign with the request\n\t * @returns {string} the canonical request data\n\t * @private\n\t */\n\tcomputeCanonicalRequestData(sortedLowercaseHeaderNames) {\n\t\t// 1: HTTP verb\n\t\tvar result = this.httpMethod + \"\\n\";\n\n\t\t// 2: Canonical URI\n\t\tresult += this.requestPath + \"\\n\";\n\n\t\t// 3: Canonical query string\n\t\tresult += this.canonicalQueryParameters() + \"\\n\";\n\n\t\t// 4: Canonical headers\n\t\tresult += this.canonicalHeaders(sortedLowercaseHeaderNames); // already includes newline\n\n\t\t// 5: Signed header names\n\t\tresult += this.canonicalSignedHeaderNames(sortedLowercaseHeaderNames) + \"\\n\";\n\n\t\t// 6: Content SHA256, hex encoded\n\t\tresult += this.canonicalContentSHA256();\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compute the signing key, from a secret key and based on the\n\t * configured {@link module:net~AuthorizationV2Builder#date date()}.\n\t *\n\t * This method does not save the signing key for future use in this builder instance\n\t * (see {@link module:net~AuthorizationV2Builder#saveSigningKey saveSigningKey()} for that).\n\t * Use this method if you want to compute a signing key that you can later pass to\n\t * {@link module:net~AuthorizationV2Builder#buildWithKey buildWithKey()} on some other builder instance.\n\t * Signing keys are valid for a maximum of 7 days, granular to whole days only.\n\t * To make a signing key expire in fewer than 7 days, configure  a\n\t * {@link module:net~AuthorizationV2Builder#date date()} value in the past before\n\t * calling this method.\n\t *\n\t * @param {string} secretKey the secret key string\n\t * @returns {CryptoJS#WordArray} the computed key\n\t */\n\tcomputeSigningKey(secretKey) {\n\t\tconst datestring = iso8601Date(this.requestDate);\n\t\tconst key = HmacSHA256(\"snws2_request\", HmacSHA256(datestring, \"SNWS2\" + secretKey));\n\t\treturn key;\n\t}\n\n\t/**\n\t * Compute the data to be signed by the signing key.\n\t *\n\t * @param {string} canonicalRequestData the request data, returned from {@link module:net~AuthorizationV2Builder#buildCanonicalRequestData}\n\t * @returns {string} the data to sign\n\t * @private\n\t */\n\tcomputeSignatureData(canonicalRequestData) {\n\t\t/*- signature data is like:\n\n            SNWS2-HMAC-SHA256\\n\n            20170301T120000Z\\n\n            Hex(SHA256(canonicalRequestData))\n        */\n\t\treturn (\n\t\t\t\"SNWS2-HMAC-SHA256\\n\" +\n\t\t\tiso8601Date(this.requestDate, true) +\n\t\t\t\"\\n\" +\n\t\t\tHex.stringify(SHA256(canonicalRequestData))\n\t\t);\n\t}\n\n\t/**\n\t * Compute a HTTP `Authorization` header value from the configured properties\n\t * on the builder, using the provided signing key.\n\t *\n\t * This method does not save the signing key for future use in this builder instance\n\t * (see {@link module:net~AuthorizationV2Builder#key key()} for that).\n\t *\n\t * @param {CryptoJS#WordArray} signingKey the key to sign the computed signature data with\n\t * @returns {string} the SNWS2 HTTP Authorization header value\n\t */\n\tbuildWithKey(signingKey) {\n\t\tconst sortedHeaderNames = this.canonicalHeaderNames();\n\t\tconst canonicalReq = this.computeCanonicalRequestData(sortedHeaderNames);\n\t\tconst signatureData = this.computeSignatureData(canonicalReq);\n\t\tconst signature = Hex.stringify(HmacSHA256(signatureData, signingKey));\n\t\tlet result =\n\t\t\t\"SNWS2 Credential=\" +\n\t\t\tthis.tokenId +\n\t\t\t\",SignedHeaders=\" +\n\t\t\tsortedHeaderNames.join(\";\") +\n\t\t\t\",Signature=\" +\n\t\t\tsignature;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compute a HTTP `Authorization` header value from the configured\n\t * properties on the builder, computing a new signing key based on the\n\t * configured {@link module:net~AuthorizationV2Builder#date}.\n\t *\n\t * @param {string} tokenSecret the secret to sign the authorization with\n\t * @return {string} the SNWS2 HTTP Authorization header value\n\t */\n\tbuild(tokenSecret) {\n\t\tconst signingKey = this.computeSigningKey(tokenSecret);\n\t\treturn this.buildWithKey(signingKey);\n\t}\n\n\t/**\n\t * Compute a HTTP `Authorization` header value from the configured\n\t * properties on the builder, using a signing key configured from a previous\n\t * call to {@link module:net~AuthorizationV2Builder#saveSigningKey saveSigningKey()}\n\t * or {@link module:net~AuthorizationV2Builder#key key()}.\n\t *\n\t * @return {string} the SNWS2 HTTP Authorization header value.\n\t */\n\tbuildWithSavedKey() {\n\t\treturn this.buildWithKey(this.signingKey);\n\t}\n}\n\n/**\n * @function stringMatchFn\n * @param {string} e the element to test\n * @returns {boolean} `true` if the element matches\n * @private\n */\n\n/**\n * Create a case-insensitive string matching function.\n *\n * @param {string} value the string to perform the case-insensitive comparison against\n * @returns {stringMatchFn} a matching function that performs a case-insensitive comparison\n * @private\n */\nfunction caseInsensitiveEqualsFn(value) {\n\tconst valueLc = value.toLowerCase();\n\treturn (e) => valueLc === e.toString().toLowerCase();\n}\n\n/**\n * Create a new array of lower-cased and sorted strings from another array.\n *\n * @param {string[]} items the items to lower-case and sort\n * @returns {string[]} a new array of the lower-cased and sorted items\n * @private\n */\nfunction lowercaseSortedArray(items) {\n\tconst sortedItems = [];\n\tconst len = items.length;\n\tfor (let i = 0; i < len; i += 1) {\n\t\tsortedItems.push(items[i].toLowerCase());\n\t}\n\tsortedItems.sort();\n\treturn sortedItems;\n}\n\nfunction _hexEscapeChar(c) {\n\treturn \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n}\n\nfunction _encodeURIComponent(str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, _hexEscapeChar);\n}\n\nObject.defineProperties(AuthorizationV2Builder, {\n\t/**\n\t * The hex-encoded value for an empty SHA256 digest value.\n\t *\n\t * @memberof AuthorizationV2Builder\n\t * @readonly\n\t * @type {string}\n\t */\n\tEMPTY_STRING_SHA256_HEX: {\n\t\tvalue: \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n\t},\n\n\t/**\n\t * The SolarNetwork V2 authorization scheme.\n\t *\n\t * @memberof AuthorizationV2Builder\n\t * @readonly\n\t * @type {string}\n\t */\n\tSNWS2_AUTH_SCHEME: { value: \"SNWS2\" },\n});\n\nexport default AuthorizationV2Builder;\n","import Configuration from \"../util/configuration.js\";\nimport Environment from \"./environment.js\";\n\n/**\n * A utility class for helping to compose SolarNet URLs for the REST API.\n *\n * This class is essentially abstract and meant to have mixin helper objects extend it.\n * @alias module:net~UrlHelper\n */\nclass UrlHelper {\n\t/**\n\t * Constructor.\n\t *\n\t * @param {module:net~Environment|object} [environment] the optional initial environment to use;\n\t *        if a non-`Environment` object is passed then the properties of that object will\n\t *        be used to construct a new `Environment` instance\n\t */\n\tconstructor(environment) {\n\t\tlet env = environment instanceof Environment ? environment : new Environment(environment);\n\n\t\t/**\n\t\t * The environment associated with this helper.\n\t\t * @member {module:net~Environment}\n\t\t */\n\t\tthis.environment = env;\n\n\t\tthis._parameters = new Configuration();\n\t}\n\n\t/**\n\t * Get a parameters object that can be used to hold URL variables.\n\t *\n\t * @readonly\n\t * @type {module:util~Configuration}\n\t */\n\tget parameters() {\n\t\treturn this._parameters;\n\t}\n\n\t/**\n\t * Get or set an environment parameter.\n\t *\n\t * This is a shortcut for calling {@link module:net~Configuration#value} on the\n\t * `environment` object.\n\t *\n\t * @param {string} key the environment parameter name to get\n\t * @param {object} [val] the optional value to set\n\t * @returns {object} when called as a getter, the environment parameter value;\n\t *                   when called as a setter, the environment parameters object\n\t */\n\tenv(...args) {\n\t\treturn this.environment.value(...args);\n\t}\n\n\t/**\n\t * Get or set a parameter.\n\t *\n\t * This is a shortcut for calling {@link module:net~Configuration#value} on the\n\t * `parameters` object.\n\t *\n\t * @param {string} key the parameter name to get\n\t * @param {Object} [val] the optional value to set\n\t * @returns {Object} when called as a getter, the parameter value;\n\t *                   when called as a setter, the parameters object\n\t */\n\tparameter(...args) {\n\t\treturn this._parameters.value(...args);\n\t}\n\n\t/**\n\t * Get a URL for just the SolarNet host, without any path.\n\t *\n\t * This method constructs an absolute URL based on the following properties configured\n\t * on this instance's {@link module:net~Environment}:\n\t *\n\t *  1. If {@link module:net~Environment#useTls environment.useTls()} returns `true` then\n\t *     use HTTPS as the protocol, otherwise HTTP.\n\t *  2. Use `host` for the host name or IP address, unless `proxyHost` is available.\n\t *  3. Use `port` for the port, unless `proxyPort` is available. If neither are available, use `443` for\n\t *     HTTPS or `80` for HTTP.\n\t *\n\t * @returns {string} the URL to the SolarNet host\n\t */\n\thostUrl() {\n\t\tconst tls = this.environment.useTls();\n\t\tconst host = this.environment.value(\"proxyHost\") || this.environment.value(\"host\");\n\t\tconst port = +(this.environment.value(\"proxyPort\") || this.environment.value(\"port\"));\n\t\tlet url = \"http\" + (tls ? \"s\" : \"\") + \"://\" + host;\n\t\tif ((tls && port > 0 && port !== 443) || (!tls && port > 0 && port !== 80)) {\n\t\t\turl += \":\" + port;\n\t\t}\n\t\treturn url;\n\t}\n\n\t/**\n\t * Get a URL for just the SolarNet host using the WebSocket protocol, without any path.\n\t *\n\t * This method constructs an absolute URL based on the following properties configured\n\t * on this instance's {@link module:net~Environment}:\n\t *\n\t *  1. If {@link module:net~Environment#useTls environment.useTls()} returns `true` then\n\t *     use WSS as the protocol, otherwise WS.\n\t *  2. Use `host` for the host name or IP address, unless `proxyHost` is available.\n\t *  3. Use `port` for the port, unless `proxyPort` is available. If neither are available, use `443` for\n\t *     WSS or `80` for WS.\n\t *\n\t * @returns {string} the URL to the SolarNet host WebSocket\n\t */\n\thostWebSocketUrl() {\n\t\tconst tls = this.environment.useTls();\n\t\tconst host = this.environment.value(\"proxyHost\") || this.environment.value(\"host\");\n\t\tconst port = +(this.environment.value(\"proxyPort\") || this.environment.value(\"port\"));\n\t\tlet url = \"ws\" + (tls ? \"s\" : \"\") + \"://\" + host;\n\t\tif ((tls && port > 0 && port !== 443) || (!tls && port > 0 && port !== 80)) {\n\t\t\turl += \":\" + port;\n\t\t}\n\t\treturn url;\n\t}\n\n\t/**\n\t * Get the base URL to the REST API.\n\t *\n\t * This implementation is a stub, meant for subclasses to override. This implementation\n\t * simply returns {@link module:net~UrlHelper#hostUrl}.\n\t *\n\t * @abstract\n\t * @returns {string} the base URL to the REST API\n\t */\n\tbaseUrl() {\n\t\treturn this.hostUrl();\n\t}\n\n\t/**\n\t * Replace occurances of URL template variables with values from the `parameters`\n\t * property and append to the host URL.\n\t *\n\t * This method provides a way to resolve an absolute URL based on the configured\n\t * environment and parameters on this object.\n\t *\n\t * @param {string} template a URL path template\n\t * @returns {string} an absolute URL\n\t * @see module:net~UrlHelper#resolveTemplateUrl\n\t */\n\tresolveTemplatePath(template) {\n\t\treturn this.hostUrl() + this.resolveTemplateUrl(template);\n\t}\n\n\t/**\n\t * Replace occurances of URL template variables with values from the `parameters`\n\t * property.\n\t *\n\t * URL template variables are specified as `{<em>name</em>}`. The variable\n\t * will be replaced by the value associated with property `name` in the\n\t * `parameters` object. The value will be URI encoded.\n\t *\n\t * @param {string} template a URL template\n\t * @returns {string} the URL with template variables resolved\n\t */\n\tresolveTemplateUrl(template) {\n\t\treturn UrlHelper.resolveTemplateUrl(template, this._parameters);\n\t}\n\n\t/**\n\t * Replace occurances of URL template variables with values from a parameter object.\n\t *\n\t * URL template variables are specified as `{<em>name</em>}`. The variable\n\t * will be replaced by the value associated with property `name` in the\n\t * provided parameter object. The value will be URI encoded.\n\t *\n\t * @param {string} template a URL template\n\t * @param {object} params an object whose properties should serve as template variables\n\t * @returns {string} the URL\n\t */\n\tstatic resolveTemplateUrl(template, params) {\n\t\treturn template.replace(/\\{([^}]+)\\}/g, function (match, variableName) {\n\t\t\tlet variableValue = params[variableName];\n\t\t\treturn variableValue !== undefined ? encodeURIComponent(variableValue) : \"\";\n\t\t});\n\t}\n}\n\nexport default UrlHelper;\n","const LocationIdsKey = \"locationIds\";\nconst SourceIdsKey = \"sourceIds\";\n\n/**\n * Create a LocationUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~LocationUrlHelperMixin} the mixin class\n */\nconst LocationUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds support for SolarLocation properties to a {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~LocationUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * The first available location ID from the `locationIds` property.\n\t\t * Setting this replaces any existing location IDs with an array of just that value.\n\t\t * @type {number}\n\t\t */\n\t\tget locationId() {\n\t\t\tconst locationIds = this.locationIds;\n\t\t\treturn Array.isArray(locationIds) && locationIds.length > 0 ? locationIds[0] : null;\n\t\t}\n\n\t\tset locationId(locationId) {\n\t\t\tthis.parameter(LocationIdsKey, locationId ? [locationId] : null);\n\t\t}\n\n\t\t/**\n\t\t * An array of location IDs, set on the `locationIds` parameter\n\t\t * @type {number[]}\n\t\t */\n\t\tget locationIds() {\n\t\t\treturn this.parameter(LocationIdsKey);\n\t\t}\n\n\t\tset locationIds(locationIds) {\n\t\t\tthis.parameter(LocationIdsKey, locationIds);\n\t\t}\n\n\t\t/**\n\t\t * The first available source ID from the `sourceIds` property.\n\t\t * Setting this replaces any existing location IDs with an array of just that value.\n\t\t * @type {string}\n\t\t */\n\t\tget sourceId() {\n\t\t\tconst sourceIds = this.sourceIds;\n\t\t\treturn Array.isArray(sourceIds) && sourceIds.length > 0 ? sourceIds[0] : null;\n\t\t}\n\n\t\tset sourceId(sourceId) {\n\t\t\tthis.parameter(SourceIdsKey, sourceId ? [sourceId] : sourceId);\n\t\t}\n\n\t\t/**\n\t\t * An array of source IDs, set on the `sourceIds` parameter\n\t\t * @type {string[]}\n\t\t */\n\t\tget sourceIds() {\n\t\t\treturn this.parameter(SourceIdsKey);\n\t\t}\n\n\t\tset sourceIds(sourceIds) {\n\t\t\tthis.parameter(SourceIdsKey, sourceIds);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to find locations based on a search criteria.\n\t\t *\n\t\t * @param {module:domain~Location} filter the search criteria\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the generated URL\n\t\t */\n\t\tfindLocationsUrl(filter, sorts, pagination) {\n\t\t\treturn (\n\t\t\t\tthis.baseUrl() + \"/location?\" + filter.toUriEncodingWithSorting(sorts, pagination)\n\t\t\t);\n\t\t}\n\t};\n\nexport default LocationUrlHelperMixin;\n","/**\n * The SolarQuery default path.\n * @type {string}\n * @alias module:net~SolarQueryDefaultPath\n */\nexport const SolarQueryDefaultPath = \"/solarquery\";\n\n/**\n * The {@link module:net~UrlHelper#parameters} key for the SolarQuery path.\n * @type {string}\n * @alias module:net~SolarQueryPathKey\n */\nexport const SolarQueryPathKey = \"solarQueryPath\";\n\n/**\n * The SolarQuery REST API path.\n * @type {string}\n * @alias module:net~SolarQueryApiPathV1\n */\nexport const SolarQueryApiPathV1 = \"/api/v1\";\n\n/**\n * The {@link module:net~UrlHelper#parameters} key that holds a `boolean` flag to\n * use the public path scheme (`/pub`) when constructing URLs.\n * @type {string}\n * @alias module:net~SolarQueryPublicPathKey\n */\nexport const SolarQueryPublicPathKey = \"publicQuery\";\n\n/**\n * Create a QueryUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~QueryUrlHelperMixin} the mixin class\n */\nconst QueryUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarQuery specific support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~QueryUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Flag to set the `publicQuery` environment parameter.\n\t\t * @type {boolean}\n\t\t */\n\t\tget publicQuery() {\n\t\t\treturn !!this.env(SolarQueryPublicPathKey);\n\t\t}\n\n\t\tset publicQuery(value) {\n\t\t\tthis.env(SolarQueryPublicPathKey, !!value);\n\t\t}\n\n\t\t/**\n\t\t * Get the base URL to the SolarQuery v1 REST API.\n\t\t *\n\t\t * The returned URL uses the configured environment to resolve\n\t\t * the `hostUrl`, the `solarQueryPath` context path,\n\t\t * and the `publicQuery` boolean flag. If the context path is not\n\t\t * available, it will default to `/solarquery`.\n\t\t *\n\t\t * @returns {string} the base URL to SolarQuery\n\t\t */\n\t\tbaseUrl() {\n\t\t\tconst path = this.env(SolarQueryPathKey) || SolarQueryDefaultPath;\n\t\t\tconst isPubPath = this.publicQuery;\n\t\t\treturn this.hostUrl() + path + SolarQueryApiPathV1 + (isPubPath ? \"/pub\" : \"/sec\");\n\t\t}\n\t};\n\nexport default QueryUrlHelperMixin;\n","import UrlHelper from \"./urlHelper.js\";\nimport LocationUrlHelperMixin from \"./locationUrlHelperMixin.js\";\nimport QueryUrlHelperMixin from \"./queryUrlHelperMixin.js\";\n\n/**\n * Create a LocationDatumMetadataUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~LocationDatumMetadataUrlHelperMixin} the mixin class\n */\nconst LocationDatumMetadataUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarNode datum metadata support to {@link module:net~UrlHelper}.\n\t *\n\t * <p>Location datum metadata is metadata associated with a specific location and source, i.e.\n\t * a `locationId` and a `sourceId`.\n\t *\n\t * @mixin\n\t * @alias module:net~LocationDatumMetadataUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Get a base URL for location datum metadata operations using a specific location ID.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId` property of this class will be used\n\t\t * @returns {string} the base URL\n\t\t * @private\n\t\t */\n\t\tbaseLocationDatumMetadataUrl(locationId) {\n\t\t\treturn this.baseUrl() + \"/location/meta/\" + (locationId || this.locationId);\n\t\t}\n\n\t\tlocationDatumMetadataUrlWithSource(locationId, sourceId) {\n\t\t\tlet result = this.baseLocationDatumMetadataUrl(locationId);\n\t\t\tlet source = sourceId || this.sourceId;\n\t\t\tif (sourceId !== null && source) {\n\t\t\t\tresult += \"?sourceId=\" + encodeURIComponent(source);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing datum metadata.\n\t\t *\n\t\t * If no `sourceId` is provided, then the API will return all available datum metadata for all sources.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId` property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use;\n\t\t *                            if not provided the `sourceId` property of this class will be used;\n\t\t *                            if `null` then ignore any `sourceId` property of this class\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewLocationDatumMetadataUrl(locationId, sourceId) {\n\t\t\treturn this.locationDatumMetadataUrlWithSource(locationId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for adding (merging) datum metadata via a `POST` request.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId` property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use; if not provided the `sourceId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\taddLocationDatumMetadataUrl(locationId, sourceId) {\n\t\t\treturn this.locationDatumMetadataUrlWithSource(locationId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for setting datum metadata via a `PUT` request.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId` property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use; if not provided the `sourceId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\treplaceLocationDatumMetadataUrl(locationId, sourceId) {\n\t\t\treturn this.locationDatumMetadataUrlWithSource(locationId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for deleting datum metadata via a `DELETE` request.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId` property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use; if not provided the `sourceId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tdeleteLocationDatumMetadataUrl(locationId, sourceId) {\n\t\t\treturn this.locationDatumMetadataUrlWithSource(locationId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for searching for location metadata.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} [filter] a search filter; the `locationIds`, `sourceIds`, `tags`,\n\t\t *                                    `query`, and `location` properties are supported\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tfindLocationDatumMetadataUrl(filter, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/location/meta\";\n\t\t\tlet params = filter.toUriEncodingWithSorting(sorts, pagination);\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~LocationDatumMetadataUrlHelperMixin},\n * {@link module:net~QueryUrlHelperMixin}, and {@link module:net~LocationUrlHelperMixin} mixins.\n *\n * @mixes module:net~LocationDatumMetadataUrlHelperMixin\n * @mixes module:net~QueryUrlHelperMixin\n * @mixes module:net~LocationUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~LocationDatumMetadataUrlHelper\n */\nclass LocationDatumMetadataUrlHelper extends LocationDatumMetadataUrlHelperMixin(\n\tQueryUrlHelperMixin(LocationUrlHelperMixin(UrlHelper)),\n) {}\n\nexport default LocationDatumMetadataUrlHelperMixin;\nexport { LocationDatumMetadataUrlHelper };\n","import { dateTimeUrlFormat } from \"../format/date.js\";\nimport UrlHelper from \"./urlHelper.js\";\nimport LocationUrlHelperMixin from \"./locationUrlHelperMixin.js\";\nimport QueryUrlHelperMixin from \"./queryUrlHelperMixin.js\";\n\n/**\n * Create a LocationDatumUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~LocationDatumUrlHelperMixin} the mixin class\n */\nconst LocationDatumUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarLocation datum query support to {@link module:net~UrlHelper}.\n\t *\n\t * <p>This mixin is commonly mixed with the {@link module:net~QueryUrlHelperMixin} to pick\n\t * up support for the SolarQuery base URL.</p>\n\t *\n\t * <p>This mixin is commonly mixed with the {@link module:net~LocationUrlHelperMixin} to\n\t * pick up support for `locationId` and `sourceId` properties.</p>\n\t *\n\t * @mixin\n\t * @alias module:net~LocationDatumUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL for the \"reportable interval\" for a location, optionally limited to a specific source ID.\n\t\t *\n\t\t * If no source IDs are provided, then the reportable interval query will return an interval for\n\t\t * all available sources.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId` property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to limit query to;\n\t\t *                 if not provided the `sourceId` property of this class will be used;\n\t\t *                 if `null` the `sourceId` property of this class will be ignored\n\t\t * @returns {string} the URL\n\t\t */\n\t\treportableIntervalUrl(locationId, sourceId) {\n\t\t\tlet url =\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/location/datum/interval?locationId=\" +\n\t\t\t\t(locationId || this.locationId);\n\t\t\tlet source = sourceId || this.sourceId;\n\t\t\tif (sourceId !== null && source) {\n\t\t\t\turl += \"&sourceId=\" + encodeURIComponent(source);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for finding the available source IDs for a location or metadata filter.\n\t\t *\n\t\t * @param {number} [locationId] a specific location ID to use; if not provided the `locationId`\n\t\t *                              property of this class will be used\n\t\t * @param {Date} [startDate] a start date to limit the search to\n\t\t * @param {Date} [endDate] an end date to limit the search to\n\t\t * @returns {string} the URL\n\t\t */\n\t\tavailableSourcesUrl(locationId, startDate, endDate) {\n\t\t\tlet result =\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/location/datum/sources?locationId=\" +\n\t\t\t\t(locationId || this.locationId);\n\t\t\tif (startDate instanceof Date) {\n\t\t\t\tresult += \"&start=\" + encodeURIComponent(dateTimeUrlFormat(startDate));\n\t\t\t}\n\t\t\tif (endDate instanceof Date) {\n\t\t\t\tresult += \"&end=\" + encodeURIComponent(dateTimeUrlFormat(endDate));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for location datum, in either raw or aggregate form.\n\t\t *\n\t\t * If the `datumFilter` has an `aggregate` value set, then aggregate results will be\n\t\t * returned by SolarNet.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tlistDatumUrl(datumFilter, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/location/datum/list\";\n\t\t\tlet params = datumFilter ? datumFilter.toUriEncodingWithSorting(sorts, pagination) : \"\";\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for the most recent datum.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tmostRecentDatumUrl(datumFilter, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/location/datum/mostRecent\";\n\t\t\tlet params = datumFilter ? datumFilter.toUriEncodingWithSorting(sorts, pagination) : \"\";\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~LocationDatumUrlHelperMixin},\n * {@link module:net~QueryUrlHelperMixin}, and {@link module:net~LocationUrlHelperMixin} mixins.\n *\n * @mixes module:net~LocationDatumUrlHelperMixin\n * @mixes module:net~QueryUrlHelperMixin\n * @mixes module:net~LocationUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~LocationDatumUrlHelper\n */\nclass LocationDatumUrlHelper extends LocationDatumUrlHelperMixin(\n\tQueryUrlHelperMixin(LocationUrlHelperMixin(UrlHelper)),\n) {}\n\nexport default LocationDatumUrlHelperMixin;\nexport { LocationDatumUrlHelper };\n","import DatumFilter from \"../domain/datumFilter.js\";\n\nconst NodeIdsKey = \"nodeIds\";\nconst SourceIdsKey = \"sourceIds\";\n\n/**\n * Create a NodeUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~NodeUrlHelperMixin} the mixin class\n */\nconst NodeUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds support for SolarNode properties to a {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~NodeUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * The first available node ID from the `nodeIds` property.\n\t\t * Setting this replaces any existing node IDs with an array of just that value.\n\t\t * @type {number}\n\t\t */\n\t\tget nodeId() {\n\t\t\tconst nodeIds = this.nodeIds;\n\t\t\treturn Array.isArray(nodeIds) && nodeIds.length > 0 ? nodeIds[0] : null;\n\t\t}\n\n\t\tset nodeId(nodeId) {\n\t\t\tthis.parameter(NodeIdsKey, nodeId ? [nodeId] : null);\n\t\t}\n\n\t\t/**\n\t\t * An array of node IDs, set on the `nodeIds` parameter\n\t\t * @type {number[]}\n\t\t */\n\t\tget nodeIds() {\n\t\t\treturn this.parameter(NodeIdsKey);\n\t\t}\n\n\t\tset nodeIds(nodeIds) {\n\t\t\tthis.parameter(NodeIdsKey, nodeIds);\n\t\t}\n\n\t\t/**\n\t\t * The first available source ID from the `sourceIds` property.\n\t\t * Setting this replaces any existing node IDs with an array of just that value.\n\t\t * @type {string}\n\t\t */\n\t\tget sourceId() {\n\t\t\tconst sourceIds = this.sourceIds;\n\t\t\treturn Array.isArray(sourceIds) && sourceIds.length > 0 ? sourceIds[0] : null;\n\t\t}\n\n\t\tset sourceId(sourceId) {\n\t\t\tthis.parameter(SourceIdsKey, sourceId ? [sourceId] : sourceId);\n\t\t}\n\n\t\t/**\n\t\t * An array of source IDs, set on the `sourceIds` parameter\n\t\t * @type {string[]}\n\t\t */\n\t\tget sourceIds() {\n\t\t\treturn this.parameter(SourceIdsKey);\n\t\t}\n\n\t\tset sourceIds(sourceIds) {\n\t\t\tthis.parameter(SourceIdsKey, sourceIds);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to get a list of all active node IDs available to the requesting user.\n\t\t *\n\t\t * **Note** this method only works against the `/sec` version of the API endpoint.\n\t\t *\n\t\t * @return {string} the URL to access the node IDs the requesting user has access to\n\t\t */\n\t\tlistAllNodeIdsUrl() {\n\t\t\treturn this.baseUrl() + \"/nodes\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for finding the available source IDs.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria, which can define `nodeId`, `startDate`, `endDate`,\n\t\t *                                                `localStartDate`, `localEndDdate`, `metadataFilter`, `propertyNames`,\n\t\t *                                                `instantaneousPropertyNames`, `accumulatingPropertyNames`, and\n\t\t *                                                `statusPropertyNames`, properties to limit the results to\n\t\t * @returns {string} the URL\n\t\t */\n\t\tfindSourcesUrl(datumFilter) {\n\t\t\tconst filter = datumFilter ? new DatumFilter(datumFilter) : this.datumFilter();\n\t\t\tlet result = this.baseUrl() + \"/nodes/sources\";\n\t\t\tconst params = filter.toUriEncoding();\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t};\n\nexport default NodeUrlHelperMixin;\n","import Pagination from \"../domain/pagination.js\";\nimport SortDescriptor from \"../domain/sortDescriptor.js\";\nimport UrlHelper from \"./urlHelper.js\";\nimport NodeUrlHelperMixin from \"./nodeUrlHelperMixin.js\";\nimport QueryUrlHelperMixin from \"./queryUrlHelperMixin.js\";\n\n/**\n * Create a NodeDatumUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~NodeDatumMetadataUrlHelperMixin} the mixin class\n */\nconst NodeDatumMetadataUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarNode datum metadata support to {@link module:net~UrlHelper}.\n\t *\n\t * <p>Datum metadata is metadata associated with a specific node and source, i.e.\n\t * a <code>nodeId</code> and a <code>sourceId</code>.\n\t *\n\t * @mixin\n\t * @alias module:net~NodeDatumMetadataUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Get a base URL for datum metadata operations using a specific node ID.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @returns {string} the base URL\n\t\t * @private\n\t\t */\n\t\tbaseNodeDatumMetadataUrl(nodeId) {\n\t\t\treturn this.baseUrl() + \"/datum/meta/\" + (nodeId || this.nodeId);\n\t\t}\n\n\t\tnodeDatumMetadataUrlWithSource(nodeId, sourceId) {\n\t\t\tlet result = this.baseNodeDatumMetadataUrl(nodeId);\n\t\t\tlet source = sourceId || this.sourceId;\n\t\t\tif (sourceId !== null && source) {\n\t\t\t\tresult += \"?sourceId=\" + encodeURIComponent(source);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing datum metadata.\n\t\t *\n\t\t * If no <code>sourceId</code> is provided, then the API will return all available datum metadata for all sources.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use;\n\t\t *                            if not provided the <code>sourceId</code> property of this class will be used;\n\t\t *                            if <code>null</code> then ignore any <code>sourceId</code> property of this class\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewNodeDatumMetadataUrl(nodeId, sourceId) {\n\t\t\treturn this.nodeDatumMetadataUrlWithSource(nodeId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for adding (merging) datum metadata via a <code>POST</code> request.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use; if not provided the <code>sourceId</code> property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\taddNodeDatumMetadataUrl(nodeId, sourceId) {\n\t\t\treturn this.nodeDatumMetadataUrlWithSource(nodeId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for setting datum metadata via a <code>PUT</code> request.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use; if not provided the <code>sourceId</code> property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\treplaceNodeDatumMetadataUrl(nodeId, sourceId) {\n\t\t\treturn this.nodeDatumMetadataUrlWithSource(nodeId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for deleting datum metadata via a <code>DELETE</code> request.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use; if not provided the <code>sourceId</code> property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tdeleteNodeDatumMetadataUrl(nodeId, sourceId) {\n\t\t\treturn this.nodeDatumMetadataUrlWithSource(nodeId, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for searching for datum metadata.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @param {string} [sourceId] a specific source ID to use;\n\t\t *                            if not provided the <code>sourceId</code> property of this class will be used;\n\t\t *                            if <code>null</code> then ignore any <code>sourceId</code> property of this class\n\t\t * @param {SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tfindNodeDatumMetadataUrl(nodeId, sourceId, sorts, pagination) {\n\t\t\tlet result = this.baseNodeDatumMetadataUrl(nodeId);\n\t\t\tlet params = \"\";\n\t\t\tlet source = sourceId || this.sourceId;\n\t\t\tif (sourceId !== null && source) {\n\t\t\t\tparams += \"sourceId=\" + encodeURIComponent(source);\n\t\t\t}\n\t\t\tif (Array.isArray(sorts)) {\n\t\t\t\tsorts.forEach((sort, i) => {\n\t\t\t\t\tif (sort instanceof SortDescriptor) {\n\t\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\t\tparams += \"&\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams += sort.toUriEncoding(i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (pagination instanceof Pagination) {\n\t\t\t\tif (params.length > 0) {\n\t\t\t\t\tparams += \"&\";\n\t\t\t\t}\n\t\t\t\tparams += pagination.toUriEncoding();\n\t\t\t}\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tuserMetadataUrl(userId) {\n\t\t\tlet result = this.baseUrl() + \"/users/meta\";\n\t\t\tlet userParam = userId || this.userId;\n\t\t\tif (Array.isArray(userParam)) {\n\t\t\t\tif (userParam.length > 0) {\n\t\t\t\t\tuserParam = userParam[0];\n\t\t\t\t} else {\n\t\t\t\t\tuserParam = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (userParam && userId !== null) {\n\t\t\t\tresult += \"/\" + userParam;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing a specific user's metadata via a `GET` request.\n\t\t *\n\t\t * Note this URL is similar to {@link module:net~UserMetadataUrlHelperMixin#viewUserMetadataUrl}\n\t\t * but is for the read-only SolarQuery API, rather than the read-write SolarUser API.\n\t\t *\n\t\t * @param {number|null} [userId] a specific user ID;\n\t\t *                               if not provided the `userId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewUserMetadataUrl(userId) {\n\t\t\treturn this.userMetadataUrl(userId);\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~NodeDatumMetadataUrlHelperMixin},\n * {@link module:net~QueryUrlHelperMixin}, and {@link module:net~NodeUrlHelperMixin} mixins.\n *\n * @mixes module:net~NodeDatumMetadataUrlHelperMixin\n * @mixes module:net~QueryUrlHelperMixin\n * @mixes module:net~NodeUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~NodeDatumMetadataUrlHelper\n */\nclass NodeDatumMetadataUrlHelper extends NodeDatumMetadataUrlHelperMixin(\n\tQueryUrlHelperMixin(NodeUrlHelperMixin(UrlHelper)),\n) {}\n\nexport default NodeDatumMetadataUrlHelperMixin;\nexport { NodeDatumMetadataUrlHelper };\n","import DatumFilter from \"../domain/datumFilter.js\";\nimport UrlHelper from \"./urlHelper.js\";\nimport NodeUrlHelperMixin from \"./nodeUrlHelperMixin.js\";\nimport QueryUrlHelperMixin from \"./queryUrlHelperMixin.js\";\n\n/**\n * Create a NodeDatumUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~NodeDatumUrlHelperMixin} the mixin class\n */\nconst NodeDatumUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarNode datum query support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~NodeDatumUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL for the \"reportable interval\" for a node, optionally limited to a specific set of source IDs.\n\t\t *\n\t\t * If no source IDs are provided, then the reportable interval query will return an interval for\n\t\t * all available sources.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the `nodeId` property of this class will be used\n\t\t * @param {string[]} [sourceIds] an array of source IDs to limit query to; if not provided the `sourceIds` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\treportableIntervalUrl(nodeId, sourceIds) {\n\t\t\tlet url = this.baseUrl() + \"/range/interval?nodeId=\" + (nodeId || this.nodeId);\n\t\t\tlet sources = sourceIds || this.sourceIds;\n\t\t\tif (Array.isArray(sources) && sources.length > 0) {\n\t\t\t\turl += \"&sourceIds=\" + sources.map((e) => encodeURIComponent(e)).join(\",\");\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for finding the available source IDs for a node or metadata filter.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria, which can define `nodeId`, `startDate`, `endDate`,\n\t\t *                                                and `metadataFilter` properties to limit the results to; if `nodeId` not\n\t\t *                                                provided the `nodeIds` property of this class will be used\n\t\t * @param {boolean} withNodeIds if `true` then force the response to include node IDs along with source IDs, instead of\n\t\t *                              just source IDs\n\t\t * @returns {string} the URL\n\t\t */\n\t\tavailableSourcesUrl(datumFilter, withNodeIds) {\n\t\t\tconst filter = datumFilter ? new DatumFilter(datumFilter) : this.datumFilter();\n\t\t\tif (withNodeIds !== undefined) {\n\t\t\t\tfilter.prop(\"withNodeIds\", !!withNodeIds);\n\t\t\t}\n\t\t\tlet result = this.baseUrl() + \"/range/sources\";\n\t\t\tconst params = filter.toUriEncoding();\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for datum, in either raw or aggregate form.\n\t\t *\n\t\t * If the `datumFilter` has an `aggregate` value set, then aggregate results will be\n\t\t * returned by SolarNet.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tlistDatumUrl(datumFilter, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/datum/list\";\n\t\t\tconst filter = datumFilter || this.datumFilter();\n\t\t\tconst params = filter.toUriEncodingWithSorting(sorts, pagination);\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for datum _reading_ values.\n\t\t *\n\t\t * The `datumFilter` must provide the required date(s) to use for the\n\t\t * reading type. If the reading type only requires one date, then the\n\t\t * {@link module:domain~DatumFilter#startDate} or\n\t\t * {@link module:domain~DatumFilter#endDate} value should be provided.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~DatumReadingType} readingType the type of reading to find\n\t\t * @param {string} [tolerance] optional query tolerance to use\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t * @see https://github.com/SolarNetwork/solarnetwork/wiki/SolarQuery-API#datum-reading\n\t\t */\n\t\tdatumReadingUrl(datumFilter, readingType, tolerance, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/datum/reading\";\n\t\t\tconst filter = new DatumFilter(datumFilter) || this.datumFilter();\n\t\t\tfilter.prop(\"readingType\", readingType.name);\n\t\t\tif (tolerance) {\n\t\t\t\tfilter.prop(\"tolerance\", tolerance);\n\t\t\t}\n\t\t\tconst params = filter.toUriEncodingWithSorting(sorts, pagination);\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for stream datum, in either raw or aggregate form.\n\t\t *\n\t\t * If the `datumFilter` has an `aggregate` value set, then aggregate results will be\n\t\t * returned by SolarNet.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t * @see https://github.com/SolarNetwork/solarnetwork/wiki/SolarQuery-Stream-API#datum-stream-datum-list\n\t\t */\n\t\tstreamDatumUrl(datumFilter, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/datum/stream/datum\";\n\t\t\tconst filter = datumFilter || this.datumFilter();\n\t\t\tconst params = filter.toUriEncodingWithSorting(sorts, pagination);\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for stream _reading_ values.\n\t\t *\n\t\t * The `datumFilter` must provide the required date(s) to use for the\n\t\t * reading type. If the reading type only requires one date, then the\n\t\t * {@link module:domain~DatumFilter#startDate} or\n\t\t * {@link module:domain~DatumFilter#endDate} value should be provided.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~DatumReadingType} readingType the type of reading to find\n\t\t * @param {string} [tolerance] optional query tolerance to use\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t * @see https://github.com/SolarNetwork/solarnetwork/wiki/SolarQuery-Stream-API#datum-stream-reading-list\n\t\t */\n\t\tstreamReadingUrl(datumFilter, readingType, tolerance, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/datum/stream/reading\";\n\t\t\tconst filter = new DatumFilter(datumFilter) || this.datumFilter();\n\t\t\tfilter.prop(\"readingType\", readingType.name);\n\t\t\tif (tolerance) {\n\t\t\t\tfilter.prop(\"tolerance\", tolerance);\n\t\t\t}\n\t\t\tconst params = filter.toUriEncodingWithSorting(sorts, pagination);\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Get a new {@link module:domain~DatumFilter} configured with properties of this instance.\n\t\t *\n\t\t * This will configure the following properties:\n\t\t *\n\t\t *  * `nodeIds`\n\t\t *  * `sourceIds`\n\t\t *\n\t\t * @returns {module:domain~DatumFilter} the filter\n\t\t */\n\t\tdatumFilter() {\n\t\t\tconst filter = new DatumFilter();\n\t\t\tlet v;\n\n\t\t\tv = this.nodeIds;\n\t\t\tif (v) {\n\t\t\t\tfilter.nodeIds = v;\n\t\t\t}\n\n\t\t\tv = this.sourceIds;\n\t\t\tif (v) {\n\t\t\t\tfilter.sourceIds = v;\n\t\t\t}\n\n\t\t\treturn filter;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for querying for the most recent datum.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} datumFilter the search criteria\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tmostRecentDatumUrl(datumFilter, sorts, pagination) {\n\t\t\tlet result = this.baseUrl() + \"/datum/mostRecent\";\n\t\t\tconst filter = datumFilter || this.datumFilter();\n\t\t\tconst params = filter.toUriEncodingWithSorting(sorts, pagination);\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~NodeDatumUrlHelperMixin},\n * {@link module:net~QueryUrlHelperMixin}, and {@link module:net~NodeUrlHelperMixin} mixins.\n *\n * @mixes module:net~NodeDatumUrlHelperMixin\n * @mixes module:net~QueryUrlHelperMixin\n * @mixes module:net~NodeUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~NodeDatumUrlHelper\n */\nclass NodeDatumUrlHelper extends NodeDatumUrlHelperMixin(\n\tQueryUrlHelperMixin(NodeUrlHelperMixin(UrlHelper)),\n) {}\n\nexport default NodeDatumUrlHelperMixin;\nexport { NodeDatumUrlHelper };\n","/**\n * The SolarUser default path.\n * @type {string}\n * @alias module:net~SolarUserDefaultPath\n */\nexport const SolarUserDefaultPath = \"/solaruser\";\n\n/**\n * The {@link module:net~UrlHelper} parameters key for the SolarUser path.\n * @type {string}\n * @alias module:net~SolarUserPathKey\n */\nexport const SolarUserPathKey = \"solarUserPath\";\n\n/**\n * The SolarUser REST API path.\n * @type {string}\n * @alias module:net~SolarUserApiPathV1\n */\nexport const SolarUserApiPathV1 = \"/api/v1/sec\";\n\nconst UserIdsKey = \"userIds\";\n\n/**\n * Create a UserUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~UserUrlHelperMixin} the mixin class\n */\nconst UserUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarUser specific support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~UserUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Get the default user ID.\n\t\t *\n\t\t * This gets the first available user ID from the `userIds` property.\n\t\t *\n\t\t * @returns {number} the default user ID, or `null`\n\t\t */\n\t\tget userId() {\n\t\t\tconst userIds = this.parameter(UserIdsKey);\n\t\t\treturn Array.isArray(userIds) && userIds.length > 0 ? userIds[0] : null;\n\t\t}\n\n\t\t/**\n\t\t * Set the user ID.\n\t\t *\n\t\t * This will set the `userIds` property to a new array of just the given value.\n\t\t *\n\t\t * @param {number} userId the user ID to set\n\t\t */\n\t\tset userId(userId) {\n\t\t\tthis.parameter(UserIdsKey, [userId]);\n\t\t}\n\n\t\tget userIds() {\n\t\t\treturn this.parameter(UserIdsKey);\n\t\t}\n\n\t\tset userIds(userIds) {\n\t\t\tthis.parameter(UserIdsKey, userIds);\n\t\t}\n\n\t\t/**\n\t\t * Get the base URL to the SolarUser v1 REST API.\n\t\t *\n\t\t * The returned URL uses the configured environment to resolve\n\t\t * the `hostUrl` and a `solarUserPath` context path.\n\t\t * If the context path is not available, it will default to\n\t\t * `/solaruser`.\n\t\t *\n\t\t * @returns {string} the base URL to SolarUser\n\t\t */\n\t\tbaseUrl() {\n\t\t\tconst path = this.env(SolarUserPathKey) || SolarUserDefaultPath;\n\t\t\treturn super.baseUrl() + path + SolarUserApiPathV1;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to get information about the requesting authenticated user.\n\t\t *\n\t\t * @return {string} the URL to view information about the authenticated user\n\t\t */\n\t\twhoamiUrl() {\n\t\t\treturn this.baseUrl() + \"/whoami\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to get a list of all active nodes for the user account.\n\t\t *\n\t\t * @return {string} the URL to access the user's active nodes\n\t\t */\n\t\tviewNodesUrl() {\n\t\t\treturn this.baseUrl() + \"/nodes\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to get a list of all pending nodes for the user account.\n\t\t *\n\t\t * @return {string} the URL to access the user's pending nodes\n\t\t */\n\t\tviewPendingNodesUrl() {\n\t\t\treturn this.baseUrl() + \"/nodes/pending\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to get a list of all archived nodes for the user account.\n\t\t *\n\t\t * @return {string} the URL to access the user's archived nodes\n\t\t */\n\t\tviewArchivedNodesUrl() {\n\t\t\treturn this.baseUrl() + \"/nodes/archived\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to update the archived status of a set of nodes via a `POST` request.\n\t\t *\n\t\t * @param {number|number[]|null} nodeId a specific node ID, or array of node IDs, to update; if not provided the\n\t\t *                                      `nodeIds` property of this class will be used\n\t\t * @param {boolean} archived `true` to mark the nodes as archived; `false` to un-mark\n\t\t *                           and return to normal status\n\t\t * @return {string} the URL to update the nodes archived status\n\t\t */\n\t\tupdateNodeArchivedStatusUrl(nodeId, archived) {\n\t\t\tconst nodeIds = Array.isArray(nodeId) ? nodeId : nodeId ? [nodeId] : this.nodeIds;\n\t\t\tlet result =\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/nodes/archived?nodeIds=\" +\n\t\t\t\tnodeIds.join(\",\") +\n\t\t\t\t\"&archived=\" +\n\t\t\t\t(archived ? \"true\" : \"false\");\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to get a Node Image Maker (NIM) session key.\n\t\t *\n\t\t * @return {string} the URL to obtain a NIM session key\n\t\t */\n\t\tnimAuthorizeUrl() {\n\t\t\treturn this.baseUrl() + \"/user/nim/authorize\";\n\t\t}\n\t};\n\nexport default UserUrlHelperMixin;\n","import UrlHelper from \"./urlHelper.js\";\nimport NodeUrlHelperMixin from \"./nodeUrlHelperMixin.js\";\nimport UserUrlHelperMixin from \"./userUrlHelperMixin.js\";\n\n/**\n * Create a NodeInstructionUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~NodeInstructionUrlHelperMixin} the mixin class\n */\nconst NodeInstructionUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarNode instruction support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~NodeInstructionUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL to get all details for a specific instruction.\n\t\t *\n\t\t * @param {number} instructionId the instruction ID to get\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewInstructionUrl(instructionId) {\n\t\t\treturn this.baseUrl() + \"/instr/view?id=\" + encodeURIComponent(instructionId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing active instructions.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewActiveInstructionsUrl(nodeId) {\n\t\t\treturn this.baseUrl() + \"/instr/viewActive?nodeId=\" + (nodeId || this.nodeId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing pending instructions.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the <code>nodeId</code> property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewPendingInstructionsUrl(nodeId) {\n\t\t\treturn this.baseUrl() + \"/instr/viewPending?nodeId=\" + (nodeId || this.nodeId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for changing the state of an instruction.\n\t\t *\n\t\t * @param {number} instructionId the instruction ID to update\n\t\t * @param {InstructionState} state the instruction state to set\n\t\t * @returns {string} the URL\n\t\t * @see the {@link InstructionStates} enum for possible state values\n\t\t */\n\t\tupdateInstructionStateUrl(instructionId, state) {\n\t\t\treturn (\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/instr/updateState?id=\" +\n\t\t\t\tencodeURIComponent(instructionId) +\n\t\t\t\t\"&state=\" +\n\t\t\t\tencodeURIComponent(state.name)\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Generate URL encoded query string for posting instruction parameters.\n\t\t *\n\t\t * @param {Object[]} [parameters] an array of parameter objects in the form `{name:n1, value:v1}`\n\t\t * @returns {string} the URL encoded query string, or an empty string if `parameters` is empty\n\t\t */\n\t\turlEncodeInstructionParameters(parameters) {\n\t\t\tvar url = \"\",\n\t\t\t\ti,\n\t\t\t\tlen;\n\t\t\tif (Array.isArray(parameters)) {\n\t\t\t\tfor (i = 0, len = parameters.length; i < len; i += 1) {\n\t\t\t\t\tif (url.length > 0) {\n\t\t\t\t\t\turl += \"&\";\n\t\t\t\t\t}\n\t\t\t\t\turl +=\n\t\t\t\t\t\tencodeURIComponent(\"parameters[\" + i + \"].name\") +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\tencodeURIComponent(parameters[i].name) +\n\t\t\t\t\t\t\"&\" +\n\t\t\t\t\t\tencodeURIComponent(\"parameters[\" + i + \"].value\") +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\tencodeURIComponent(parameters[i].value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for posting an instruction request.\n\t\t *\n\t\t * @param {string} topic the instruction topic\n\t\t * @param {Object[]} [parameters] an array of parameter objects in the form `{name:n1, value:v1}`\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the `nodeId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tqueueInstructionUrl(topic, parameters, nodeId) {\n\t\t\tvar url =\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/instr/add/\" +\n\t\t\t\tencodeURIComponent(topic) +\n\t\t\t\t\"?nodeId=\" +\n\t\t\t\t(nodeId || this.nodeId);\n\t\t\tif (Array.isArray(parameters) && parameters.length > 0) {\n\t\t\t\turl += \"&\" + this.urlEncodeInstructionParameters(parameters);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for posting instruction requests for multiple nodes.\n\t\t *\n\t\t * @param {string} topic the instruction topic\n\t\t * @param {Object[]} [parameters] an array of parameter objects in the form `{name:n1, value:v1}`\n\t\t * @param {number[]} [nodeIds] a list of node IDs to use; if not provided the `nodeIds` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tqueueInstructionsUrl(topic, parameters, nodeIds) {\n\t\t\tvar url =\n\t\t\t\tthis.baseUrl() +\n\t\t\t\t\"/instr/add/\" +\n\t\t\t\tencodeURIComponent(topic) +\n\t\t\t\t\"?nodeIds=\" +\n\t\t\t\t(Array.isArray(nodeIds) && nodeIds.length > 0\n\t\t\t\t\t? nodeIds.join(\",\")\n\t\t\t\t\t: Array.isArray(this.nodeIds)\n\t\t\t\t\t? this.nodeIds.join(\",\")\n\t\t\t\t\t: \"\");\n\t\t\tif (Array.isArray(parameters) && parameters.length > 0) {\n\t\t\t\turl += \"&\" + this.urlEncodeInstructionParameters(parameters);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\n\t\t/**\n\t\t * Create an instruction parameter suitable to passing to {@link NodeInstructionUrlHelperMixin#queueInstructionUrl}.\n\t\t *\n\t\t * @param {string} name the parameter name\n\t\t * @param {*} value the parameter value\n\t\t * @returns {object} with `name` and `value` properties\n\t\t */\n\t\tstatic instructionParameter(name, value) {\n\t\t\treturn { name: name, value: value };\n\t\t}\n\t};\n\n/**\n * A concrete {@link UrlHelper} with the {@link module:net~NodeInstructionUrlHelperMixin},\n * {@link module:net~UserUrlHelperMixin}, and {@link module:net~NodeUrlHelperMixin} mixins.\n *\n * @mixes module:net~NodeInstructionUrlHelperMixin\n * @mixes module:net~UserUrlHelperMixin\n * @mixes module:net~NodeUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~NodeInstructionUrlHelper\n */\nclass NodeInstructionUrlHelper extends NodeInstructionUrlHelperMixin(\n\tUserUrlHelperMixin(NodeUrlHelperMixin(UrlHelper)),\n) {}\n\n/**\n * The static {@link NodeInstructionUrlHelperMixin#instructionParameter} method so it can be imported directly.\n *\n * @alias module:net~instructionParameter\n */\nconst instructionParameter = NodeInstructionUrlHelper.instructionParameter;\n\nexport default NodeInstructionUrlHelperMixin;\nexport { instructionParameter, NodeInstructionUrlHelper };\n","import Pagination from \"../domain/pagination.js\";\nimport SortDescriptor from \"../domain/sortDescriptor.js\";\nimport UrlHelper from \"./urlHelper.js\";\nimport NodeUrlHelperMixin from \"./nodeUrlHelperMixin.js\";\nimport UserUrlHelperMixin from \"./userUrlHelperMixin.js\";\n\n/**\n * Create a NodeMetadataUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~NodeMetadataUrlHelperMixin} the mixin class\n */\nconst NodeMetadataUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds SolarNode metadata support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~NodeMetadataUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL for viewing the configured node's metadata.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the `nodeId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewNodeMetadataUrl(nodeId) {\n\t\t\treturn this.baseUrl() + \"/nodes/meta/\" + (nodeId || this.nodeId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for adding metadata to a node via a `POST` request.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the `nodeId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\taddNodeMetadataUrl(nodeId) {\n\t\t\treturn this.viewNodeMetadataUrl(nodeId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for setting the metadata of a node via a `PUT` request.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the `nodeId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\treplaceNodeMetadataUrl(nodeId) {\n\t\t\treturn this.viewNodeMetadataUrl(nodeId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for deleting the metadata of a node via a `DELETE` request.\n\t\t *\n\t\t * @param {number} [nodeId] a specific node ID to use; if not provided the `nodeId` property of this class will be used\n\t\t * @returns {string} the URL\n\t\t */\n\t\tdeleteNodeMetadataUrl(nodeId) {\n\t\t\treturn this.viewNodeMetadataUrl(nodeId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for searching for node metadata.\n\t\t *\n\t\t * @param {number|number[]} [nodeId] a specific node ID, or array of node IDs, to use; if not provided the\n\t\t *                                   `nodeIds` property of this class will be used, unless `null`\n\t\t *                                   is passed in which case no node IDs will be added to the URL so that all available\n\t\t *                                   node metadata objects will be returned\n\t\t * @param {module:domain~SortDescriptor[]} [sorts] optional sort settings to use\n\t\t * @param {module:domain~Pagination} [pagination] optional pagination settings to use\n\t\t * @returns {string} the URL\n\t\t */\n\t\tfindNodeMetadataUrl(nodeId, sorts, pagination) {\n\t\t\tconst nodeIds = Array.isArray(nodeId)\n\t\t\t\t? nodeId\n\t\t\t\t: nodeId\n\t\t\t\t? [nodeId]\n\t\t\t\t: nodeId !== null\n\t\t\t\t? this.nodeIds\n\t\t\t\t: undefined;\n\t\t\tlet result = this.baseUrl() + \"/nodes/meta\";\n\t\t\tlet params = \"\";\n\t\t\tif (Array.isArray(nodeIds)) {\n\t\t\t\tparams += \"nodeIds=\" + nodeIds.join(\",\");\n\t\t\t}\n\t\t\tif (Array.isArray(sorts)) {\n\t\t\t\tsorts.forEach((sort, i) => {\n\t\t\t\t\tif (sort instanceof SortDescriptor) {\n\t\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\t\tparams += \"&\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams += sort.toUriEncoding(i);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (pagination instanceof Pagination) {\n\t\t\t\tif (params.length > 0) {\n\t\t\t\t\tparams += \"&\";\n\t\t\t\t}\n\t\t\t\tparams += pagination.toUriEncoding();\n\t\t\t}\n\t\t\tif (params.length > 0) {\n\t\t\t\tresult += \"?\" + params;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~NodeMetadataUrlHelperMixin},\n * {@link module:net~UserUrlHelperMixin}, and {@link module:net~NodeUrlHelperMixin} mixins.\n *\n * @mixes module:net~NodeMetadataUrlHelperMixin\n * @mixes module:net~UserUrlHelperMixin\n * @mixes module:net~NodeUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~NodeMetadataUrlHelper\n */\nclass NodeMetadataUrlHelper extends NodeMetadataUrlHelperMixin(\n\tUserUrlHelperMixin(NodeUrlHelperMixin(UrlHelper)),\n) {}\n\nexport default NodeMetadataUrlHelperMixin;\nexport { NodeMetadataUrlHelper };\n","import UrlHelper from \"./urlHelper.js\";\nimport UserUrlHelperMixin from \"./userUrlHelperMixin.js\";\n\n/**\n * Create a UserAuthTokenUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~UserAuthTokenUrlHelperMixin} the mixin class\n */\nconst UserAuthTokenUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds security token support to a SolarUser {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~UserAuthTokenUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL for listing all available auth tokens.\n\t\t *\n\t\t * @returns {string} the URL\n\t\t */\n\t\tlistAllAuthTokensUrl() {\n\t\t\treturn this.baseUrl() + \"/user/auth-tokens\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for creating a new auth token, via a `POST` request.\n\t\t *\n\t\t * The request body accepts a {@link module:domain~SecurityPolicy} JSON document.\n\t\t *\n\t\t * @param {AuthTokenType} type the auth token type to generate\n\t\t * @returns {string} the URL\n\t\t */\n\t\tgenerateAuthTokenUrl(type) {\n\t\t\treturn this.baseUrl() + \"/user/auth-tokens/generate/\" + type.name;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for accessing an auth token.\n\t\t *\n\t\t * @param {string} tokenId the token ID\n\t\t * @returns {string} the URL\n\t\t * @private\n\t\t */\n\t\tauthTokenUrl(tokenId) {\n\t\t\treturn this.baseUrl() + \"/user/auth-tokens/\" + encodeURIComponent(tokenId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for deleting an auth token, via a `DELETE` request.\n\t\t *\n\t\t * @param {string} tokenId the token ID to delete\n\t\t * @returns {string} the URL\n\t\t */\n\t\tdeleteAuthTokenUrl(tokenId) {\n\t\t\treturn this.authTokenUrl(tokenId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for updating (merging) a security policy on an auth token,\n\t\t * via a `PATCH` request.\n\t\t *\n\t\t * The request body accepts a {@link module:net~SecurityPolicy} JSON document.\n\t\t *\n\t\t * @param {string} tokenId the ID of the token to update\n\t\t * @returns {string} the URL\n\t\t */\n\t\tupdateAuthTokenSecurityPolicyUrl(tokenId) {\n\t\t\treturn this.authTokenUrl(tokenId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for replacing a security policy on an auth token,\n\t\t * via a `PUT` request.\n\t\t *\n\t\t * The request body accepts a {@link module:domain~SecurityPolicy} JSON document.\n\t\t *\n\t\t * @param {string} tokenId the ID of the token to update\n\t\t * @returns {string} the URL\n\t\t */\n\t\treplaceAuthTokenSecurityPolicyUrl(tokenId) {\n\t\t\treturn this.authTokenUrl(tokenId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for updating the status of an auth token,\n\t\t * via a `POST` request.\n\t\t *\n\t\t * @param {string} tokenId the ID of the token to update\n\t\t * @param {AuthTokenStatus} status the status to change to\n\t\t * @returns {string} the URL\n\t\t */\n\t\tupdateAuthTokenStatusUrl(tokenId, status) {\n\t\t\treturn this.authTokenUrl(tokenId) + \"?status=\" + encodeURIComponent(status.name);\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~UserAuthTokenUrlHelperMixin} and\n * {@link module:net~UserUrlHelperMixin} mixins.\n *\n * @mixes module:net~UserAuthTokenUrlHelperMixin\n * @mixes module:net~UserUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~UserAuthTokenUrlHelper\n */\nclass UserAuthTokenUrlHelper extends UserAuthTokenUrlHelperMixin(UserUrlHelperMixin(UrlHelper)) {}\n\nexport default UserAuthTokenUrlHelperMixin;\nexport { UserAuthTokenUrlHelper };\n","import UrlHelper from \"./urlHelper.js\";\nimport UserUrlHelperMixin from \"./userUrlHelperMixin.js\";\nimport { timestampFormat } from \"../format/date.js\";\nimport PropMap from \"../util/propMap.js\";\n\n/**\n * Create a UserDatumAuxiliaryUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~UserDatumAuxiliaryUrlHelperMixin} the mixin class\n */\nconst UserDatumAuxiliaryUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds user datum auxiliary support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~UserDatumAuxiliaryUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\tuserDatumAuxiliaryBaseUrl() {\n\t\t\treturn this.baseUrl() + \"/datum/auxiliary\";\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing the configured user's metadata via a `GET` request.\n\t\t *\n\t\t * @param {module:domain~DatumFilter} filter the search criteria\n\t\t * @returns {string} the URL\n\t\t */\n\t\tlistUserDatumAuxiliaryUrl(filter) {\n\t\t\tlet result = this.userDatumAuxiliaryBaseUrl();\n\t\t\tif (filter) {\n\t\t\t\tconst params = filter.toUriEncoding();\n\t\t\t\tif (params.length > 0) {\n\t\t\t\t\tresult += \"?\" + params;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for accessing a specific `DatumAuxiliaryType` by its primary key.\n\t\t *\n\t\t * If `sourceId` contains any `/` characters, then {@link module:net~UserDatumAuxiliaryUrlHelperMixin#userDatumAuxiliaryIdQueryUrl}\n\t\t * will be invoked instead.\n\t\t *\n\t\t * @param {module:domain~DatumAuxiliaryType} type the datum auxiliary type\n\t\t * @param {number} nodeId the node ID\n\t\t * @param {Date} date a date\n\t\t * @param {string} sourceId the source ID\n\t\t * @returns {string} the URL\n\t\t */\n\t\tuserDatumAuxiliaryIdUrl(type, nodeId, date, sourceId) {\n\t\t\tif (sourceId && sourceId.indexOf(\"/\") >= 0) {\n\t\t\t\t// force use of query parameters if source ID has slash characters\n\t\t\t\treturn this.userDatumAuxiliaryIdQueryUrl(type, nodeId, date, sourceId);\n\t\t\t}\n\t\t\tlet result = this.userDatumAuxiliaryBaseUrl();\n\t\t\tresult +=\n\t\t\t\t\"/\" +\n\t\t\t\tencodeURIComponent(type.name ? type.name : type) +\n\t\t\t\t\"/\" +\n\t\t\t\tencodeURIComponent(nodeId) +\n\t\t\t\t\"/\" +\n\t\t\t\tencodeURIComponent(timestampFormat(date)) +\n\t\t\t\t\"/\" +\n\t\t\t\tencodeURIComponent(sourceId);\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for accessing a specific `DatumAuxiliaryType` by its primary key,\n\t\t * using query parameters for id components.\n\t\t *\n\t\t * @param {module:domain~DatumAuxiliaryType} type the datum auxiliary type\n\t\t * @param {number} nodeId the node ID\n\t\t * @param {Date} date a date\n\t\t * @param {string} sourceId the source ID\n\t\t * @returns {string} the URL\n\t\t */\n\t\tuserDatumAuxiliaryIdQueryUrl(type, nodeId, date, sourceId) {\n\t\t\tlet result = this.userDatumAuxiliaryBaseUrl();\n\t\t\tlet props = new PropMap({\n\t\t\t\ttype: type,\n\t\t\t\tnodeId: nodeId,\n\t\t\t\tdate: timestampFormat(date),\n\t\t\t\tsourceId: sourceId,\n\t\t\t});\n\t\t\tlet query = props.toUriEncoding();\n\t\t\tif (query.length > 0) {\n\t\t\t\tresult += \"?\" + query;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for storing a `DatumAuxiliaryType` via a `POST` request.\n\t\t *\n\t\t * The {@link module:net~UserDatumAuxiliaryUrlHelperMixin#userDatumAuxiliaryIdUrl} method is used\n\t\t * to generate the URL.\n\t\t *\n\t\t * @param {module:domain~DatumAuxiliaryType} type the datum auxiliary type\n\t\t * @param {number} nodeId the node ID\n\t\t * @param {Date} date a date\n\t\t * @param {string} sourceId the source ID\n\t\t * @returns {string} the URL\n\t\t */\n\t\tstoreUserDatumAuxiliaryUrl(type, nodeId, date, sourceId) {\n\t\t\treturn this.userDatumAuxiliaryIdUrl(type, nodeId, date, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing a `DatumAuxiliaryType` via a `GET` request.\n\t\t *\n\t\t * The {@link module:net~UserDatumAuxiliaryUrlHelperMixin#userDatumAuxiliaryIdUrl} method is used\n\t\t * to generate the URL.\n\t\t *\n\t\t * @param {module:domain~DatumAuxiliaryType} type the datum auxiliary type\n\t\t * @param {number} nodeId the node ID\n\t\t * @param {Date} date a date\n\t\t * @param {string} sourceId the source ID\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewUserDatumAuxiliaryUrl(type, nodeId, date, sourceId) {\n\t\t\treturn this.userDatumAuxiliaryIdUrl(type, nodeId, date, sourceId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for deleting a `DatumAuxiliaryType` via a `DELETE` request.\n\t\t *\n\t\t * The {@link module:net~UserDatumAuxiliaryUrlHelperMixin#userDatumAuxiliaryIdUrl} method is used\n\t\t * to generate the URL.\n\t\t *\n\t\t * @param {module:domain~DatumAuxiliaryType} type the datum auxiliary type\n\t\t * @param {number} nodeId the node ID\n\t\t * @param {Date} date a date\n\t\t * @param {string} sourceId the source ID\n\t\t * @returns {string} the URL\n\t\t */\n\t\tdeleteUserDatumAuxiliaryUrl(type, nodeId, date, sourceId) {\n\t\t\treturn this.userDatumAuxiliaryIdUrl(type, nodeId, date, sourceId);\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~UserDatumAuxiliaryUrlHelperMixin}\n * and {@link module:net~UserUrlHelperMixin} mixins.\n *\n * @mixes module:net~UserDatumAuxiliaryUrlHelperMixin\n * @mixes module:net~UserUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~UserDatumAuxiliaryUrlHelper\n */\nclass UserDatumAuxiliaryUrlHelper extends UserDatumAuxiliaryUrlHelperMixin(\n\tUserUrlHelperMixin(UrlHelper),\n) {}\n\nexport default UserDatumAuxiliaryUrlHelperMixin;\nexport { UserDatumAuxiliaryUrlHelper };\n","import UrlHelper from \"./urlHelper.js\";\nimport UserUrlHelperMixin from \"./userUrlHelperMixin.js\";\n\n/**\n * Create a UserMetadataUrlHelperMixin class.\n *\n * @param {module:net~UrlHelper} superclass the UrlHelper class to mix onto\n * @return {module:net~UserMetadataUrlHelperMixin} the mixin class\n */\nconst UserMetadataUrlHelperMixin = (superclass) =>\n\t/**\n\t * A mixin class that adds user metadata support to {@link module:net~UrlHelper}.\n\t *\n\t * @mixin\n\t * @alias module:net~UserMetadataUrlHelperMixin\n\t */\n\tclass extends superclass {\n\t\t/**\n\t\t * Generate a URL for viewing the configured user's metadata via a <code>GET</code> request.\n\t\t *\n\t\t * @param {module:domain~UserMetadataFilter} filter the search criteria\n\t\t * @returns {string} the URL\n\t\t */\n\t\tfindUserMetadataUrl(filter) {\n\t\t\tlet result = this.baseUrl() + \"/users/meta\";\n\t\t\tif (filter) {\n\t\t\t\tconst params = filter.toUriEncoding();\n\t\t\t\tif (params.length > 0) {\n\t\t\t\t\tresult += \"?\" + params;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tuserMetadataUrl(userId) {\n\t\t\tlet result = this.baseUrl() + \"/users/meta\";\n\t\t\tlet userParam = userId || this.userId;\n\t\t\tif (Array.isArray(userParam)) {\n\t\t\t\tif (userParam.length > 0) {\n\t\t\t\t\tuserParam = userParam[0];\n\t\t\t\t} else {\n\t\t\t\t\tuserParam = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (userParam && userId !== null) {\n\t\t\t\tresult += \"/\" + userParam;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for viewing a specific user's metadata via a <code>GET</code> request.\n\t\t *\n\t\t * @param {number|null} [userId] a specific user ID;\n\t\t *                               if not provided the <code>userId</code> property of this class will be used;\n\t\t *                               if <code>null</code> then view metadata of the requesting user\n\t\t * @returns {string} the URL\n\t\t */\n\t\tviewUserMetadataUrl(userId) {\n\t\t\treturn this.userMetadataUrl(userId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for adding user metadata via a <code>POST</code> request.\n\t\t *\n\t\t * @param {number|null} [userId] a specific user ID;\n\t\t *                               if not provided the <code>userId</code> property of this class will be used;\n\t\t *                               if <code>null</code> then add metadata to the requesting user\n\t\t * @returns {string} the URL\n\t\t */\n\t\taddUserMetadataUrl(userId) {\n\t\t\treturn this.userMetadataUrl(userId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for replacing user metadata via a <code>PUT</code> request.\n\t\t *\n\t\t * @param {number|null} [userId] a specific user ID;\n\t\t *                               if not provided the <code>userId</code> property of this class will be used;\n\t\t *                               if <code>null</code> then add metadata to the requesting user\n\t\t * @returns {string} the URL\n\t\t */\n\t\treplaceUserMetadataUrl(userId) {\n\t\t\treturn this.userMetadataUrl(userId);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL for deleting user metadata via a <code>DELETE</code> request.\n\t\t *\n\t\t * @param {number|null} [userId] a specific user ID;\n\t\t *                               if not provided the <code>userId</code> property of this class will be used;\n\t\t *                               if <code>null</code> then add metadata to the requesting user\n\t\t * @returns {string} the URL\n\t\t */\n\t\tdeleteUserMetadataUrl(userId) {\n\t\t\treturn this.userMetadataUrl(userId);\n\t\t}\n\t};\n\n/**\n * A concrete {@link module:net~UrlHelper} with the {@link module:net~UserMetadataUrlHelperMixin}\n * and {@link module:net~UserUrlHelperMixin} mixins.\n *\n * @mixes module:net~UserMetadataUrlHelperMixin\n * @mixes module:net~UserUrlHelperMixin\n * @extends module:net~UrlHelper\n * @alias module:net~UserMetadataUrlHelper\n */\nclass UserMetadataUrlHelper extends UserMetadataUrlHelperMixin(UserUrlHelperMixin(UrlHelper)) {}\n\nexport default UserMetadataUrlHelperMixin;\nexport { UserMetadataUrlHelper };\n","/* eslint no-console: 0 */\n\nlet logLevel = 2;\n\nfunction consoleLog(level, ...args) {\n\tif (level > logLevel) {\n\t\treturn;\n\t}\n\tif (!console) {\n\t\treturn;\n\t}\n\n\tlet logFn;\n\tswitch (level) {\n\t\tcase 1:\n\t\t\tlogFn = console.error;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tlogFn = console.warn;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tlogFn = console.info;\n\t\t\tbreak;\n\t}\n\tif (!logFn) {\n\t\tlogFn = console.log;\n\t}\n\tif (!logFn) {\n\t\treturn; // no console available\n\t}\n\tlogFn(...args); // TODO formatting like sn.format.fmt.apply(this, arguments)?\n}\n\nconst logLevels = Object.freeze({\n\tDEBUG: 4,\n\tINFO: 3,\n\tWARN: 2,\n\tERROR: 1,\n\tOFF: 0,\n});\n\n/**\n * An application logger.\n *\n * Logging levels range from 0-4 and is controlled at the application level.\n * Level `0` is off, `1` is error, `2` is warn, `3` is info,  and `4` is debug.\n * The default level starts as `2`.\n */\nclass Logger {\n\tstatic debug(...args) {\n\t\tconsoleLog(4, ...args);\n\t}\n\n\tstatic info(...args) {\n\t\tconsoleLog(3, ...args);\n\t}\n\n\tstatic warn(...args) {\n\t\tconsoleLog(2, ...args);\n\t}\n\n\tstatic error(...args) {\n\t\tconsoleLog(1, ...args);\n\t}\n}\n\nObject.defineProperties(Logger, {\n\t/**\n\t * The global logging level. Set to `0` to disable all logging.\n\t *\n\t * @memberof module:util~Logger\n\t * @type {number}\n\t */\n\tlevel: {\n\t\tget: function () {\n\t\t\treturn logLevel;\n\t\t},\n\t\tset: function (v) {\n\t\t\tlogLevel = typeof v === \"number\" ? v : 0;\n\t\t},\n\t},\n});\n\nexport default Logger;\nexport { logLevels };\n","import StreamAggregateDatum from \"../domain/streamAggregateDatum.js\";\nimport StreamDatum from \"../domain/streamDatum.js\";\nimport { AggregateDatum, Datum } from \"../domain/streamDatumMetadataMixin.js\";\n\n/**\n * Get a datum instance from a stream data array.\n *\n * @param {Array|String} data the datum stream data array (or JSON array value) to create a datum instance\n * @param {module:domain~DatumStreamMetadata|module:util~DatumStreamMetadataRegistry} meta a metadata instance or metadata registry to decode with\n * @returns {module:domain~AggregateDatum|module:domain~Datum} the datum, or `null` if one cannot be created\n * @alias module:util~datumForStreamData\n */\nexport function datumForStreamData(data, meta) {\n\tif (typeof data === \"string\") {\n\t\tdata = JSON.parse(data);\n\t}\n\tif (!Array.isArray(data) || data.length < 2) {\n\t\treturn null;\n\t}\n\treturn Array.isArray(data[1])\n\t\t? AggregateDatum.fromJsonObject(data, meta)\n\t\t: Datum.fromJsonObject(data, meta);\n}\n\n/**\n * Get a stream datum instance from a stream data array.\n *\n * @param {Array|String} data the datum stream data array (or JSON array value) to create a datum instance\n * @param {module:domain~DatumStreamMetadata|module:util~DatumStreamMetadataRegistry} meta a metadata instance or metadata registry to decode with\n * @returns {module:domain~StreamAggregateDatum|module:domain~StreamDatum} the datum, or `null` if one cannot be created\n * @alias module:util~streamDatumForData\n */\nexport function streamDatumForData(data, meta) {\n\tif (typeof data === \"string\") {\n\t\tdata = JSON.parse(data);\n\t}\n\tif (!Array.isArray(data) || data.length < 2) {\n\t\treturn null;\n\t}\n\treturn Array.isArray(data[1])\n\t\t? StreamAggregateDatum.fromJsonObject(data, meta)\n\t\t: StreamDatum.fromJsonObject(data, meta);\n}\n\nexport default Object.freeze({\n\tdatumForStreamData: datumForStreamData,\n\tstreamDatumForData: streamDatumForData,\n});\n"],"names":["timeNormalizeDataArray","data","aggregate","aggMillseconds","level","Array","isArray","length","i","d","currTime","date","getTime","expectedNextTime","nextTime","fill","fillTime","f","Object","create","getPrototypeOf","getOwnPropertyDescriptors","p","Date","push","prototype","splice","apply","freeze","Enum","name","_classCallCheck","_name","constructor","_createClass","key","get","value","equals","enumValues","enumsValue","enums","reduce","obj","e","valueOf","undefined","len","namesFor","set","result","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","ComparableEnum","_Enum","_inherits","_super","_createSuper","_this","call","_value","_assertThisInitialized","compareTo","other","minimumEnumSet","minEnum","cache","Set","agg","add","size","Aggregation","_ComparableEnum","AggregationValues","Number","MAX_SAFE_INTEGER","Aggregations","timestampFormat","utcFormat","dateTimeFormat","dateTimeUrlFormat","localDateTimeUrlFormat","format","dateFormat","timestampParse","utcParse","dateTimeParse","dateParser","str","isoParse","iso8601Date","includeTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","seasonForDate","m","rollingQueryDateRange","aggregateTimeCount","endDate","exclusiveEndDate","interval","ceil","offset","timeCountValue","propName","isNaN","end","start","timeUnit","timeCount","Hour","utcMinute","precision","Math","min","setUTCMinutes","utcHour","Month","Year","utcMonth","utcYear","floor","Day","utcDay","datumDate","localDate","localTime","created","dateTimeUrlParse","normalizeNestedStackDataByDate","layerData","fillTemplate","fillFn","j","k","jMax","dummy","prop","copyIndex","max","map","values","sourceId","hasOwnProperty","aggregateNestedDataLayers","resultKey","copyProperties","sumProperties","staticProperties","layerCount","dataLength","copyPropLength","sumPropLength","val","clone","array","groupedBySourceMetricDataArray","metricName","sourceIdMap","aggFn","metricExtractorFn","metricExtractor","rollupFn","sum","nest","has","sortKeys","ascending","rollup","r","metricKey","entries","layer","combined","forEach","v","AuthTokenStatus","AuthTokenStatusValues","AuthTokenStatuses","AuthTokenType","AuthTokenTypeValues","AuthTokenTypes","CombiningType","CombiningTypeValues","CombiningTypes","DatumAuxiliaryType","DatumAuxiliaryTypeValues","DatumAuxiliaryTypes","Pagination","_max","_offset","withOffset","toUriEncoding","SortDescriptor","descending","_key","_descending","index","propertyName","encodeURIComponent","PropMap","props","properties","_typeof","newValue","arguments","newProps","_i","_Object$keys","keys","assign","callbackFn","_loop","_Object$keys2","_i2","forceMultiKey","kv","_ret","toUriEncodingWithSorting","sorts","pagination","params","sort","paginationParams","CountryKey","ElevationKey","LatitudeKey","IdKey","LocalityKey","LongitudeKey","NameKey","PostalCodeKey","RegionKey","StateOrProvinceKey","StreetKey","TimeZoneIdKey","Location","_PropMap","loc","AccumulatingPropertyNamesKey","AggregationKey","CombiningTypeKey","DataPathKey","EndDateKey","InstantaneousPropertyNamesKey","LocalEndDateKey","LocalStartDateKey","LocationIdsKey","LocationKey","MetadataFilterKey","MostRecentKey","NodeIdMapsKey","NodeIdsKey","PartialAggregationKey","PropertyNamesKey","QueryKey","SourceIdMapsKey","SourceIdsKey","StartDateKey","StatusPropertyNamesKey","StreamIdsKey","TagsKey","UserIdsKey","WithoutTotalResultsCountKey","idMapQueryParameterValue","Map","concat","from","join","DatumFilter","nodeIds","nodeId","locationIds","locationId","sourceIds","streamIds","streamId","userIds","userId","path","t","names","propertyNames","instantaneousPropertyNames","accumulatingPropertyNames","statusPropertyNames","_get","_getPrototypeOf","datumFilterUriEncodingPropertyMapper","substring","KeyedEnum","DatumReadingType","_KeyedEnum","DatumReadingTypeValues","DatumReadingTypes","DatumSamplesType","DatumSamplesTypeValues","DatumSamplesTypes","DatumStreamType","_KeydEnum","DatumStreamTypeValues","KeydEnum","DatumStreamTypes","DatumStreamMetadata","zone","kind","objectId","iNames","aNames","sNames","_streamId","_zone","_kind","Node","_objectId","_sourceId","_iNames","_aNames","_sNames","instantaneousLength","accumulatingLength","statusLength","propertyNamesLength","propertyNamesForType","samplesType","Instantaneous","Accumulating","Status","toJsonEncoding","a","JSON","stringify","nodeMetadata","locationMetadata","fromJsonEncoding","json","fromJsonObject","parse","BitmaskEnum","bitNumber","_bitNumber","enumForBitNumber","c","bitmaskBitNumber","bitmaskValue","maskables","mask","_iterator2","_step2","bitmaskBitOffset","setForBitmaskEnum","clazz","setForBitmask","_iterator3","_step3","b","DeviceOperatingState","_BitmaskEnum","forCode","code","DeviceOperatingStateValues","DeviceOperatingStates","GeneralMetadata","info","propertyInfo","tags","stringMapToObject","pm","objectToStringMap","strMap","_step$value","_slicedToArray","InstructionState","InstructionStateValues","InstructionStates","LocationPrecision","LocationPrecisionValues","LocationPrecisions","setOrNull","mergedSets","set1","set2","s1","s2","SecurityPolicy","aggregations","minAggregation","locationPrecisions","minLocationPrecision","nodeMetadataPaths","userMetadataPaths","_nodeIds","_sourceIds","_aggregations","_minAggregation","_locationPrecisions","_minLocationPrecision","_nodeMetadataPaths","_userMetadataPaths","MIN_AGGREGATION_CACHE","MIN_LOCATION_PRECISION_CACHE","SecurityPolicyBuilder","withPolicy","policy","withAggregations","withMinAggregation","withLocationPrecisions","withMinLocationPrecision","withNodeIds","withSourceIds","withNodeMetadataPaths","withUserMetadataPaths","addPolicy","addAggregations","addLocationPrecisions","addNodeIds","addSourceIds","addNodeMetadataPaths","addUserMetadataPaths","buildAggregations","buildLocationPrecisions","build","SkyCondition","SkyConditionValues","SkyConditions","DatumStreamMetadataRegistry","metas","_metaList","_metaMap","addMetadata","meta","metadataStreamIds","metadataAt","indexOfMetadataStreamId","metadataStreamIdsList","metadataForStreamId","metadataForObjectSource","_iterator4","_step4","reg","_iterator5","_step5","pushProperties","populateProperties","type","withoutStatistics","valLen","iMax","StreamAggregateDatum","ts","iProps","aProps","sProps","toObject","date_end","instantaneousNames","accumulatingNames","statusNames","registry","toJsonObject","slice","StreamDatum","propertyValuesForType","Tags","StreamDatumMetadataMixin","superclass","_superclass","_class","_len","args","_meta","AggregateDatum","_StreamDatumMetadataM","_super2","Datum","_StreamDatumMetadataM2","_super3","UserMetadataFilter","userMetadataFilterUriEncodingPropertyMapper","displayScaleForValue","num","abs","displayUnitsForScale","baseUnit","scale","AuthTokenUrlHelperMixin","refreshTokenV2Url","baseUrl","MultiMap","mappings","mappingNames","putAll","addValue","put","keyLc","toLowerCase","mapping","firstValue","clear","remove","indexOf","isEmpty","containsKey","keySet","replace","createGetter","me","createSetter","createProperty","defineProperty","enumerable","configurable","Configuration","initialMap","enabled","toggle","newMap","normalizedProtocol","normalizedConfig","config","host","protocol","port","hostname","Environment","_Configuration","useTls","HttpMethod","GET","HEAD","POST","PUT","PATCH","DELETE","OPTIONS","TRACE","HttpContentType","APPLICATION_JSON","APPLICATION_JSON_UTF8","FORM_URLENCODED","FORM_URLENCODED_UTF8","HttpHeaders","_MultiMap","defineProperties","ACCEPT","AUTHORIZATION","CONTENT_MD5","CONTENT_TYPE","DATE","DIGEST","HOST","X_SN_DATE","urlQueryParse","search","multiValueKeys","pairs","pair","match","split","decodeURIComponent","urlQueryEncode","parameters","encoderFn","encoder","handleValue","SIGNING_KEY_VALIDITY","AuthorizationV2Builder","token","environment","tokenId","httpHeaders","forceHostPort","reset","contentDigest","signedHttpHeaders","method","saveSigningKey","tokenSecret","computeSigningKey","requestDate","signingKey","expire","setUTCHours","setUTCSeconds","setUTCMilliseconds","signingKeyExpiration","now","httpMethod","requestPath","url","ignoreHost","uri","uriParse","scheme","query","queryParams","resourceName","contentType","toUTCString","signedHeaders","signedHeaderNames","existingIndex","findIndex","caseInsensitiveEqualsFn","snDate","useSnDate","header","headerName","headerValue","headers","contentSHA256","digest","Hex","computeContentDigest","content","SHA256","Base64","canonicalQueryParameters","first","vals","valsLen","_encodeURIComponent","canonicalHeaders","sortedLowercaseHeaderNames","trim","canonicalSignedHeaderNames","canonicalContentSHA256","EMPTY_STRING_SHA256_HEX","canonicalHeaderNames","lowercaseSortedArray","buildCanonicalRequestData","computeCanonicalRequestData","secretKey","datestring","HmacSHA256","computeSignatureData","canonicalRequestData","buildWithKey","sortedHeaderNames","canonicalReq","signatureData","signature","buildWithSavedKey","valueLc","toString","items","sortedItems","_hexEscapeChar","charCodeAt","toUpperCase","SNWS2_AUTH_SCHEME","UrlHelper","env","_parameters","_this$environment","parameter","_this$_parameters","hostUrl","tls","hostWebSocketUrl","resolveTemplatePath","template","resolveTemplateUrl","variableName","variableValue","LocationUrlHelperMixin","findLocationsUrl","filter","SolarQueryDefaultPath","SolarQueryPathKey","SolarQueryApiPathV1","SolarQueryPublicPathKey","QueryUrlHelperMixin","isPubPath","publicQuery","LocationDatumMetadataUrlHelperMixin","baseLocationDatumMetadataUrl","locationDatumMetadataUrlWithSource","source","viewLocationDatumMetadataUrl","addLocationDatumMetadataUrl","replaceLocationDatumMetadataUrl","deleteLocationDatumMetadataUrl","findLocationDatumMetadataUrl","LocationDatumMetadataUrlHelper","_LocationDatumMetadat","LocationDatumUrlHelperMixin","reportableIntervalUrl","availableSourcesUrl","startDate","listDatumUrl","datumFilter","mostRecentDatumUrl","LocationDatumUrlHelper","_LocationDatumUrlHelp","NodeUrlHelperMixin","listAllNodeIdsUrl","findSourcesUrl","NodeDatumMetadataUrlHelperMixin","baseNodeDatumMetadataUrl","nodeDatumMetadataUrlWithSource","viewNodeDatumMetadataUrl","addNodeDatumMetadataUrl","replaceNodeDatumMetadataUrl","deleteNodeDatumMetadataUrl","findNodeDatumMetadataUrl","userMetadataUrl","userParam","viewUserMetadataUrl","NodeDatumMetadataUrlHelper","_NodeDatumMetadataUrl","NodeDatumUrlHelperMixin","sources","datumReadingUrl","readingType","tolerance","streamDatumUrl","streamReadingUrl","NodeDatumUrlHelper","_NodeDatumUrlHelperMi","SolarUserDefaultPath","SolarUserPathKey","SolarUserApiPathV1","UserUrlHelperMixin","whoamiUrl","viewNodesUrl","viewPendingNodesUrl","viewArchivedNodesUrl","updateNodeArchivedStatusUrl","archived","nimAuthorizeUrl","NodeInstructionUrlHelperMixin","viewInstructionUrl","instructionId","viewActiveInstructionsUrl","viewPendingInstructionsUrl","updateInstructionStateUrl","state","urlEncodeInstructionParameters","queueInstructionUrl","topic","queueInstructionsUrl","instructionParameter","NodeInstructionUrlHelper","_NodeInstructionUrlHe","NodeMetadataUrlHelperMixin","viewNodeMetadataUrl","addNodeMetadataUrl","replaceNodeMetadataUrl","deleteNodeMetadataUrl","findNodeMetadataUrl","NodeMetadataUrlHelper","_NodeMetadataUrlHelpe","UserAuthTokenUrlHelperMixin","listAllAuthTokensUrl","generateAuthTokenUrl","authTokenUrl","deleteAuthTokenUrl","updateAuthTokenSecurityPolicyUrl","replaceAuthTokenSecurityPolicyUrl","updateAuthTokenStatusUrl","status","UserAuthTokenUrlHelper","_UserAuthTokenUrlHelp","UserDatumAuxiliaryUrlHelperMixin","userDatumAuxiliaryBaseUrl","listUserDatumAuxiliaryUrl","userDatumAuxiliaryIdUrl","userDatumAuxiliaryIdQueryUrl","storeUserDatumAuxiliaryUrl","viewUserDatumAuxiliaryUrl","deleteUserDatumAuxiliaryUrl","UserDatumAuxiliaryUrlHelper","_UserDatumAuxiliaryUr","UserMetadataUrlHelperMixin","findUserMetadataUrl","addUserMetadataUrl","replaceUserMetadataUrl","deleteUserMetadataUrl","UserMetadataUrlHelper","_UserMetadataUrlHelpe","logLevel","consoleLog","console","logFn","error","warn","log","logLevels","DEBUG","INFO","WARN","ERROR","OFF","Logger","debug","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","datumForStreamData","streamDatumForData"],"mappings":"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EAAEgB,GAAG,CAAC1J,CAAC,CAAC,CAAC,CAAA;AAC1B,WAAA;AACD,SAAC,MAAM;AACNqjB,UAAAA,WAAW,CAAC3a,IAAI,EAAEgB,GAAG,CAAC,CAAA;AACvB,SAAA;AACD,OAAA;AACD,KAAA;AACD,GAAA;AACA,EAAA,OAAOhH,MAAM,CAAA;AACd,CAAA;AAIA,eAAe;AACd+f,EAAAA,aAAa,EAAEA,aAAa;AAC5BQ,EAAAA,cAAc,EAAEA,cAAAA;AACjB,CAAC;;ACnFD;AACA;AACA;AACA;AACA;AACA,IAAMK,oBAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAA;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EA,IA6EMC,sBAAsB,gBAAA,YAAA;AAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,EAAA,SAAAA,sBAAYC,CAAAA,KAAK,EAAEC,WAAW,EAAE;AAAAliB,IAAAA,eAAA,OAAAgiB,sBAAA,CAAA,CAAA;AAC/B;AACF;AACA;AACA;IACE,IAAI,CAACG,OAAO,GAAGF,KAAK,CAAA;;AAEpB;AACF;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAGA,WAAW,IAAI,IAAI5C,WAAW,EAAE,CAAA;;AAEnD;AACF;AACA;AACA;AACA;AACE,IAAA,IAAI,CAAC8C,WAAW,GAAG,IAAI7B,WAAW,EAAE,CAAA;;AAEpC;AACF;AACA;AACA;AACA;AACE,IAAA,IAAI,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"}